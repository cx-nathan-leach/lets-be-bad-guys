{
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "CheckmarxOne-Container Security",
          "guid": "3aaeea89-14a9-4b83-a6f3-86b209d7e887",
          "organization": "Checkmarx",
          "rules": [],
          "fullName": "Checkmarx Container Security 3.40.0",
          "informationUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
          "productSuite": "CheckmarxOne",
          "semanticVersion": "3.40.0",
          "shortDescription": {
            "text": "Container security analysis scanner."
          }
        }
      },
      "results": [],
      "automationDetails": {
        "description": {
          "text": "Container security analysis scan with CheckmarxOne Container Security"
        },
        "guid": "127418ed-1a40-4473-b50b-6a8555e1d36c",
        "id": "projectid/44779275-8597-4882-ae95-c843d0445845/scanid/127418ed-1a40-4473-b50b-6a8555e1d36c/",
        "correlationGuid": "44779275-8597-4882-ae95-c843d0445845"
      },
      "columnKind": "unicodeCodePoints",
      "versionControlProvenance": [
        {
          "branch": "master",
          "properties": {
            "sourceType": "github",
            "sourceOrigin": "webapp"
          },
          "repositoryUri": "https://github.com/cx-nathan-leach/lets-be-bad-guys.git",
          "asOfTimeUtc": "2025-07-02T18:26:16.562424Z"
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "CheckmarxOne-KICS",
          "guid": "93ae2d79-7445-4da2-943f-c6e17e96de7d",
          "organization": "Checkmarx",
          "rules": [],
          "fullName": "Checkmarx KICS 2.1.10",
          "informationUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
          "productSuite": "CheckmarxOne",
          "semanticVersion": "2.1.10",
          "shortDescription": {
            "text": "Infrastructure-As-Code scanner."
          }
        }
      },
      "results": [],
      "automationDetails": {
        "description": {
          "text": "Infrastructure-As-Code analysis scan with CheckmarxOne KICS"
        },
        "guid": "127418ed-1a40-4473-b50b-6a8555e1d36c",
        "id": "projectid/44779275-8597-4882-ae95-c843d0445845/scanid/127418ed-1a40-4473-b50b-6a8555e1d36c/",
        "correlationGuid": "44779275-8597-4882-ae95-c843d0445845"
      },
      "columnKind": "unicodeCodePoints",
      "versionControlProvenance": [
        {
          "branch": "master",
          "properties": {
            "sourceType": "github",
            "sourceOrigin": "webapp"
          },
          "repositoryUri": "https://github.com/cx-nathan-leach/lets-be-bad-guys.git",
          "asOfTimeUtc": "2025-07-02T18:26:16.562424Z"
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "CheckmarxOne-SCA",
          "guid": "3535ec30-c264-4cfb-a816-67984dc28151",
          "organization": "Checkmarx",
          "rules": [
            {
              "id": "CVE-2016-9013",
              "help": {
                "text": "CVE-2016-9013\nDjango 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary. Branches prior to 1.8.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-mv8g-fhh6-6267\nhttps://www.djangoproject.com/weblog/2016/nov/01/security-releases/\nhttps://github.com/django/django/commit/da7910d4834726eca596af0a830762fa5fb2dfd9\nhttps://github.com/django/django/commit/34e10720d81b8d407aa14d763b6a7fe8f13b4f2e\nhttps://github.com/django/django/commit/4844d86c7728c1a5a3bbce4ad336a8d32304072b\nhttps://github.com/django/django/commit/70f99952965a430daf69eeb9947079aae535d2d0",
                "markdown": "# CVE-2016-9013\n## Description\nDjango 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary. Branches prior to 1.8.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-mv8g-fhh6-6267](https://github.com/advisories/GHSA-mv8g-fhh6-6267)\n* [https://www.djangoproject.com/weblog/2016/nov/01/security-releases/](https://www.djangoproject.com/weblog/2016/nov/01/security-releases/)\n* [https://github.com/django/django/commit/da7910d4834726eca596af0a830762fa5fb2dfd9](https://github.com/django/django/commit/da7910d4834726eca596af0a830762fa5fb2dfd9)\n* [https://github.com/django/django/commit/34e10720d81b8d407aa14d763b6a7fe8f13b4f2e](https://github.com/django/django/commit/34e10720d81b8d407aa14d763b6a7fe8f13b4f2e)\n* [https://github.com/django/django/commit/4844d86c7728c1a5a3bbce4ad336a8d32304072b](https://github.com/django/django/commit/4844d86c7728c1a5a3bbce4ad336a8d32304072b)\n* [https://github.com/django/django/commit/70f99952965a430daf69eeb9947079aae535d2d0](https://github.com/django/django/commit/70f99952965a430daf69eeb9947079aae535d2d0)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-mv8g-fhh6-6267",
                    "https://www.djangoproject.com/weblog/2016/nov/01/security-releases/",
                    "https://github.com/django/django/commit/da7910d4834726eca596af0a830762fa5fb2dfd9",
                    "https://github.com/django/django/commit/34e10720d81b8d407aa14d763b6a7fe8f13b4f2e",
                    "https://github.com/django/django/commit/4844d86c7728c1a5a3bbce4ad336a8d32304072b",
                    "https://github.com/django/django/commit/70f99952965a430daf69eeb9947079aae535d2d0"
                  ]
                }
              },
              "name": "AdvisoryCve20169013",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "PARTIAL",
                  "Availability": "PARTIAL",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "HIGH",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "HIGH",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Critical",
                  "BaseScore": "9.8"
                },
                "cvss4": null,
                "cvePublishDate": "2016-12-09T20:59:00Z",
                "cwe": "CWE-798",
                "epssValue": "0.02723",
                "epssPercentile": "0.85266",
                "security-severity": "9.8"
              },
              "fullDescription": {
                "text": "CVE-2016-9013\nDjango 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary. Branches prior to 1.8.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-mv8g-fhh6-6267\nhttps://www.djangoproject.com/weblog/2016/nov/01/security-releases/\nhttps://github.com/django/django/commit/da7910d4834726eca596af0a830762fa5fb2dfd9\nhttps://github.com/django/django/commit/34e10720d81b8d407aa14d763b6a7fe8f13b4f2e\nhttps://github.com/django/django/commit/4844d86c7728c1a5a3bbce4ad336a8d32304072b\nhttps://github.com/django/django/commit/70f99952965a430daf69eeb9947079aae535d2d0",
                "markdown": "# CVE-2016-9013\n## Description\nDjango 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary. Branches prior to 1.8.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-mv8g-fhh6-6267](https://github.com/advisories/GHSA-mv8g-fhh6-6267)\n* [https://www.djangoproject.com/weblog/2016/nov/01/security-releases/](https://www.djangoproject.com/weblog/2016/nov/01/security-releases/)\n* [https://github.com/django/django/commit/da7910d4834726eca596af0a830762fa5fb2dfd9](https://github.com/django/django/commit/da7910d4834726eca596af0a830762fa5fb2dfd9)\n* [https://github.com/django/django/commit/34e10720d81b8d407aa14d763b6a7fe8f13b4f2e](https://github.com/django/django/commit/34e10720d81b8d407aa14d763b6a7fe8f13b4f2e)\n* [https://github.com/django/django/commit/4844d86c7728c1a5a3bbce4ad336a8d32304072b](https://github.com/django/django/commit/4844d86c7728c1a5a3bbce4ad336a8d32304072b)\n* [https://github.com/django/django/commit/70f99952965a430daf69eeb9947079aae535d2d0](https://github.com/django/django/commit/70f99952965a430daf69eeb9947079aae535d2d0)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-mv8g-fhh6-6267",
                    "https://www.djangoproject.com/weblog/2016/nov/01/security-releases/",
                    "https://github.com/django/django/commit/da7910d4834726eca596af0a830762fa5fb2dfd9",
                    "https://github.com/django/django/commit/34e10720d81b8d407aa14d763b6a7fe8f13b4f2e",
                    "https://github.com/django/django/commit/4844d86c7728c1a5a3bbce4ad336a8d32304072b",
                    "https://github.com/django/django/commit/70f99952965a430daf69eeb9947079aae535d2d0"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2016-9013",
              "shortDescription": {
                "text": "CVE-2016-9013"
              }
            },
            {
              "id": "CVE-2019-14234",
              "help": {
                "text": "CVE-2019-14234\nAn issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of \"OR 1=1\" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-6r97-cj55-9hrq\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://www.djangoproject.com/weblog/2019/aug/01/security-releases/\nhttps://github.com/django/django/commit/7deeabc7c7526786df6894429ce89a9c4b614086\nhttps://github.com/django/django/commit/4f5b58f5cd3c57fee9972ab074f8dc6895d8f387\nhttps://github.com/django/django/commit/f74b3ae3628c26e1b4f8db3d13a91d52a833a975\nhttps://github.com/django/django/commit/ed682a24fca774818542757651bfba576c3fc3ef",
                "markdown": "# CVE-2019-14234\n## Description\nAn issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of \"OR 1=1\" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-6r97-cj55-9hrq](https://github.com/advisories/GHSA-6r97-cj55-9hrq)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://www.djangoproject.com/weblog/2019/aug/01/security-releases/](https://www.djangoproject.com/weblog/2019/aug/01/security-releases/)\n* [https://github.com/django/django/commit/7deeabc7c7526786df6894429ce89a9c4b614086](https://github.com/django/django/commit/7deeabc7c7526786df6894429ce89a9c4b614086)\n* [https://github.com/django/django/commit/4f5b58f5cd3c57fee9972ab074f8dc6895d8f387](https://github.com/django/django/commit/4f5b58f5cd3c57fee9972ab074f8dc6895d8f387)\n* [https://github.com/django/django/commit/f74b3ae3628c26e1b4f8db3d13a91d52a833a975](https://github.com/django/django/commit/f74b3ae3628c26e1b4f8db3d13a91d52a833a975)\n* [https://github.com/django/django/commit/ed682a24fca774818542757651bfba576c3fc3ef](https://github.com/django/django/commit/ed682a24fca774818542757651bfba576c3fc3ef)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-6r97-cj55-9hrq",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://www.djangoproject.com/weblog/2019/aug/01/security-releases/",
                    "https://github.com/django/django/commit/7deeabc7c7526786df6894429ce89a9c4b614086",
                    "https://github.com/django/django/commit/4f5b58f5cd3c57fee9972ab074f8dc6895d8f387",
                    "https://github.com/django/django/commit/f74b3ae3628c26e1b4f8db3d13a91d52a833a975",
                    "https://github.com/django/django/commit/ed682a24fca774818542757651bfba576c3fc3ef"
                  ]
                }
              },
              "name": "AdvisoryCve201914234",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "PARTIAL",
                  "Availability": "PARTIAL",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "HIGH",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "HIGH",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Critical",
                  "BaseScore": "9.8"
                },
                "cvss4": null,
                "cvePublishDate": "2019-08-09T13:15:00Z",
                "cwe": "CWE-89",
                "epssValue": "0.19093",
                "epssPercentile": "0.95079",
                "security-severity": "9.8"
              },
              "fullDescription": {
                "text": "CVE-2019-14234\nAn issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of \"OR 1=1\" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-6r97-cj55-9hrq\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://www.djangoproject.com/weblog/2019/aug/01/security-releases/\nhttps://github.com/django/django/commit/7deeabc7c7526786df6894429ce89a9c4b614086\nhttps://github.com/django/django/commit/4f5b58f5cd3c57fee9972ab074f8dc6895d8f387\nhttps://github.com/django/django/commit/f74b3ae3628c26e1b4f8db3d13a91d52a833a975\nhttps://github.com/django/django/commit/ed682a24fca774818542757651bfba576c3fc3ef",
                "markdown": "# CVE-2019-14234\n## Description\nAn issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of \"OR 1=1\" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-6r97-cj55-9hrq](https://github.com/advisories/GHSA-6r97-cj55-9hrq)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://www.djangoproject.com/weblog/2019/aug/01/security-releases/](https://www.djangoproject.com/weblog/2019/aug/01/security-releases/)\n* [https://github.com/django/django/commit/7deeabc7c7526786df6894429ce89a9c4b614086](https://github.com/django/django/commit/7deeabc7c7526786df6894429ce89a9c4b614086)\n* [https://github.com/django/django/commit/4f5b58f5cd3c57fee9972ab074f8dc6895d8f387](https://github.com/django/django/commit/4f5b58f5cd3c57fee9972ab074f8dc6895d8f387)\n* [https://github.com/django/django/commit/f74b3ae3628c26e1b4f8db3d13a91d52a833a975](https://github.com/django/django/commit/f74b3ae3628c26e1b4f8db3d13a91d52a833a975)\n* [https://github.com/django/django/commit/ed682a24fca774818542757651bfba576c3fc3ef](https://github.com/django/django/commit/ed682a24fca774818542757651bfba576c3fc3ef)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-6r97-cj55-9hrq",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://www.djangoproject.com/weblog/2019/aug/01/security-releases/",
                    "https://github.com/django/django/commit/7deeabc7c7526786df6894429ce89a9c4b614086",
                    "https://github.com/django/django/commit/4f5b58f5cd3c57fee9972ab074f8dc6895d8f387",
                    "https://github.com/django/django/commit/f74b3ae3628c26e1b4f8db3d13a91d52a833a975",
                    "https://github.com/django/django/commit/ed682a24fca774818542757651bfba576c3fc3ef"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2019-14234",
              "shortDescription": {
                "text": "CVE-2019-14234"
              }
            },
            {
              "id": "CVE-2019-19844",
              "help": {
                "text": "CVE-2019-19844\nDjango before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)\n\nhttps://github.com/advisories/GHSA-vfq6-hq5r-27r6\nhttps://www.djangoproject.com/weblog/2019/dec/18/security-releases/\nhttps://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70\nhttps://packetstormsecurity.com/files/155872/Django-Account-Hijack.html",
                "markdown": "# CVE-2019-19844\n## Description\nDjango before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)\n## References\n* [https://github.com/advisories/GHSA-vfq6-hq5r-27r6](https://github.com/advisories/GHSA-vfq6-hq5r-27r6)\n* [https://www.djangoproject.com/weblog/2019/dec/18/security-releases/](https://www.djangoproject.com/weblog/2019/dec/18/security-releases/)\n* [https://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70](https://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70)\n* [https://packetstormsecurity.com/files/155872/Django-Account-Hijack.html](https://packetstormsecurity.com/files/155872/Django-Account-Hijack.html)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-vfq6-hq5r-27r6",
                    "https://www.djangoproject.com/weblog/2019/dec/18/security-releases/",
                    "https://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70",
                    "https://packetstormsecurity.com/files/155872/Django-Account-Hijack.html"
                  ]
                }
              },
              "name": "AdvisoryCve201919844",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "Medium",
                  "BaseScore": "5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "HIGH",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "HIGH",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Critical",
                  "BaseScore": "9.8"
                },
                "cvss4": null,
                "cvePublishDate": "2019-12-18T19:15:00Z",
                "cwe": "CWE-640",
                "epssValue": "0.12612",
                "epssPercentile": "0.93577",
                "security-severity": "9.8"
              },
              "fullDescription": {
                "text": "CVE-2019-19844\nDjango before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)\n\nhttps://github.com/advisories/GHSA-vfq6-hq5r-27r6\nhttps://www.djangoproject.com/weblog/2019/dec/18/security-releases/\nhttps://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70\nhttps://packetstormsecurity.com/files/155872/Django-Account-Hijack.html",
                "markdown": "# CVE-2019-19844\n## Description\nDjango before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)\n## References\n* [https://github.com/advisories/GHSA-vfq6-hq5r-27r6](https://github.com/advisories/GHSA-vfq6-hq5r-27r6)\n* [https://www.djangoproject.com/weblog/2019/dec/18/security-releases/](https://www.djangoproject.com/weblog/2019/dec/18/security-releases/)\n* [https://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70](https://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70)\n* [https://packetstormsecurity.com/files/155872/Django-Account-Hijack.html](https://packetstormsecurity.com/files/155872/Django-Account-Hijack.html)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-vfq6-hq5r-27r6",
                    "https://www.djangoproject.com/weblog/2019/dec/18/security-releases/",
                    "https://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70",
                    "https://packetstormsecurity.com/files/155872/Django-Account-Hijack.html"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2019-19844",
              "shortDescription": {
                "text": "CVE-2019-19844"
              }
            },
            {
              "id": "CVE-2020-7471",
              "help": {
                "text": "CVE-2020-7471\nDjango before 1.11.28, 2.x before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.\n\nhttps://github.com/advisories/GHSA-hmr4-m2h5-33qx\nhttps://www.djangoproject.com/weblog/2020/feb/03/security-releases/\nhttps://usn.ubuntu.com/4264-1/\nhttps://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136",
                "markdown": "# CVE-2020-7471\n## Description\nDjango before 1.11.28, 2.x before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.\n## References\n* [https://github.com/advisories/GHSA-hmr4-m2h5-33qx](https://github.com/advisories/GHSA-hmr4-m2h5-33qx)\n* [https://www.djangoproject.com/weblog/2020/feb/03/security-releases/](https://www.djangoproject.com/weblog/2020/feb/03/security-releases/)\n* [https://usn.ubuntu.com/4264-1/](https://usn.ubuntu.com/4264-1/)\n* [https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136](https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-hmr4-m2h5-33qx",
                    "https://www.djangoproject.com/weblog/2020/feb/03/security-releases/",
                    "https://usn.ubuntu.com/4264-1/",
                    "https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136"
                  ]
                }
              },
              "name": "AdvisoryCve20207471",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "PARTIAL",
                  "Availability": "PARTIAL",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "HIGH",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "HIGH",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Critical",
                  "BaseScore": "9.8"
                },
                "cvss4": null,
                "cvePublishDate": "2020-02-03T12:15:00Z",
                "cwe": "CWE-89",
                "epssValue": "0.08683",
                "epssPercentile": "0.91961",
                "security-severity": "9.8"
              },
              "fullDescription": {
                "text": "CVE-2020-7471\nDjango before 1.11.28, 2.x before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.\n\nhttps://github.com/advisories/GHSA-hmr4-m2h5-33qx\nhttps://www.djangoproject.com/weblog/2020/feb/03/security-releases/\nhttps://usn.ubuntu.com/4264-1/\nhttps://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136",
                "markdown": "# CVE-2020-7471\n## Description\nDjango before 1.11.28, 2.x before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.\n## References\n* [https://github.com/advisories/GHSA-hmr4-m2h5-33qx](https://github.com/advisories/GHSA-hmr4-m2h5-33qx)\n* [https://www.djangoproject.com/weblog/2020/feb/03/security-releases/](https://www.djangoproject.com/weblog/2020/feb/03/security-releases/)\n* [https://usn.ubuntu.com/4264-1/](https://usn.ubuntu.com/4264-1/)\n* [https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136](https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-hmr4-m2h5-33qx",
                    "https://www.djangoproject.com/weblog/2020/feb/03/security-releases/",
                    "https://usn.ubuntu.com/4264-1/",
                    "https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2020-7471",
              "shortDescription": {
                "text": "CVE-2020-7471"
              }
            },
            {
              "id": "CVE-2022-28346",
              "help": {
                "text": "CVE-2022-28346\nAn issue was discovered in Django before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.\n\nhttps://github.com/advisories/GHSA-2gwj-7jmv-h26r\nhttps://www.openwall.com/lists/oss-security/2022/04/11/1\nhttps://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200\nhttps://docs.djangoproject.com/en/4.0/releases/4.0.4/",
                "markdown": "# CVE-2022-28346\n## Description\nAn issue was discovered in Django before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.\n## References\n* [https://github.com/advisories/GHSA-2gwj-7jmv-h26r](https://github.com/advisories/GHSA-2gwj-7jmv-h26r)\n* [https://www.openwall.com/lists/oss-security/2022/04/11/1](https://www.openwall.com/lists/oss-security/2022/04/11/1)\n* [https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200](https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200)\n* [https://docs.djangoproject.com/en/4.0/releases/4.0.4/](https://docs.djangoproject.com/en/4.0/releases/4.0.4/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-2gwj-7jmv-h26r",
                    "https://www.openwall.com/lists/oss-security/2022/04/11/1",
                    "https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200",
                    "https://docs.djangoproject.com/en/4.0/releases/4.0.4/"
                  ]
                }
              },
              "name": "AdvisoryCve202228346",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "PARTIAL",
                  "Availability": "PARTIAL",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "HIGH",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "HIGH",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Critical",
                  "BaseScore": "9.8"
                },
                "cvss4": null,
                "cvePublishDate": "2022-04-12T05:15:00Z",
                "cwe": "CWE-89",
                "epssValue": "0.02413",
                "epssPercentile": "0.8428",
                "security-severity": "9.8"
              },
              "fullDescription": {
                "text": "CVE-2022-28346\nAn issue was discovered in Django before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.\n\nhttps://github.com/advisories/GHSA-2gwj-7jmv-h26r\nhttps://www.openwall.com/lists/oss-security/2022/04/11/1\nhttps://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200\nhttps://docs.djangoproject.com/en/4.0/releases/4.0.4/",
                "markdown": "# CVE-2022-28346\n## Description\nAn issue was discovered in Django before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.\n## References\n* [https://github.com/advisories/GHSA-2gwj-7jmv-h26r](https://github.com/advisories/GHSA-2gwj-7jmv-h26r)\n* [https://www.openwall.com/lists/oss-security/2022/04/11/1](https://www.openwall.com/lists/oss-security/2022/04/11/1)\n* [https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200](https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200)\n* [https://docs.djangoproject.com/en/4.0/releases/4.0.4/](https://docs.djangoproject.com/en/4.0/releases/4.0.4/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-2gwj-7jmv-h26r",
                    "https://www.openwall.com/lists/oss-security/2022/04/11/1",
                    "https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200",
                    "https://docs.djangoproject.com/en/4.0/releases/4.0.4/"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2022-28346",
              "shortDescription": {
                "text": "CVE-2022-28346"
              }
            },
            {
              "id": "CVE-2022-28347",
              "help": {
                "text": "CVE-2022-28347\nA SQL injection issue was discovered in QuerySet.explain() in Django before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.\n\nhttps://github.com/advisories/GHSA-w24h-v9qh-8gxj\nhttps://docs.djangoproject.com/en/4.0/releases/4.0.4/\nhttps://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81",
                "markdown": "# CVE-2022-28347\n## Description\nA SQL injection issue was discovered in QuerySet.explain() in Django before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.\n## References\n* [https://github.com/advisories/GHSA-w24h-v9qh-8gxj](https://github.com/advisories/GHSA-w24h-v9qh-8gxj)\n* [https://docs.djangoproject.com/en/4.0/releases/4.0.4/](https://docs.djangoproject.com/en/4.0/releases/4.0.4/)\n* [https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81](https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-w24h-v9qh-8gxj",
                    "https://docs.djangoproject.com/en/4.0/releases/4.0.4/",
                    "https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81"
                  ]
                }
              },
              "name": "AdvisoryCve202228347",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "PARTIAL",
                  "Availability": "PARTIAL",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "HIGH",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "HIGH",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Critical",
                  "BaseScore": "9.8"
                },
                "cvss4": null,
                "cvePublishDate": "2022-04-12T05:15:00Z",
                "cwe": "CWE-89",
                "epssValue": "0.00831",
                "epssPercentile": "0.73437",
                "security-severity": "9.8"
              },
              "fullDescription": {
                "text": "CVE-2022-28347\nA SQL injection issue was discovered in QuerySet.explain() in Django before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.\n\nhttps://github.com/advisories/GHSA-w24h-v9qh-8gxj\nhttps://docs.djangoproject.com/en/4.0/releases/4.0.4/\nhttps://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81",
                "markdown": "# CVE-2022-28347\n## Description\nA SQL injection issue was discovered in QuerySet.explain() in Django before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.\n## References\n* [https://github.com/advisories/GHSA-w24h-v9qh-8gxj](https://github.com/advisories/GHSA-w24h-v9qh-8gxj)\n* [https://docs.djangoproject.com/en/4.0/releases/4.0.4/](https://docs.djangoproject.com/en/4.0/releases/4.0.4/)\n* [https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81](https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-w24h-v9qh-8gxj",
                    "https://docs.djangoproject.com/en/4.0/releases/4.0.4/",
                    "https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2022-28347",
              "shortDescription": {
                "text": "CVE-2022-28347"
              }
            },
            {
              "id": "CVE-2023-31047",
              "help": {
                "text": "CVE-2023-31047\nIn Django prior to 3.2.19, 4.1.x prior to 4.1.9, and 4.2.x prior to 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by \"forms.FileField\" or \"forms.ImageField\" (only the last uploaded file was validated). However, Django's \"Uploading multiple files\" documentation suggested otherwise.\n\nhttps://github.com/advisories/GHSA-r3xc-prgr-mg9p\nhttps://code.djangoproject.com/ticket/31710\nhttps://github.com/django/django/commit/fb4c55d9ec4bb812a7fb91fa20510d91645e411b\nhttps://www.djangoproject.com/weblog/2023/may/03/security-releases",
                "markdown": "# CVE-2023-31047\n## Description\nIn Django prior to 3.2.19, 4.1.x prior to 4.1.9, and 4.2.x prior to 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by \"forms.FileField\" or \"forms.ImageField\" (only the last uploaded file was validated). However, Django's \"Uploading multiple files\" documentation suggested otherwise.\n## References\n* [https://github.com/advisories/GHSA-r3xc-prgr-mg9p](https://github.com/advisories/GHSA-r3xc-prgr-mg9p)\n* [https://code.djangoproject.com/ticket/31710](https://code.djangoproject.com/ticket/31710)\n* [https://github.com/django/django/commit/fb4c55d9ec4bb812a7fb91fa20510d91645e411b](https://github.com/django/django/commit/fb4c55d9ec4bb812a7fb91fa20510d91645e411b)\n* [https://www.djangoproject.com/weblog/2023/may/03/security-releases](https://www.djangoproject.com/weblog/2023/may/03/security-releases)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-r3xc-prgr-mg9p",
                    "https://code.djangoproject.com/ticket/31710",
                    "https://github.com/django/django/commit/fb4c55d9ec4bb812a7fb91fa20510d91645e411b",
                    "https://www.djangoproject.com/weblog/2023/may/03/security-releases"
                  ]
                }
              },
              "name": "AdvisoryCve202331047",
              "properties": {
                "cvss2": null,
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "HIGH",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "HIGH",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Critical",
                  "BaseScore": "9.8"
                },
                "cvss4": null,
                "cvePublishDate": "2023-05-07T02:15:00Z",
                "cwe": "CWE-20",
                "epssValue": "0.00063",
                "epssPercentile": "0.19971",
                "security-severity": "9.8"
              },
              "fullDescription": {
                "text": "CVE-2023-31047\nIn Django prior to 3.2.19, 4.1.x prior to 4.1.9, and 4.2.x prior to 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by \"forms.FileField\" or \"forms.ImageField\" (only the last uploaded file was validated). However, Django's \"Uploading multiple files\" documentation suggested otherwise.\n\nhttps://github.com/advisories/GHSA-r3xc-prgr-mg9p\nhttps://code.djangoproject.com/ticket/31710\nhttps://github.com/django/django/commit/fb4c55d9ec4bb812a7fb91fa20510d91645e411b\nhttps://www.djangoproject.com/weblog/2023/may/03/security-releases",
                "markdown": "# CVE-2023-31047\n## Description\nIn Django prior to 3.2.19, 4.1.x prior to 4.1.9, and 4.2.x prior to 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by \"forms.FileField\" or \"forms.ImageField\" (only the last uploaded file was validated). However, Django's \"Uploading multiple files\" documentation suggested otherwise.\n## References\n* [https://github.com/advisories/GHSA-r3xc-prgr-mg9p](https://github.com/advisories/GHSA-r3xc-prgr-mg9p)\n* [https://code.djangoproject.com/ticket/31710](https://code.djangoproject.com/ticket/31710)\n* [https://github.com/django/django/commit/fb4c55d9ec4bb812a7fb91fa20510d91645e411b](https://github.com/django/django/commit/fb4c55d9ec4bb812a7fb91fa20510d91645e411b)\n* [https://www.djangoproject.com/weblog/2023/may/03/security-releases](https://www.djangoproject.com/weblog/2023/may/03/security-releases)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-r3xc-prgr-mg9p",
                    "https://code.djangoproject.com/ticket/31710",
                    "https://github.com/django/django/commit/fb4c55d9ec4bb812a7fb91fa20510d91645e411b",
                    "https://www.djangoproject.com/weblog/2023/may/03/security-releases"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2023-31047",
              "shortDescription": {
                "text": "CVE-2023-31047"
              }
            },
            {
              "id": "CVE-2023-5457",
              "help": {
                "text": "CVE-2023-5457\nA CWE-1269 \"Product Released in Non-Release Configuration\" vulnerability in the Django web framework used by the web application (due to the \"debug\" configuration parameter set to \"True\") allows a remote unauthenticated attacker to access critical information and have other unspecified impacts to the confidentiality, integrity, and availability of the application. This issue affects all versions of Django if and only if the user makes the debug configuration to \"True\".\n\nhttps://github.com/advisories/GHSA-2c4f-g4mj-r79j\nhttps://www.nozominetworks.com/labs/vulnerability-advisories-cve-2023-5457",
                "markdown": "# CVE-2023-5457\n## Description\nA CWE-1269 \"Product Released in Non-Release Configuration\" vulnerability in the Django web framework used by the web application (due to the \"debug\" configuration parameter set to \"True\") allows a remote unauthenticated attacker to access critical information and have other unspecified impacts to the confidentiality, integrity, and availability of the application. This issue affects all versions of Django if and only if the user makes the debug configuration to \"True\".\n## References\n* [https://github.com/advisories/GHSA-2c4f-g4mj-r79j](https://github.com/advisories/GHSA-2c4f-g4mj-r79j)\n* [https://www.nozominetworks.com/labs/vulnerability-advisories-cve-2023-5457](https://www.nozominetworks.com/labs/vulnerability-advisories-cve-2023-5457)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-2c4f-g4mj-r79j",
                    "https://www.nozominetworks.com/labs/vulnerability-advisories-cve-2023-5457"
                  ]
                }
              },
              "name": "AdvisoryCve20235457",
              "properties": {
                "cvss2": null,
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "HIGH",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "HIGH",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Critical",
                  "BaseScore": "9.8"
                },
                "cvss4": null,
                "cvePublishDate": "2024-03-05T12:15:47Z",
                "cwe": "NVD-CWE-Other",
                "epssValue": "0.00127",
                "epssPercentile": "0.33471",
                "security-severity": "9.8"
              },
              "fullDescription": {
                "text": "CVE-2023-5457\nA CWE-1269 \"Product Released in Non-Release Configuration\" vulnerability in the Django web framework used by the web application (due to the \"debug\" configuration parameter set to \"True\") allows a remote unauthenticated attacker to access critical information and have other unspecified impacts to the confidentiality, integrity, and availability of the application. This issue affects all versions of Django if and only if the user makes the debug configuration to \"True\".\n\nhttps://github.com/advisories/GHSA-2c4f-g4mj-r79j\nhttps://www.nozominetworks.com/labs/vulnerability-advisories-cve-2023-5457",
                "markdown": "# CVE-2023-5457\n## Description\nA CWE-1269 \"Product Released in Non-Release Configuration\" vulnerability in the Django web framework used by the web application (due to the \"debug\" configuration parameter set to \"True\") allows a remote unauthenticated attacker to access critical information and have other unspecified impacts to the confidentiality, integrity, and availability of the application. This issue affects all versions of Django if and only if the user makes the debug configuration to \"True\".\n## References\n* [https://github.com/advisories/GHSA-2c4f-g4mj-r79j](https://github.com/advisories/GHSA-2c4f-g4mj-r79j)\n* [https://www.nozominetworks.com/labs/vulnerability-advisories-cve-2023-5457](https://www.nozominetworks.com/labs/vulnerability-advisories-cve-2023-5457)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-2c4f-g4mj-r79j",
                    "https://www.nozominetworks.com/labs/vulnerability-advisories-cve-2023-5457"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2023-5457",
              "shortDescription": {
                "text": "CVE-2023-5457"
              }
            },
            {
              "id": "CVE-2021-30459",
              "help": {
                "text": "CVE-2021-30459\nA SQL Injection issue in the SQL Panel in Jazzband Django Debug Toolbar before 1.11.1, 2.x before 2.2.1, and 3.x before 3.2.1 allows attackers to execute SQL statements by changing the raw_sql input field of the SQL explain, analyze, or select form.\n\n\n\nhttps://github.com/advisories/GHSA-pghf-347x-c2gj\nhttps://www.djangoproject.com/weblog/2021/apr/14/debug-toolbar-security-releases/\nhttps://github.com/jazzband/django-debug-toolbar/commit/38e1bd7fce7ec234ec9d52e0eff2414ca6af8fdc",
                "markdown": "# CVE-2021-30459\n## Description\nA SQL Injection issue in the SQL Panel in Jazzband Django Debug Toolbar before 1.11.1, 2.x before 2.2.1, and 3.x before 3.2.1 allows attackers to execute SQL statements by changing the raw_sql input field of the SQL explain, analyze, or select form.\n\n\n## References\n* [https://github.com/advisories/GHSA-pghf-347x-c2gj](https://github.com/advisories/GHSA-pghf-347x-c2gj)\n* [https://www.djangoproject.com/weblog/2021/apr/14/debug-toolbar-security-releases/](https://www.djangoproject.com/weblog/2021/apr/14/debug-toolbar-security-releases/)\n* [https://github.com/jazzband/django-debug-toolbar/commit/38e1bd7fce7ec234ec9d52e0eff2414ca6af8fdc](https://github.com/jazzband/django-debug-toolbar/commit/38e1bd7fce7ec234ec9d52e0eff2414ca6af8fdc)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-pghf-347x-c2gj",
                    "https://www.djangoproject.com/weblog/2021/apr/14/debug-toolbar-security-releases/",
                    "https://github.com/jazzband/django-debug-toolbar/commit/38e1bd7fce7ec234ec9d52e0eff2414ca6af8fdc"
                  ]
                }
              },
              "name": "AdvisoryCve202130459",
              "properties": {
                "cvss2": null,
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "HIGH",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "HIGH",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Critical",
                  "BaseScore": "9.8"
                },
                "cvss4": null,
                "cvePublishDate": "2021-04-14T18:15:00Z",
                "cwe": "CWE-89",
                "epssValue": "0.00434",
                "epssPercentile": "0.61656",
                "security-severity": "9.8"
              },
              "fullDescription": {
                "text": "CVE-2021-30459\nA SQL Injection issue in the SQL Panel in Jazzband Django Debug Toolbar before 1.11.1, 2.x before 2.2.1, and 3.x before 3.2.1 allows attackers to execute SQL statements by changing the raw_sql input field of the SQL explain, analyze, or select form.\n\n\n\nhttps://github.com/advisories/GHSA-pghf-347x-c2gj\nhttps://www.djangoproject.com/weblog/2021/apr/14/debug-toolbar-security-releases/\nhttps://github.com/jazzband/django-debug-toolbar/commit/38e1bd7fce7ec234ec9d52e0eff2414ca6af8fdc",
                "markdown": "# CVE-2021-30459\n## Description\nA SQL Injection issue in the SQL Panel in Jazzband Django Debug Toolbar before 1.11.1, 2.x before 2.2.1, and 3.x before 3.2.1 allows attackers to execute SQL statements by changing the raw_sql input field of the SQL explain, analyze, or select form.\n\n\n## References\n* [https://github.com/advisories/GHSA-pghf-347x-c2gj](https://github.com/advisories/GHSA-pghf-347x-c2gj)\n* [https://www.djangoproject.com/weblog/2021/apr/14/debug-toolbar-security-releases/](https://www.djangoproject.com/weblog/2021/apr/14/debug-toolbar-security-releases/)\n* [https://github.com/jazzband/django-debug-toolbar/commit/38e1bd7fce7ec234ec9d52e0eff2414ca6af8fdc](https://github.com/jazzband/django-debug-toolbar/commit/38e1bd7fce7ec234ec9d52e0eff2414ca6af8fdc)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-pghf-347x-c2gj",
                    "https://www.djangoproject.com/weblog/2021/apr/14/debug-toolbar-security-releases/",
                    "https://github.com/jazzband/django-debug-toolbar/commit/38e1bd7fce7ec234ec9d52e0eff2414ca6af8fdc"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2021-30459",
              "shortDescription": {
                "text": "CVE-2021-30459"
              }
            },
            {
              "id": "CVE-2020-9402",
              "help": {
                "text": "CVE-2020-9402\nDjango 1.8.x before 1.11.29, 2.x before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.\n\nhttps://github.com/advisories/GHSA-3gh2-xw74-jmcw\nhttps://usn.ubuntu.com/4296-1/\nhttps://www.djangoproject.com/weblog/2020/mar/04/security-releases/\nhttps://github.com/django/django/commit/6695d29b1c1ce979725816295a26ecc64ae0e927",
                "markdown": "# CVE-2020-9402\n## Description\nDjango 1.8.x before 1.11.29, 2.x before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.\n## References\n* [https://github.com/advisories/GHSA-3gh2-xw74-jmcw](https://github.com/advisories/GHSA-3gh2-xw74-jmcw)\n* [https://usn.ubuntu.com/4296-1/](https://usn.ubuntu.com/4296-1/)\n* [https://www.djangoproject.com/weblog/2020/mar/04/security-releases/](https://www.djangoproject.com/weblog/2020/mar/04/security-releases/)\n* [https://github.com/django/django/commit/6695d29b1c1ce979725816295a26ecc64ae0e927](https://github.com/django/django/commit/6695d29b1c1ce979725816295a26ecc64ae0e927)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-3gh2-xw74-jmcw",
                    "https://usn.ubuntu.com/4296-1/",
                    "https://www.djangoproject.com/weblog/2020/mar/04/security-releases/",
                    "https://github.com/django/django/commit/6695d29b1c1ce979725816295a26ecc64ae0e927"
                  ]
                }
              },
              "name": "AdvisoryCve20209402",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "PARTIAL",
                  "Availability": "PARTIAL",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss3": {
                  "PrivilegesRequired": "LOW",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "HIGH",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "HIGH",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "8.8"
                },
                "cvss4": null,
                "cvePublishDate": "2020-03-05T15:15:00Z",
                "cwe": "CWE-89",
                "epssValue": "0.5752",
                "epssPercentile": "0.98006",
                "security-severity": "8.8"
              },
              "fullDescription": {
                "text": "CVE-2020-9402\nDjango 1.8.x before 1.11.29, 2.x before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.\n\nhttps://github.com/advisories/GHSA-3gh2-xw74-jmcw\nhttps://usn.ubuntu.com/4296-1/\nhttps://www.djangoproject.com/weblog/2020/mar/04/security-releases/\nhttps://github.com/django/django/commit/6695d29b1c1ce979725816295a26ecc64ae0e927",
                "markdown": "# CVE-2020-9402\n## Description\nDjango 1.8.x before 1.11.29, 2.x before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.\n## References\n* [https://github.com/advisories/GHSA-3gh2-xw74-jmcw](https://github.com/advisories/GHSA-3gh2-xw74-jmcw)\n* [https://usn.ubuntu.com/4296-1/](https://usn.ubuntu.com/4296-1/)\n* [https://www.djangoproject.com/weblog/2020/mar/04/security-releases/](https://www.djangoproject.com/weblog/2020/mar/04/security-releases/)\n* [https://github.com/django/django/commit/6695d29b1c1ce979725816295a26ecc64ae0e927](https://github.com/django/django/commit/6695d29b1c1ce979725816295a26ecc64ae0e927)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-3gh2-xw74-jmcw",
                    "https://usn.ubuntu.com/4296-1/",
                    "https://www.djangoproject.com/weblog/2020/mar/04/security-releases/",
                    "https://github.com/django/django/commit/6695d29b1c1ce979725816295a26ecc64ae0e927"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2020-9402",
              "shortDescription": {
                "text": "CVE-2020-9402"
              }
            },
            {
              "id": "CVE-2024-38875",
              "help": {
                "text": "CVE-2024-38875\nAn issue was discovered in Django versions prior to 4.2.14, 5.0.x prior to 5.0.7, 5.1a1, and 5.1b1. \"urlize\" and \"urlizetrunc\" were subject to a potential Denial of Service attack via certain inputs with a very large number of brackets.\n\nhttps://github.com/advisories/GHSA-qg2p-9jwr-mmqf\nhttps://github.com/django/django/commit/d6664574539c1531612dea833d264ed5c2b04e1e\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://www.djangoproject.com/weblog/2024/jul/09/security-releases/",
                "markdown": "# CVE-2024-38875\n## Description\nAn issue was discovered in Django versions prior to 4.2.14, 5.0.x prior to 5.0.7, 5.1a1, and 5.1b1. \"urlize\" and \"urlizetrunc\" were subject to a potential Denial of Service attack via certain inputs with a very large number of brackets.\n## References\n* [https://github.com/advisories/GHSA-qg2p-9jwr-mmqf](https://github.com/advisories/GHSA-qg2p-9jwr-mmqf)\n* [https://github.com/django/django/commit/d6664574539c1531612dea833d264ed5c2b04e1e](https://github.com/django/django/commit/d6664574539c1531612dea833d264ed5c2b04e1e)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://www.djangoproject.com/weblog/2024/jul/09/security-releases/](https://www.djangoproject.com/weblog/2024/jul/09/security-releases/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-qg2p-9jwr-mmqf",
                    "https://github.com/django/django/commit/d6664574539c1531612dea833d264ed5c2b04e1e",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://www.djangoproject.com/weblog/2024/jul/09/security-releases/"
                  ]
                }
              },
              "name": "AdvisoryCve202438875",
              "properties": {
                "cvss2": null,
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": "",
                  "RemediationLevel": "",
                  "ReportConfidence": "REASONABLE",
                  "ConfidentialityRequirement": "",
                  "IntegrityRequirement": "",
                  "AvailabilityRequirement": "",
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": {
                  "BaseScore": "8.7",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "AttackRequirements": "NONE",
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "VulnerableSystemConfidentiality": "NONE",
                  "VulnerableSystemIntegrity": "NONE",
                  "VulnerableSystemAvailability": "HIGH",
                  "SubsequentSystemConfidentiality": "NONE",
                  "SubsequentSystemIntegrity": "NONE",
                  "SubsequentSystemAvailability": "NONE",
                  "ExploitMaturity": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High"
                },
                "cvePublishDate": "2024-07-10T05:15:12Z",
                "cwe": "CWE-130",
                "epssValue": "0.00121",
                "epssPercentile": "0.32206",
                "security-severity": "8.7"
              },
              "fullDescription": {
                "text": "CVE-2024-38875\nAn issue was discovered in Django versions prior to 4.2.14, 5.0.x prior to 5.0.7, 5.1a1, and 5.1b1. \"urlize\" and \"urlizetrunc\" were subject to a potential Denial of Service attack via certain inputs with a very large number of brackets.\n\nhttps://github.com/advisories/GHSA-qg2p-9jwr-mmqf\nhttps://github.com/django/django/commit/d6664574539c1531612dea833d264ed5c2b04e1e\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://www.djangoproject.com/weblog/2024/jul/09/security-releases/",
                "markdown": "# CVE-2024-38875\n## Description\nAn issue was discovered in Django versions prior to 4.2.14, 5.0.x prior to 5.0.7, 5.1a1, and 5.1b1. \"urlize\" and \"urlizetrunc\" were subject to a potential Denial of Service attack via certain inputs with a very large number of brackets.\n## References\n* [https://github.com/advisories/GHSA-qg2p-9jwr-mmqf](https://github.com/advisories/GHSA-qg2p-9jwr-mmqf)\n* [https://github.com/django/django/commit/d6664574539c1531612dea833d264ed5c2b04e1e](https://github.com/django/django/commit/d6664574539c1531612dea833d264ed5c2b04e1e)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://www.djangoproject.com/weblog/2024/jul/09/security-releases/](https://www.djangoproject.com/weblog/2024/jul/09/security-releases/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-qg2p-9jwr-mmqf",
                    "https://github.com/django/django/commit/d6664574539c1531612dea833d264ed5c2b04e1e",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://www.djangoproject.com/weblog/2024/jul/09/security-releases/"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2024-38875",
              "shortDescription": {
                "text": "CVE-2024-38875"
              }
            },
            {
              "id": "CVE-2024-39330",
              "help": {
                "text": "CVE-2024-39330\nAn issue was discovered in Django versions prior to 4.2.14, 5.0.x prior to 5.0.7, 5.1a1, and 5.1b1. Derived classes of the \"django.core.files.storage.Storage\" base class, when they override \"generate_filename()\" without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a \"save()\" call. (Built-in Storage sub-classes are unaffected.)\n\nhttps://github.com/advisories/GHSA-9jmf-237g-qf46\nhttps://github.com/django/django/commit/fe4a0bbe2088d0c2b331216dad21ccd0bb3ee80d\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://www.djangoproject.com/weblog/2024/jul/09/security-releases/",
                "markdown": "# CVE-2024-39330\n## Description\nAn issue was discovered in Django versions prior to 4.2.14, 5.0.x prior to 5.0.7, 5.1a1, and 5.1b1. Derived classes of the \"django.core.files.storage.Storage\" base class, when they override \"generate_filename()\" without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a \"save()\" call. (Built-in Storage sub-classes are unaffected.)\n## References\n* [https://github.com/advisories/GHSA-9jmf-237g-qf46](https://github.com/advisories/GHSA-9jmf-237g-qf46)\n* [https://github.com/django/django/commit/fe4a0bbe2088d0c2b331216dad21ccd0bb3ee80d](https://github.com/django/django/commit/fe4a0bbe2088d0c2b331216dad21ccd0bb3ee80d)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://www.djangoproject.com/weblog/2024/jul/09/security-releases/](https://www.djangoproject.com/weblog/2024/jul/09/security-releases/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-9jmf-237g-qf46",
                    "https://github.com/django/django/commit/fe4a0bbe2088d0c2b331216dad21ccd0bb3ee80d",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://www.djangoproject.com/weblog/2024/jul/09/security-releases/"
                  ]
                }
              },
              "name": "AdvisoryCve202439330",
              "properties": {
                "cvss2": null,
                "cvss3": {
                  "PrivilegesRequired": "LOW",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "LOW",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "LOW",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "",
                  "RemediationLevel": "",
                  "ReportConfidence": "",
                  "ConfidentialityRequirement": "",
                  "IntegrityRequirement": "",
                  "AvailabilityRequirement": "",
                  "Severity": "Medium",
                  "BaseScore": "5.4"
                },
                "cvss4": {
                  "BaseScore": "8.7",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "AttackRequirements": "NONE",
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "VulnerableSystemConfidentiality": "HIGH",
                  "VulnerableSystemIntegrity": "NONE",
                  "VulnerableSystemAvailability": "NONE",
                  "SubsequentSystemConfidentiality": "NONE",
                  "SubsequentSystemIntegrity": "NONE",
                  "SubsequentSystemAvailability": "NONE",
                  "ExploitMaturity": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High"
                },
                "cvePublishDate": "2024-07-10T05:15:12Z",
                "cwe": "CWE-22",
                "epssValue": "0.0005",
                "epssPercentile": "0.15393",
                "security-severity": "8.7"
              },
              "fullDescription": {
                "text": "CVE-2024-39330\nAn issue was discovered in Django versions prior to 4.2.14, 5.0.x prior to 5.0.7, 5.1a1, and 5.1b1. Derived classes of the \"django.core.files.storage.Storage\" base class, when they override \"generate_filename()\" without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a \"save()\" call. (Built-in Storage sub-classes are unaffected.)\n\nhttps://github.com/advisories/GHSA-9jmf-237g-qf46\nhttps://github.com/django/django/commit/fe4a0bbe2088d0c2b331216dad21ccd0bb3ee80d\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://www.djangoproject.com/weblog/2024/jul/09/security-releases/",
                "markdown": "# CVE-2024-39330\n## Description\nAn issue was discovered in Django versions prior to 4.2.14, 5.0.x prior to 5.0.7, 5.1a1, and 5.1b1. Derived classes of the \"django.core.files.storage.Storage\" base class, when they override \"generate_filename()\" without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a \"save()\" call. (Built-in Storage sub-classes are unaffected.)\n## References\n* [https://github.com/advisories/GHSA-9jmf-237g-qf46](https://github.com/advisories/GHSA-9jmf-237g-qf46)\n* [https://github.com/django/django/commit/fe4a0bbe2088d0c2b331216dad21ccd0bb3ee80d](https://github.com/django/django/commit/fe4a0bbe2088d0c2b331216dad21ccd0bb3ee80d)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://www.djangoproject.com/weblog/2024/jul/09/security-releases/](https://www.djangoproject.com/weblog/2024/jul/09/security-releases/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-9jmf-237g-qf46",
                    "https://github.com/django/django/commit/fe4a0bbe2088d0c2b331216dad21ccd0bb3ee80d",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://www.djangoproject.com/weblog/2024/jul/09/security-releases/"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2024-39330",
              "shortDescription": {
                "text": "CVE-2024-39330"
              }
            },
            {
              "id": "CVE-2024-39614",
              "help": {
                "text": "CVE-2024-39614\nAn issue was discovered in Django versions prior to 4.2.14, 5.0.x prior to 5.0.7, 5.1a1, and 5.1b1. The \"get_supported_language_variant()\" was subject to a potential Denial-of-Service attack when used with very long strings containing specific characters.\n\nhttps://github.com/advisories/GHSA-f6f8-9mx6-9mx2\nhttps://github.com/django/django/commit/9e9792228a6bb5d6402a5d645bc3be4cf364aefb\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://www.djangoproject.com/weblog/2024/jul/09/security-releases/",
                "markdown": "# CVE-2024-39614\n## Description\nAn issue was discovered in Django versions prior to 4.2.14, 5.0.x prior to 5.0.7, 5.1a1, and 5.1b1. The \"get_supported_language_variant()\" was subject to a potential Denial-of-Service attack when used with very long strings containing specific characters.\n## References\n* [https://github.com/advisories/GHSA-f6f8-9mx6-9mx2](https://github.com/advisories/GHSA-f6f8-9mx6-9mx2)\n* [https://github.com/django/django/commit/9e9792228a6bb5d6402a5d645bc3be4cf364aefb](https://github.com/django/django/commit/9e9792228a6bb5d6402a5d645bc3be4cf364aefb)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://www.djangoproject.com/weblog/2024/jul/09/security-releases/](https://www.djangoproject.com/weblog/2024/jul/09/security-releases/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-f6f8-9mx6-9mx2",
                    "https://github.com/django/django/commit/9e9792228a6bb5d6402a5d645bc3be4cf364aefb",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://www.djangoproject.com/weblog/2024/jul/09/security-releases/"
                  ]
                }
              },
              "name": "AdvisoryCve202439614",
              "properties": {
                "cvss2": null,
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": "",
                  "RemediationLevel": "",
                  "ReportConfidence": "",
                  "ConfidentialityRequirement": "",
                  "IntegrityRequirement": "",
                  "AvailabilityRequirement": "",
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": {
                  "BaseScore": "8.7",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "AttackRequirements": "NONE",
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "VulnerableSystemConfidentiality": "NONE",
                  "VulnerableSystemIntegrity": "NONE",
                  "VulnerableSystemAvailability": "HIGH",
                  "SubsequentSystemConfidentiality": "NONE",
                  "SubsequentSystemIntegrity": "NONE",
                  "SubsequentSystemAvailability": "NONE",
                  "ExploitMaturity": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High"
                },
                "cvePublishDate": "2024-07-10T05:15:12Z",
                "cwe": "CWE-130",
                "epssValue": "0.01449",
                "epssPercentile": "0.79907",
                "security-severity": "8.7"
              },
              "fullDescription": {
                "text": "CVE-2024-39614\nAn issue was discovered in Django versions prior to 4.2.14, 5.0.x prior to 5.0.7, 5.1a1, and 5.1b1. The \"get_supported_language_variant()\" was subject to a potential Denial-of-Service attack when used with very long strings containing specific characters.\n\nhttps://github.com/advisories/GHSA-f6f8-9mx6-9mx2\nhttps://github.com/django/django/commit/9e9792228a6bb5d6402a5d645bc3be4cf364aefb\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://www.djangoproject.com/weblog/2024/jul/09/security-releases/",
                "markdown": "# CVE-2024-39614\n## Description\nAn issue was discovered in Django versions prior to 4.2.14, 5.0.x prior to 5.0.7, 5.1a1, and 5.1b1. The \"get_supported_language_variant()\" was subject to a potential Denial-of-Service attack when used with very long strings containing specific characters.\n## References\n* [https://github.com/advisories/GHSA-f6f8-9mx6-9mx2](https://github.com/advisories/GHSA-f6f8-9mx6-9mx2)\n* [https://github.com/django/django/commit/9e9792228a6bb5d6402a5d645bc3be4cf364aefb](https://github.com/django/django/commit/9e9792228a6bb5d6402a5d645bc3be4cf364aefb)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://www.djangoproject.com/weblog/2024/jul/09/security-releases/](https://www.djangoproject.com/weblog/2024/jul/09/security-releases/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-f6f8-9mx6-9mx2",
                    "https://github.com/django/django/commit/9e9792228a6bb5d6402a5d645bc3be4cf364aefb",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://www.djangoproject.com/weblog/2024/jul/09/security-releases/"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2024-39614",
              "shortDescription": {
                "text": "CVE-2024-39614"
              }
            },
            {
              "id": "CVE-2024-53907",
              "help": {
                "text": "CVE-2024-53907\nAn issue was discovered in Django versions 1.6.3 through 4.2.16, 5.0a1 through 5.0.9, and 5.1a1 through 5.1.3. The `strip_tags()` method and `striptags` template filter are subject to a potential Denial-of-service attack via certain inputs containing large sequences of nested incomplete HTML entities.\n\nhttps://github.com/advisories/GHSA-8498-2h75-472j\nhttps://www.djangoproject.com/weblog/2024/dec/04/security-releases/\nhttps://github.com/django/django/commit/49ff1042aa66bb25eda87e9a8ef82f3b0ad4eeba\nhttps://github.com/django/django/blob/5.1.4/docs/releases/5.1.4.txt#L10\nhttps://www.openwall.com/lists/oss-security/2024/12/04/3",
                "markdown": "# CVE-2024-53907\n## Description\nAn issue was discovered in Django versions 1.6.3 through 4.2.16, 5.0a1 through 5.0.9, and 5.1a1 through 5.1.3. The `strip_tags()` method and `striptags` template filter are subject to a potential Denial-of-service attack via certain inputs containing large sequences of nested incomplete HTML entities.\n## References\n* [https://github.com/advisories/GHSA-8498-2h75-472j](https://github.com/advisories/GHSA-8498-2h75-472j)\n* [https://www.djangoproject.com/weblog/2024/dec/04/security-releases/](https://www.djangoproject.com/weblog/2024/dec/04/security-releases/)\n* [https://github.com/django/django/commit/49ff1042aa66bb25eda87e9a8ef82f3b0ad4eeba](https://github.com/django/django/commit/49ff1042aa66bb25eda87e9a8ef82f3b0ad4eeba)\n* [https://github.com/django/django/blob/5.1.4/docs/releases/5.1.4.txt#L10](https://github.com/django/django/blob/5.1.4/docs/releases/5.1.4.txt#L10)\n* [https://www.openwall.com/lists/oss-security/2024/12/04/3](https://www.openwall.com/lists/oss-security/2024/12/04/3)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-8498-2h75-472j",
                    "https://www.djangoproject.com/weblog/2024/dec/04/security-releases/",
                    "https://github.com/django/django/commit/49ff1042aa66bb25eda87e9a8ef82f3b0ad4eeba",
                    "https://github.com/django/django/blob/5.1.4/docs/releases/5.1.4.txt#L10",
                    "https://www.openwall.com/lists/oss-security/2024/12/04/3"
                  ]
                }
              },
              "name": "AdvisoryCve202453907",
              "properties": {
                "cvss2": null,
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": {
                  "BaseScore": "8.7",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "AttackRequirements": "NONE",
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "VulnerableSystemConfidentiality": "NONE",
                  "VulnerableSystemIntegrity": "NONE",
                  "VulnerableSystemAvailability": "HIGH",
                  "SubsequentSystemConfidentiality": "NONE",
                  "SubsequentSystemIntegrity": "NONE",
                  "SubsequentSystemAvailability": "NONE",
                  "ExploitMaturity": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High"
                },
                "cvePublishDate": "2024-12-06T12:15:17Z",
                "cwe": "CWE-770",
                "epssValue": "0.00081",
                "epssPercentile": "0.24944",
                "security-severity": "8.7"
              },
              "fullDescription": {
                "text": "CVE-2024-53907\nAn issue was discovered in Django versions 1.6.3 through 4.2.16, 5.0a1 through 5.0.9, and 5.1a1 through 5.1.3. The `strip_tags()` method and `striptags` template filter are subject to a potential Denial-of-service attack via certain inputs containing large sequences of nested incomplete HTML entities.\n\nhttps://github.com/advisories/GHSA-8498-2h75-472j\nhttps://www.djangoproject.com/weblog/2024/dec/04/security-releases/\nhttps://github.com/django/django/commit/49ff1042aa66bb25eda87e9a8ef82f3b0ad4eeba\nhttps://github.com/django/django/blob/5.1.4/docs/releases/5.1.4.txt#L10\nhttps://www.openwall.com/lists/oss-security/2024/12/04/3",
                "markdown": "# CVE-2024-53907\n## Description\nAn issue was discovered in Django versions 1.6.3 through 4.2.16, 5.0a1 through 5.0.9, and 5.1a1 through 5.1.3. The `strip_tags()` method and `striptags` template filter are subject to a potential Denial-of-service attack via certain inputs containing large sequences of nested incomplete HTML entities.\n## References\n* [https://github.com/advisories/GHSA-8498-2h75-472j](https://github.com/advisories/GHSA-8498-2h75-472j)\n* [https://www.djangoproject.com/weblog/2024/dec/04/security-releases/](https://www.djangoproject.com/weblog/2024/dec/04/security-releases/)\n* [https://github.com/django/django/commit/49ff1042aa66bb25eda87e9a8ef82f3b0ad4eeba](https://github.com/django/django/commit/49ff1042aa66bb25eda87e9a8ef82f3b0ad4eeba)\n* [https://github.com/django/django/blob/5.1.4/docs/releases/5.1.4.txt#L10](https://github.com/django/django/blob/5.1.4/docs/releases/5.1.4.txt#L10)\n* [https://www.openwall.com/lists/oss-security/2024/12/04/3](https://www.openwall.com/lists/oss-security/2024/12/04/3)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-8498-2h75-472j",
                    "https://www.djangoproject.com/weblog/2024/dec/04/security-releases/",
                    "https://github.com/django/django/commit/49ff1042aa66bb25eda87e9a8ef82f3b0ad4eeba",
                    "https://github.com/django/django/blob/5.1.4/docs/releases/5.1.4.txt#L10",
                    "https://www.openwall.com/lists/oss-security/2024/12/04/3"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2024-53907",
              "shortDescription": {
                "text": "CVE-2024-53907"
              }
            },
            {
              "id": "CVE-2016-9014",
              "help": {
                "text": "CVE-2016-9014\nDjango before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS. Branches prior to 1.8.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-3f2c-jm6v-cr35\nhttps://www.djangoproject.com/weblog/2016/nov/01/security-releases/\nhttps://github.com/django/django/commit/7fe2d8d940fdddd1a02c4754008a27060c4a03e9\nhttps://github.com/django/django/commit/884e113838e5a72b4b0ec9e5e87aa480f6aa4472\nhttps://github.com/django/django/commit/45acd6d836895a4c36575f48b3fb36a3dae98d19\nhttps://github.com/django/django/commit/c401ae9a7dfb1a94a8a61927ed541d6f93089587",
                "markdown": "# CVE-2016-9014\n## Description\nDjango before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS. Branches prior to 1.8.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-3f2c-jm6v-cr35](https://github.com/advisories/GHSA-3f2c-jm6v-cr35)\n* [https://www.djangoproject.com/weblog/2016/nov/01/security-releases/](https://www.djangoproject.com/weblog/2016/nov/01/security-releases/)\n* [https://github.com/django/django/commit/7fe2d8d940fdddd1a02c4754008a27060c4a03e9](https://github.com/django/django/commit/7fe2d8d940fdddd1a02c4754008a27060c4a03e9)\n* [https://github.com/django/django/commit/884e113838e5a72b4b0ec9e5e87aa480f6aa4472](https://github.com/django/django/commit/884e113838e5a72b4b0ec9e5e87aa480f6aa4472)\n* [https://github.com/django/django/commit/45acd6d836895a4c36575f48b3fb36a3dae98d19](https://github.com/django/django/commit/45acd6d836895a4c36575f48b3fb36a3dae98d19)\n* [https://github.com/django/django/commit/c401ae9a7dfb1a94a8a61927ed541d6f93089587](https://github.com/django/django/commit/c401ae9a7dfb1a94a8a61927ed541d6f93089587)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-3f2c-jm6v-cr35",
                    "https://www.djangoproject.com/weblog/2016/nov/01/security-releases/",
                    "https://github.com/django/django/commit/7fe2d8d940fdddd1a02c4754008a27060c4a03e9",
                    "https://github.com/django/django/commit/884e113838e5a72b4b0ec9e5e87aa480f6aa4472",
                    "https://github.com/django/django/commit/45acd6d836895a4c36575f48b3fb36a3dae98d19",
                    "https://github.com/django/django/commit/c401ae9a7dfb1a94a8a61927ed541d6f93089587"
                  ]
                }
              },
              "name": "AdvisoryCve20169014",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "MEDIUM",
                  "Confidentiality": "PARTIAL",
                  "Availability": "PARTIAL",
                  "ExploitCodeMaturity": "8.6",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "Medium",
                  "BaseScore": "6.8"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "HIGH",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "HIGH",
                  "Confidentiality": "HIGH",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "8.1"
                },
                "cvss4": null,
                "cvePublishDate": "2016-12-09T20:59:00Z",
                "cwe": "CWE-264",
                "epssValue": "0.02322",
                "epssPercentile": "0.84171",
                "security-severity": "8.1"
              },
              "fullDescription": {
                "text": "CVE-2016-9014\nDjango before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS. Branches prior to 1.8.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-3f2c-jm6v-cr35\nhttps://www.djangoproject.com/weblog/2016/nov/01/security-releases/\nhttps://github.com/django/django/commit/7fe2d8d940fdddd1a02c4754008a27060c4a03e9\nhttps://github.com/django/django/commit/884e113838e5a72b4b0ec9e5e87aa480f6aa4472\nhttps://github.com/django/django/commit/45acd6d836895a4c36575f48b3fb36a3dae98d19\nhttps://github.com/django/django/commit/c401ae9a7dfb1a94a8a61927ed541d6f93089587",
                "markdown": "# CVE-2016-9014\n## Description\nDjango before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS. Branches prior to 1.8.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-3f2c-jm6v-cr35](https://github.com/advisories/GHSA-3f2c-jm6v-cr35)\n* [https://www.djangoproject.com/weblog/2016/nov/01/security-releases/](https://www.djangoproject.com/weblog/2016/nov/01/security-releases/)\n* [https://github.com/django/django/commit/7fe2d8d940fdddd1a02c4754008a27060c4a03e9](https://github.com/django/django/commit/7fe2d8d940fdddd1a02c4754008a27060c4a03e9)\n* [https://github.com/django/django/commit/884e113838e5a72b4b0ec9e5e87aa480f6aa4472](https://github.com/django/django/commit/884e113838e5a72b4b0ec9e5e87aa480f6aa4472)\n* [https://github.com/django/django/commit/45acd6d836895a4c36575f48b3fb36a3dae98d19](https://github.com/django/django/commit/45acd6d836895a4c36575f48b3fb36a3dae98d19)\n* [https://github.com/django/django/commit/c401ae9a7dfb1a94a8a61927ed541d6f93089587](https://github.com/django/django/commit/c401ae9a7dfb1a94a8a61927ed541d6f93089587)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-3f2c-jm6v-cr35",
                    "https://www.djangoproject.com/weblog/2016/nov/01/security-releases/",
                    "https://github.com/django/django/commit/7fe2d8d940fdddd1a02c4754008a27060c4a03e9",
                    "https://github.com/django/django/commit/884e113838e5a72b4b0ec9e5e87aa480f6aa4472",
                    "https://github.com/django/django/commit/45acd6d836895a4c36575f48b3fb36a3dae98d19",
                    "https://github.com/django/django/commit/c401ae9a7dfb1a94a8a61927ed541d6f93089587"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2016-9014",
              "shortDescription": {
                "text": "CVE-2016-9014"
              }
            },
            {
              "id": "CVE-2016-7401",
              "help": {
                "text": "CVE-2016-7401\nThe cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.\n\nhttps://github.com/advisories/GHSA-crhm-qpjc-cm64\nhttps://www.djangoproject.com/weblog/2016/sep/26/security-releases/\nhttps://github.com/django/django/commit/d1bc980db1c0fffd6d60677e62f70beadb9fe64a\nhttps://github.com/django/django/commit/6118ab7d0676f0d622278e5be215f14fb5410b6a",
                "markdown": "# CVE-2016-7401\n## Description\nThe cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.\n## References\n* [https://github.com/advisories/GHSA-crhm-qpjc-cm64](https://github.com/advisories/GHSA-crhm-qpjc-cm64)\n* [https://www.djangoproject.com/weblog/2016/sep/26/security-releases/](https://www.djangoproject.com/weblog/2016/sep/26/security-releases/)\n* [https://github.com/django/django/commit/d1bc980db1c0fffd6d60677e62f70beadb9fe64a](https://github.com/django/django/commit/d1bc980db1c0fffd6d60677e62f70beadb9fe64a)\n* [https://github.com/django/django/commit/6118ab7d0676f0d622278e5be215f14fb5410b6a](https://github.com/django/django/commit/6118ab7d0676f0d622278e5be215f14fb5410b6a)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-crhm-qpjc-cm64",
                    "https://www.djangoproject.com/weblog/2016/sep/26/security-releases/",
                    "https://github.com/django/django/commit/d1bc980db1c0fffd6d60677e62f70beadb9fe64a",
                    "https://github.com/django/django/commit/6118ab7d0676f0d622278e5be215f14fb5410b6a"
                  ]
                }
              },
              "name": "AdvisoryCve20167401",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "Medium",
                  "BaseScore": "5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "HIGH",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": null,
                "cvePublishDate": "2016-10-03T18:59:00Z",
                "cwe": "CWE-254",
                "epssValue": "0.06495",
                "epssPercentile": "0.90685",
                "security-severity": "7.5"
              },
              "fullDescription": {
                "text": "CVE-2016-7401\nThe cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.\n\nhttps://github.com/advisories/GHSA-crhm-qpjc-cm64\nhttps://www.djangoproject.com/weblog/2016/sep/26/security-releases/\nhttps://github.com/django/django/commit/d1bc980db1c0fffd6d60677e62f70beadb9fe64a\nhttps://github.com/django/django/commit/6118ab7d0676f0d622278e5be215f14fb5410b6a",
                "markdown": "# CVE-2016-7401\n## Description\nThe cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.\n## References\n* [https://github.com/advisories/GHSA-crhm-qpjc-cm64](https://github.com/advisories/GHSA-crhm-qpjc-cm64)\n* [https://www.djangoproject.com/weblog/2016/sep/26/security-releases/](https://www.djangoproject.com/weblog/2016/sep/26/security-releases/)\n* [https://github.com/django/django/commit/d1bc980db1c0fffd6d60677e62f70beadb9fe64a](https://github.com/django/django/commit/d1bc980db1c0fffd6d60677e62f70beadb9fe64a)\n* [https://github.com/django/django/commit/6118ab7d0676f0d622278e5be215f14fb5410b6a](https://github.com/django/django/commit/6118ab7d0676f0d622278e5be215f14fb5410b6a)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-crhm-qpjc-cm64",
                    "https://www.djangoproject.com/weblog/2016/sep/26/security-releases/",
                    "https://github.com/django/django/commit/d1bc980db1c0fffd6d60677e62f70beadb9fe64a",
                    "https://github.com/django/django/commit/6118ab7d0676f0d622278e5be215f14fb5410b6a"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2016-7401",
              "shortDescription": {
                "text": "CVE-2016-7401"
              }
            },
            {
              "id": "CVE-2018-6188",
              "help": {
                "text": "CVE-2018-6188\ndjango.contrib.auth.forms.AuthenticationForm in Django 2.0 before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain potentially sensitive information by leveraging data exposure from the confirm_login_allowed() method, as demonstrated by discovering whether a user account is inactive. Branches prior to 1.11.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-rf4j-j272-fj86\nhttps://www.djangoproject.com/weblog/2018/feb/01/security-releases/\nhttps://github.com/django/django/commit/af33fb250e9847f1ca8c0ba0d72671d76659704f\nhttps://github.com/django/django/commit/c37bb28677295f6edda61d8ac461014ef0d3aeb2\nhttps://github.com/django/django/commit/57b95fedad5e0b83fc9c81466b7d1751c6427aae\nhttps://code.djangoproject.com/ticket/28645",
                "markdown": "# CVE-2018-6188\n## Description\ndjango.contrib.auth.forms.AuthenticationForm in Django 2.0 before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain potentially sensitive information by leveraging data exposure from the confirm_login_allowed() method, as demonstrated by discovering whether a user account is inactive. Branches prior to 1.11.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-rf4j-j272-fj86](https://github.com/advisories/GHSA-rf4j-j272-fj86)\n* [https://www.djangoproject.com/weblog/2018/feb/01/security-releases/](https://www.djangoproject.com/weblog/2018/feb/01/security-releases/)\n* [https://github.com/django/django/commit/af33fb250e9847f1ca8c0ba0d72671d76659704f](https://github.com/django/django/commit/af33fb250e9847f1ca8c0ba0d72671d76659704f)\n* [https://github.com/django/django/commit/c37bb28677295f6edda61d8ac461014ef0d3aeb2](https://github.com/django/django/commit/c37bb28677295f6edda61d8ac461014ef0d3aeb2)\n* [https://github.com/django/django/commit/57b95fedad5e0b83fc9c81466b7d1751c6427aae](https://github.com/django/django/commit/57b95fedad5e0b83fc9c81466b7d1751c6427aae)\n* [https://code.djangoproject.com/ticket/28645](https://code.djangoproject.com/ticket/28645)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-rf4j-j272-fj86",
                    "https://www.djangoproject.com/weblog/2018/feb/01/security-releases/",
                    "https://github.com/django/django/commit/af33fb250e9847f1ca8c0ba0d72671d76659704f",
                    "https://github.com/django/django/commit/c37bb28677295f6edda61d8ac461014ef0d3aeb2",
                    "https://github.com/django/django/commit/57b95fedad5e0b83fc9c81466b7d1751c6427aae",
                    "https://code.djangoproject.com/ticket/28645"
                  ]
                }
              },
              "name": "AdvisoryCve20186188",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "PARTIAL",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "NONE",
                  "Severity": "Medium",
                  "BaseScore": "5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "HIGH",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": null,
                "cvePublishDate": "2018-02-05T03:29:00Z",
                "cwe": "CWE-200",
                "epssValue": "0.01547",
                "epssPercentile": "0.80481",
                "security-severity": "7.5"
              },
              "fullDescription": {
                "text": "CVE-2018-6188\ndjango.contrib.auth.forms.AuthenticationForm in Django 2.0 before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain potentially sensitive information by leveraging data exposure from the confirm_login_allowed() method, as demonstrated by discovering whether a user account is inactive. Branches prior to 1.11.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-rf4j-j272-fj86\nhttps://www.djangoproject.com/weblog/2018/feb/01/security-releases/\nhttps://github.com/django/django/commit/af33fb250e9847f1ca8c0ba0d72671d76659704f\nhttps://github.com/django/django/commit/c37bb28677295f6edda61d8ac461014ef0d3aeb2\nhttps://github.com/django/django/commit/57b95fedad5e0b83fc9c81466b7d1751c6427aae\nhttps://code.djangoproject.com/ticket/28645",
                "markdown": "# CVE-2018-6188\n## Description\ndjango.contrib.auth.forms.AuthenticationForm in Django 2.0 before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain potentially sensitive information by leveraging data exposure from the confirm_login_allowed() method, as demonstrated by discovering whether a user account is inactive. Branches prior to 1.11.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-rf4j-j272-fj86](https://github.com/advisories/GHSA-rf4j-j272-fj86)\n* [https://www.djangoproject.com/weblog/2018/feb/01/security-releases/](https://www.djangoproject.com/weblog/2018/feb/01/security-releases/)\n* [https://github.com/django/django/commit/af33fb250e9847f1ca8c0ba0d72671d76659704f](https://github.com/django/django/commit/af33fb250e9847f1ca8c0ba0d72671d76659704f)\n* [https://github.com/django/django/commit/c37bb28677295f6edda61d8ac461014ef0d3aeb2](https://github.com/django/django/commit/c37bb28677295f6edda61d8ac461014ef0d3aeb2)\n* [https://github.com/django/django/commit/57b95fedad5e0b83fc9c81466b7d1751c6427aae](https://github.com/django/django/commit/57b95fedad5e0b83fc9c81466b7d1751c6427aae)\n* [https://code.djangoproject.com/ticket/28645](https://code.djangoproject.com/ticket/28645)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-rf4j-j272-fj86",
                    "https://www.djangoproject.com/weblog/2018/feb/01/security-releases/",
                    "https://github.com/django/django/commit/af33fb250e9847f1ca8c0ba0d72671d76659704f",
                    "https://github.com/django/django/commit/c37bb28677295f6edda61d8ac461014ef0d3aeb2",
                    "https://github.com/django/django/commit/57b95fedad5e0b83fc9c81466b7d1751c6427aae",
                    "https://code.djangoproject.com/ticket/28645"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2018-6188",
              "shortDescription": {
                "text": "CVE-2018-6188"
              }
            },
            {
              "id": "CVE-2019-14232",
              "help": {
                "text": "CVE-2019-14232\nAn issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-c4qh-4vgv-qc6g\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://www.djangoproject.com/weblog/2019/aug/01/security-releases/\nhttps://github.com/django/django/commit/7f65974f8219729c047fbbf8cd5cc9d80faefe77\nhttps://github.com/django/django/commit/c3289717c6f21a8cf23daff1c78c0c014b94041f\nhttps://github.com/django/django/commit/c23723a1551340cc7d3126f04fcfd178fa224193\nhttps://github.com/django/django/commit/42a66e969023c00536256469f0e8b8a099ef109d",
                "markdown": "# CVE-2019-14232\n## Description\nAn issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-c4qh-4vgv-qc6g](https://github.com/advisories/GHSA-c4qh-4vgv-qc6g)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://www.djangoproject.com/weblog/2019/aug/01/security-releases/](https://www.djangoproject.com/weblog/2019/aug/01/security-releases/)\n* [https://github.com/django/django/commit/7f65974f8219729c047fbbf8cd5cc9d80faefe77](https://github.com/django/django/commit/7f65974f8219729c047fbbf8cd5cc9d80faefe77)\n* [https://github.com/django/django/commit/c3289717c6f21a8cf23daff1c78c0c014b94041f](https://github.com/django/django/commit/c3289717c6f21a8cf23daff1c78c0c014b94041f)\n* [https://github.com/django/django/commit/c23723a1551340cc7d3126f04fcfd178fa224193](https://github.com/django/django/commit/c23723a1551340cc7d3126f04fcfd178fa224193)\n* [https://github.com/django/django/commit/42a66e969023c00536256469f0e8b8a099ef109d](https://github.com/django/django/commit/42a66e969023c00536256469f0e8b8a099ef109d)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-c4qh-4vgv-qc6g",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://www.djangoproject.com/weblog/2019/aug/01/security-releases/",
                    "https://github.com/django/django/commit/7f65974f8219729c047fbbf8cd5cc9d80faefe77",
                    "https://github.com/django/django/commit/c3289717c6f21a8cf23daff1c78c0c014b94041f",
                    "https://github.com/django/django/commit/c23723a1551340cc7d3126f04fcfd178fa224193",
                    "https://github.com/django/django/commit/42a66e969023c00536256469f0e8b8a099ef109d"
                  ]
                }
              },
              "name": "AdvisoryCve201914232",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "PARTIAL",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "NONE",
                  "Severity": "Medium",
                  "BaseScore": "5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": null,
                "cvePublishDate": "2019-08-02T15:15:00Z",
                "cwe": "CWE-400",
                "epssValue": "0.03082",
                "epssPercentile": "0.86179",
                "security-severity": "7.5"
              },
              "fullDescription": {
                "text": "CVE-2019-14232\nAn issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-c4qh-4vgv-qc6g\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://www.djangoproject.com/weblog/2019/aug/01/security-releases/\nhttps://github.com/django/django/commit/7f65974f8219729c047fbbf8cd5cc9d80faefe77\nhttps://github.com/django/django/commit/c3289717c6f21a8cf23daff1c78c0c014b94041f\nhttps://github.com/django/django/commit/c23723a1551340cc7d3126f04fcfd178fa224193\nhttps://github.com/django/django/commit/42a66e969023c00536256469f0e8b8a099ef109d",
                "markdown": "# CVE-2019-14232\n## Description\nAn issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-c4qh-4vgv-qc6g](https://github.com/advisories/GHSA-c4qh-4vgv-qc6g)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://www.djangoproject.com/weblog/2019/aug/01/security-releases/](https://www.djangoproject.com/weblog/2019/aug/01/security-releases/)\n* [https://github.com/django/django/commit/7f65974f8219729c047fbbf8cd5cc9d80faefe77](https://github.com/django/django/commit/7f65974f8219729c047fbbf8cd5cc9d80faefe77)\n* [https://github.com/django/django/commit/c3289717c6f21a8cf23daff1c78c0c014b94041f](https://github.com/django/django/commit/c3289717c6f21a8cf23daff1c78c0c014b94041f)\n* [https://github.com/django/django/commit/c23723a1551340cc7d3126f04fcfd178fa224193](https://github.com/django/django/commit/c23723a1551340cc7d3126f04fcfd178fa224193)\n* [https://github.com/django/django/commit/42a66e969023c00536256469f0e8b8a099ef109d](https://github.com/django/django/commit/42a66e969023c00536256469f0e8b8a099ef109d)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-c4qh-4vgv-qc6g",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://www.djangoproject.com/weblog/2019/aug/01/security-releases/",
                    "https://github.com/django/django/commit/7f65974f8219729c047fbbf8cd5cc9d80faefe77",
                    "https://github.com/django/django/commit/c3289717c6f21a8cf23daff1c78c0c014b94041f",
                    "https://github.com/django/django/commit/c23723a1551340cc7d3126f04fcfd178fa224193",
                    "https://github.com/django/django/commit/42a66e969023c00536256469f0e8b8a099ef109d"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2019-14232",
              "shortDescription": {
                "text": "CVE-2019-14232"
              }
            },
            {
              "id": "CVE-2019-14233",
              "help": {
                "text": "CVE-2019-14233\nAn issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-h5jv-4p7w-64jg\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://www.djangoproject.com/weblog/2019/aug/01/security-releases/\nhttps://github.com/django/django/commit/4b78420d250df5e21763633871e486ee76728cc4\nhttps://github.com/django/django/commit/e34f3c0e9ee5fc9022428fe91640638bafd4cda7\nhttps://github.com/django/django/commit/5ff8e791148bd451180124d76a55cb2b2b9556eb\nhttps://github.com/django/django/commit/52479acce792ad80bb0f915f20b835f919993c72",
                "markdown": "# CVE-2019-14233\n## Description\nAn issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-h5jv-4p7w-64jg](https://github.com/advisories/GHSA-h5jv-4p7w-64jg)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://www.djangoproject.com/weblog/2019/aug/01/security-releases/](https://www.djangoproject.com/weblog/2019/aug/01/security-releases/)\n* [https://github.com/django/django/commit/4b78420d250df5e21763633871e486ee76728cc4](https://github.com/django/django/commit/4b78420d250df5e21763633871e486ee76728cc4)\n* [https://github.com/django/django/commit/e34f3c0e9ee5fc9022428fe91640638bafd4cda7](https://github.com/django/django/commit/e34f3c0e9ee5fc9022428fe91640638bafd4cda7)\n* [https://github.com/django/django/commit/5ff8e791148bd451180124d76a55cb2b2b9556eb](https://github.com/django/django/commit/5ff8e791148bd451180124d76a55cb2b2b9556eb)\n* [https://github.com/django/django/commit/52479acce792ad80bb0f915f20b835f919993c72](https://github.com/django/django/commit/52479acce792ad80bb0f915f20b835f919993c72)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-h5jv-4p7w-64jg",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://www.djangoproject.com/weblog/2019/aug/01/security-releases/",
                    "https://github.com/django/django/commit/4b78420d250df5e21763633871e486ee76728cc4",
                    "https://github.com/django/django/commit/e34f3c0e9ee5fc9022428fe91640638bafd4cda7",
                    "https://github.com/django/django/commit/5ff8e791148bd451180124d76a55cb2b2b9556eb",
                    "https://github.com/django/django/commit/52479acce792ad80bb0f915f20b835f919993c72"
                  ]
                }
              },
              "name": "AdvisoryCve201914233",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "PARTIAL",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "NONE",
                  "Severity": "Medium",
                  "BaseScore": "5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": null,
                "cvePublishDate": "2019-08-02T15:15:00Z",
                "cwe": "CWE-400",
                "epssValue": "0.05504",
                "epssPercentile": "0.89257",
                "security-severity": "7.5"
              },
              "fullDescription": {
                "text": "CVE-2019-14233\nAn issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-h5jv-4p7w-64jg\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://www.djangoproject.com/weblog/2019/aug/01/security-releases/\nhttps://github.com/django/django/commit/4b78420d250df5e21763633871e486ee76728cc4\nhttps://github.com/django/django/commit/e34f3c0e9ee5fc9022428fe91640638bafd4cda7\nhttps://github.com/django/django/commit/5ff8e791148bd451180124d76a55cb2b2b9556eb\nhttps://github.com/django/django/commit/52479acce792ad80bb0f915f20b835f919993c72",
                "markdown": "# CVE-2019-14233\n## Description\nAn issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-h5jv-4p7w-64jg](https://github.com/advisories/GHSA-h5jv-4p7w-64jg)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://www.djangoproject.com/weblog/2019/aug/01/security-releases/](https://www.djangoproject.com/weblog/2019/aug/01/security-releases/)\n* [https://github.com/django/django/commit/4b78420d250df5e21763633871e486ee76728cc4](https://github.com/django/django/commit/4b78420d250df5e21763633871e486ee76728cc4)\n* [https://github.com/django/django/commit/e34f3c0e9ee5fc9022428fe91640638bafd4cda7](https://github.com/django/django/commit/e34f3c0e9ee5fc9022428fe91640638bafd4cda7)\n* [https://github.com/django/django/commit/5ff8e791148bd451180124d76a55cb2b2b9556eb](https://github.com/django/django/commit/5ff8e791148bd451180124d76a55cb2b2b9556eb)\n* [https://github.com/django/django/commit/52479acce792ad80bb0f915f20b835f919993c72](https://github.com/django/django/commit/52479acce792ad80bb0f915f20b835f919993c72)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-h5jv-4p7w-64jg",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://www.djangoproject.com/weblog/2019/aug/01/security-releases/",
                    "https://github.com/django/django/commit/4b78420d250df5e21763633871e486ee76728cc4",
                    "https://github.com/django/django/commit/e34f3c0e9ee5fc9022428fe91640638bafd4cda7",
                    "https://github.com/django/django/commit/5ff8e791148bd451180124d76a55cb2b2b9556eb",
                    "https://github.com/django/django/commit/52479acce792ad80bb0f915f20b835f919993c72"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2019-14233",
              "shortDescription": {
                "text": "CVE-2019-14233"
              }
            },
            {
              "id": "CVE-2019-14235",
              "help": {
                "text": "CVE-2019-14235\nAn issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-v9qg-3j8p-r63v\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://www.djangoproject.com/weblog/2019/aug/01/security-releases/\nhttps://github.com/django/django/commit/76ed1c49f804d409cfc2911a890c78584db3c76e\nhttps://github.com/django/django/commit/cf694e6852b0da7799f8b53f1fb2f7d20cf17534\nhttps://github.com/django/django/commit/5d50a2e5fa36ad23ab532fc54cf4073de84b3306\nhttps://github.com/django/django/commit/869b34e9b3be3a4cfcb3a145f218ffd3f5e3fd79",
                "markdown": "# CVE-2019-14235\n## Description\nAn issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-v9qg-3j8p-r63v](https://github.com/advisories/GHSA-v9qg-3j8p-r63v)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://www.djangoproject.com/weblog/2019/aug/01/security-releases/](https://www.djangoproject.com/weblog/2019/aug/01/security-releases/)\n* [https://github.com/django/django/commit/76ed1c49f804d409cfc2911a890c78584db3c76e](https://github.com/django/django/commit/76ed1c49f804d409cfc2911a890c78584db3c76e)\n* [https://github.com/django/django/commit/cf694e6852b0da7799f8b53f1fb2f7d20cf17534](https://github.com/django/django/commit/cf694e6852b0da7799f8b53f1fb2f7d20cf17534)\n* [https://github.com/django/django/commit/5d50a2e5fa36ad23ab532fc54cf4073de84b3306](https://github.com/django/django/commit/5d50a2e5fa36ad23ab532fc54cf4073de84b3306)\n* [https://github.com/django/django/commit/869b34e9b3be3a4cfcb3a145f218ffd3f5e3fd79](https://github.com/django/django/commit/869b34e9b3be3a4cfcb3a145f218ffd3f5e3fd79)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-v9qg-3j8p-r63v",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://www.djangoproject.com/weblog/2019/aug/01/security-releases/",
                    "https://github.com/django/django/commit/76ed1c49f804d409cfc2911a890c78584db3c76e",
                    "https://github.com/django/django/commit/cf694e6852b0da7799f8b53f1fb2f7d20cf17534",
                    "https://github.com/django/django/commit/5d50a2e5fa36ad23ab532fc54cf4073de84b3306",
                    "https://github.com/django/django/commit/869b34e9b3be3a4cfcb3a145f218ffd3f5e3fd79"
                  ]
                }
              },
              "name": "AdvisoryCve201914235",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "PARTIAL",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "NONE",
                  "Severity": "Medium",
                  "BaseScore": "5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": null,
                "cvePublishDate": "2019-08-02T15:15:00Z",
                "cwe": "CWE-674",
                "epssValue": "0.05336",
                "epssPercentile": "0.89092",
                "security-severity": "7.5"
              },
              "fullDescription": {
                "text": "CVE-2019-14235\nAn issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-v9qg-3j8p-r63v\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://www.djangoproject.com/weblog/2019/aug/01/security-releases/\nhttps://github.com/django/django/commit/76ed1c49f804d409cfc2911a890c78584db3c76e\nhttps://github.com/django/django/commit/cf694e6852b0da7799f8b53f1fb2f7d20cf17534\nhttps://github.com/django/django/commit/5d50a2e5fa36ad23ab532fc54cf4073de84b3306\nhttps://github.com/django/django/commit/869b34e9b3be3a4cfcb3a145f218ffd3f5e3fd79",
                "markdown": "# CVE-2019-14235\n## Description\nAn issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-v9qg-3j8p-r63v](https://github.com/advisories/GHSA-v9qg-3j8p-r63v)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://www.djangoproject.com/weblog/2019/aug/01/security-releases/](https://www.djangoproject.com/weblog/2019/aug/01/security-releases/)\n* [https://github.com/django/django/commit/76ed1c49f804d409cfc2911a890c78584db3c76e](https://github.com/django/django/commit/76ed1c49f804d409cfc2911a890c78584db3c76e)\n* [https://github.com/django/django/commit/cf694e6852b0da7799f8b53f1fb2f7d20cf17534](https://github.com/django/django/commit/cf694e6852b0da7799f8b53f1fb2f7d20cf17534)\n* [https://github.com/django/django/commit/5d50a2e5fa36ad23ab532fc54cf4073de84b3306](https://github.com/django/django/commit/5d50a2e5fa36ad23ab532fc54cf4073de84b3306)\n* [https://github.com/django/django/commit/869b34e9b3be3a4cfcb3a145f218ffd3f5e3fd79](https://github.com/django/django/commit/869b34e9b3be3a4cfcb3a145f218ffd3f5e3fd79)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-v9qg-3j8p-r63v",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://www.djangoproject.com/weblog/2019/aug/01/security-releases/",
                    "https://github.com/django/django/commit/76ed1c49f804d409cfc2911a890c78584db3c76e",
                    "https://github.com/django/django/commit/cf694e6852b0da7799f8b53f1fb2f7d20cf17534",
                    "https://github.com/django/django/commit/5d50a2e5fa36ad23ab532fc54cf4073de84b3306",
                    "https://github.com/django/django/commit/869b34e9b3be3a4cfcb3a145f218ffd3f5e3fd79"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2019-14235",
              "shortDescription": {
                "text": "CVE-2019-14235"
              }
            },
            {
              "id": "CVE-2019-6975",
              "help": {
                "text": "CVE-2019-6975\nDjango 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function. Branches prior to 1.11.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-wh4h-v3f2-r2pp\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://www.djangoproject.com/weblog/2019/feb/11/security-releases/\nhttps://github.com/django/django/commit/402c0caa851e265410fbcaa55318f22d2bf22ee2\nhttps://github.com/django/django/commit/0bbb560183fabf0533289700845dafa94951f227\nhttps://github.com/django/django/commit/1f42f82566c9d2d73aff1c42790d6b1b243f7676\nhttps://github.com/django/django/commit/40cd19055773705301c3428ed5e08a036d2091f3\nhttps://github.com/django/django/commit/83ab3e26647f6a50cdfac01ecf735cad540b2f35",
                "markdown": "# CVE-2019-6975\n## Description\nDjango 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function. Branches prior to 1.11.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-wh4h-v3f2-r2pp](https://github.com/advisories/GHSA-wh4h-v3f2-r2pp)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://www.djangoproject.com/weblog/2019/feb/11/security-releases/](https://www.djangoproject.com/weblog/2019/feb/11/security-releases/)\n* [https://github.com/django/django/commit/402c0caa851e265410fbcaa55318f22d2bf22ee2](https://github.com/django/django/commit/402c0caa851e265410fbcaa55318f22d2bf22ee2)\n* [https://github.com/django/django/commit/0bbb560183fabf0533289700845dafa94951f227](https://github.com/django/django/commit/0bbb560183fabf0533289700845dafa94951f227)\n* [https://github.com/django/django/commit/1f42f82566c9d2d73aff1c42790d6b1b243f7676](https://github.com/django/django/commit/1f42f82566c9d2d73aff1c42790d6b1b243f7676)\n* [https://github.com/django/django/commit/40cd19055773705301c3428ed5e08a036d2091f3](https://github.com/django/django/commit/40cd19055773705301c3428ed5e08a036d2091f3)\n* [https://github.com/django/django/commit/83ab3e26647f6a50cdfac01ecf735cad540b2f35](https://github.com/django/django/commit/83ab3e26647f6a50cdfac01ecf735cad540b2f35)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-wh4h-v3f2-r2pp",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://www.djangoproject.com/weblog/2019/feb/11/security-releases/",
                    "https://github.com/django/django/commit/402c0caa851e265410fbcaa55318f22d2bf22ee2",
                    "https://github.com/django/django/commit/0bbb560183fabf0533289700845dafa94951f227",
                    "https://github.com/django/django/commit/1f42f82566c9d2d73aff1c42790d6b1b243f7676",
                    "https://github.com/django/django/commit/40cd19055773705301c3428ed5e08a036d2091f3",
                    "https://github.com/django/django/commit/83ab3e26647f6a50cdfac01ecf735cad540b2f35"
                  ]
                }
              },
              "name": "AdvisoryCve20196975",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "PARTIAL",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "NONE",
                  "Severity": "Medium",
                  "BaseScore": "5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": null,
                "cvePublishDate": "2019-02-11T13:29:00Z",
                "cwe": "CWE-770",
                "epssValue": "0.06506",
                "epssPercentile": "0.90637",
                "security-severity": "7.5"
              },
              "fullDescription": {
                "text": "CVE-2019-6975\nDjango 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function. Branches prior to 1.11.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-wh4h-v3f2-r2pp\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://www.djangoproject.com/weblog/2019/feb/11/security-releases/\nhttps://github.com/django/django/commit/402c0caa851e265410fbcaa55318f22d2bf22ee2\nhttps://github.com/django/django/commit/0bbb560183fabf0533289700845dafa94951f227\nhttps://github.com/django/django/commit/1f42f82566c9d2d73aff1c42790d6b1b243f7676\nhttps://github.com/django/django/commit/40cd19055773705301c3428ed5e08a036d2091f3\nhttps://github.com/django/django/commit/83ab3e26647f6a50cdfac01ecf735cad540b2f35",
                "markdown": "# CVE-2019-6975\n## Description\nDjango 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function. Branches prior to 1.11.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-wh4h-v3f2-r2pp](https://github.com/advisories/GHSA-wh4h-v3f2-r2pp)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://www.djangoproject.com/weblog/2019/feb/11/security-releases/](https://www.djangoproject.com/weblog/2019/feb/11/security-releases/)\n* [https://github.com/django/django/commit/402c0caa851e265410fbcaa55318f22d2bf22ee2](https://github.com/django/django/commit/402c0caa851e265410fbcaa55318f22d2bf22ee2)\n* [https://github.com/django/django/commit/0bbb560183fabf0533289700845dafa94951f227](https://github.com/django/django/commit/0bbb560183fabf0533289700845dafa94951f227)\n* [https://github.com/django/django/commit/1f42f82566c9d2d73aff1c42790d6b1b243f7676](https://github.com/django/django/commit/1f42f82566c9d2d73aff1c42790d6b1b243f7676)\n* [https://github.com/django/django/commit/40cd19055773705301c3428ed5e08a036d2091f3](https://github.com/django/django/commit/40cd19055773705301c3428ed5e08a036d2091f3)\n* [https://github.com/django/django/commit/83ab3e26647f6a50cdfac01ecf735cad540b2f35](https://github.com/django/django/commit/83ab3e26647f6a50cdfac01ecf735cad540b2f35)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-wh4h-v3f2-r2pp",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://www.djangoproject.com/weblog/2019/feb/11/security-releases/",
                    "https://github.com/django/django/commit/402c0caa851e265410fbcaa55318f22d2bf22ee2",
                    "https://github.com/django/django/commit/0bbb560183fabf0533289700845dafa94951f227",
                    "https://github.com/django/django/commit/1f42f82566c9d2d73aff1c42790d6b1b243f7676",
                    "https://github.com/django/django/commit/40cd19055773705301c3428ed5e08a036d2091f3",
                    "https://github.com/django/django/commit/83ab3e26647f6a50cdfac01ecf735cad540b2f35"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2019-6975",
              "shortDescription": {
                "text": "CVE-2019-6975"
              }
            },
            {
              "id": "CVE-2020-24583",
              "help": {
                "text": "CVE-2020-24583\nAn issue was discovered in Django before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.\n\nhttps://www.djangoproject.com/weblog/2020/sep/01/security-releases/\nhttps://docs.djangoproject.com/en/dev/releases/security/#september-1-2020-cve-2020-24583\nhttps://docs.djangoproject.com/en/dev/releases/3.1.1/\nhttps://docs.djangoproject.com/en/dev/releases/3.0.10/\nhttps://docs.djangoproject.com/en/dev/releases/2.2.16/\nhttps://github.com/django/django/commit/8d7271578d7b153435b40fe40236ebec43cbf1b9\nhttps://github.com/advisories/GHSA-m6gj-h9gm-gw44",
                "markdown": "# CVE-2020-24583\n## Description\nAn issue was discovered in Django before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.\n## References\n* [https://www.djangoproject.com/weblog/2020/sep/01/security-releases/](https://www.djangoproject.com/weblog/2020/sep/01/security-releases/)\n* [https://docs.djangoproject.com/en/dev/releases/security/#september-1-2020-cve-2020-24583](https://docs.djangoproject.com/en/dev/releases/security/#september-1-2020-cve-2020-24583)\n* [https://docs.djangoproject.com/en/dev/releases/3.1.1/](https://docs.djangoproject.com/en/dev/releases/3.1.1/)\n* [https://docs.djangoproject.com/en/dev/releases/3.0.10/](https://docs.djangoproject.com/en/dev/releases/3.0.10/)\n* [https://docs.djangoproject.com/en/dev/releases/2.2.16/](https://docs.djangoproject.com/en/dev/releases/2.2.16/)\n* [https://github.com/django/django/commit/8d7271578d7b153435b40fe40236ebec43cbf1b9](https://github.com/django/django/commit/8d7271578d7b153435b40fe40236ebec43cbf1b9)\n* [https://github.com/advisories/GHSA-m6gj-h9gm-gw44](https://github.com/advisories/GHSA-m6gj-h9gm-gw44)",
                "properties": {
                  "references": [
                    "https://www.djangoproject.com/weblog/2020/sep/01/security-releases/",
                    "https://docs.djangoproject.com/en/dev/releases/security/#september-1-2020-cve-2020-24583",
                    "https://docs.djangoproject.com/en/dev/releases/3.1.1/",
                    "https://docs.djangoproject.com/en/dev/releases/3.0.10/",
                    "https://docs.djangoproject.com/en/dev/releases/2.2.16/",
                    "https://github.com/django/django/commit/8d7271578d7b153435b40fe40236ebec43cbf1b9",
                    "https://github.com/advisories/GHSA-m6gj-h9gm-gw44"
                  ]
                }
              },
              "name": "AdvisoryCve202024583",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "PARTIAL",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "NONE",
                  "Severity": "Medium",
                  "BaseScore": "5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "HIGH",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": null,
                "cvePublishDate": "2020-09-01T13:15:00Z",
                "cwe": "CWE-276",
                "epssValue": "0.0284",
                "epssPercentile": "0.84965",
                "security-severity": "7.5"
              },
              "fullDescription": {
                "text": "CVE-2020-24583\nAn issue was discovered in Django before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.\n\nhttps://www.djangoproject.com/weblog/2020/sep/01/security-releases/\nhttps://docs.djangoproject.com/en/dev/releases/security/#september-1-2020-cve-2020-24583\nhttps://docs.djangoproject.com/en/dev/releases/3.1.1/\nhttps://docs.djangoproject.com/en/dev/releases/3.0.10/\nhttps://docs.djangoproject.com/en/dev/releases/2.2.16/\nhttps://github.com/django/django/commit/8d7271578d7b153435b40fe40236ebec43cbf1b9\nhttps://github.com/advisories/GHSA-m6gj-h9gm-gw44",
                "markdown": "# CVE-2020-24583\n## Description\nAn issue was discovered in Django before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.\n## References\n* [https://www.djangoproject.com/weblog/2020/sep/01/security-releases/](https://www.djangoproject.com/weblog/2020/sep/01/security-releases/)\n* [https://docs.djangoproject.com/en/dev/releases/security/#september-1-2020-cve-2020-24583](https://docs.djangoproject.com/en/dev/releases/security/#september-1-2020-cve-2020-24583)\n* [https://docs.djangoproject.com/en/dev/releases/3.1.1/](https://docs.djangoproject.com/en/dev/releases/3.1.1/)\n* [https://docs.djangoproject.com/en/dev/releases/3.0.10/](https://docs.djangoproject.com/en/dev/releases/3.0.10/)\n* [https://docs.djangoproject.com/en/dev/releases/2.2.16/](https://docs.djangoproject.com/en/dev/releases/2.2.16/)\n* [https://github.com/django/django/commit/8d7271578d7b153435b40fe40236ebec43cbf1b9](https://github.com/django/django/commit/8d7271578d7b153435b40fe40236ebec43cbf1b9)\n* [https://github.com/advisories/GHSA-m6gj-h9gm-gw44](https://github.com/advisories/GHSA-m6gj-h9gm-gw44)",
                "properties": {
                  "references": [
                    "https://www.djangoproject.com/weblog/2020/sep/01/security-releases/",
                    "https://docs.djangoproject.com/en/dev/releases/security/#september-1-2020-cve-2020-24583",
                    "https://docs.djangoproject.com/en/dev/releases/3.1.1/",
                    "https://docs.djangoproject.com/en/dev/releases/3.0.10/",
                    "https://docs.djangoproject.com/en/dev/releases/2.2.16/",
                    "https://github.com/django/django/commit/8d7271578d7b153435b40fe40236ebec43cbf1b9",
                    "https://github.com/advisories/GHSA-m6gj-h9gm-gw44"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2020-24583",
              "shortDescription": {
                "text": "CVE-2020-24583"
              }
            },
            {
              "id": "CVE-2020-24584",
              "help": {
                "text": "CVE-2020-24584\nAn issue was discovered in Django before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.\n\nhttps://docs.djangoproject.com/en/dev/releases/security/#september-1-2020-cve-2020-24584\nhttps://www.djangoproject.com/weblog/2020/sep/01/security-releases/\nhttps://docs.djangoproject.com/en/dev/releases/3.1.1/\nhttps://docs.djangoproject.com/en/dev/releases/3.0.10/\nhttps://docs.djangoproject.com/en/dev/releases/2.2.16/\nhttps://github.com/django/django/commit/1853724acaf17ed7414d54c7d2b5563a25025a71\nhttps://github.com/advisories/GHSA-fr28-569j-53c4",
                "markdown": "# CVE-2020-24584\n## Description\nAn issue was discovered in Django before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.\n## References\n* [https://docs.djangoproject.com/en/dev/releases/security/#september-1-2020-cve-2020-24584](https://docs.djangoproject.com/en/dev/releases/security/#september-1-2020-cve-2020-24584)\n* [https://www.djangoproject.com/weblog/2020/sep/01/security-releases/](https://www.djangoproject.com/weblog/2020/sep/01/security-releases/)\n* [https://docs.djangoproject.com/en/dev/releases/3.1.1/](https://docs.djangoproject.com/en/dev/releases/3.1.1/)\n* [https://docs.djangoproject.com/en/dev/releases/3.0.10/](https://docs.djangoproject.com/en/dev/releases/3.0.10/)\n* [https://docs.djangoproject.com/en/dev/releases/2.2.16/](https://docs.djangoproject.com/en/dev/releases/2.2.16/)\n* [https://github.com/django/django/commit/1853724acaf17ed7414d54c7d2b5563a25025a71](https://github.com/django/django/commit/1853724acaf17ed7414d54c7d2b5563a25025a71)\n* [https://github.com/advisories/GHSA-fr28-569j-53c4](https://github.com/advisories/GHSA-fr28-569j-53c4)",
                "properties": {
                  "references": [
                    "https://docs.djangoproject.com/en/dev/releases/security/#september-1-2020-cve-2020-24584",
                    "https://www.djangoproject.com/weblog/2020/sep/01/security-releases/",
                    "https://docs.djangoproject.com/en/dev/releases/3.1.1/",
                    "https://docs.djangoproject.com/en/dev/releases/3.0.10/",
                    "https://docs.djangoproject.com/en/dev/releases/2.2.16/",
                    "https://github.com/django/django/commit/1853724acaf17ed7414d54c7d2b5563a25025a71",
                    "https://github.com/advisories/GHSA-fr28-569j-53c4"
                  ]
                }
              },
              "name": "AdvisoryCve202024584",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "PARTIAL",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "NONE",
                  "Severity": "Medium",
                  "BaseScore": "5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "HIGH",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": null,
                "cvePublishDate": "2020-09-01T13:15:00Z",
                "cwe": "CWE-276",
                "epssValue": "0.01608",
                "epssPercentile": "0.80071",
                "security-severity": "7.5"
              },
              "fullDescription": {
                "text": "CVE-2020-24584\nAn issue was discovered in Django before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.\n\nhttps://docs.djangoproject.com/en/dev/releases/security/#september-1-2020-cve-2020-24584\nhttps://www.djangoproject.com/weblog/2020/sep/01/security-releases/\nhttps://docs.djangoproject.com/en/dev/releases/3.1.1/\nhttps://docs.djangoproject.com/en/dev/releases/3.0.10/\nhttps://docs.djangoproject.com/en/dev/releases/2.2.16/\nhttps://github.com/django/django/commit/1853724acaf17ed7414d54c7d2b5563a25025a71\nhttps://github.com/advisories/GHSA-fr28-569j-53c4",
                "markdown": "# CVE-2020-24584\n## Description\nAn issue was discovered in Django before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.\n## References\n* [https://docs.djangoproject.com/en/dev/releases/security/#september-1-2020-cve-2020-24584](https://docs.djangoproject.com/en/dev/releases/security/#september-1-2020-cve-2020-24584)\n* [https://www.djangoproject.com/weblog/2020/sep/01/security-releases/](https://www.djangoproject.com/weblog/2020/sep/01/security-releases/)\n* [https://docs.djangoproject.com/en/dev/releases/3.1.1/](https://docs.djangoproject.com/en/dev/releases/3.1.1/)\n* [https://docs.djangoproject.com/en/dev/releases/3.0.10/](https://docs.djangoproject.com/en/dev/releases/3.0.10/)\n* [https://docs.djangoproject.com/en/dev/releases/2.2.16/](https://docs.djangoproject.com/en/dev/releases/2.2.16/)\n* [https://github.com/django/django/commit/1853724acaf17ed7414d54c7d2b5563a25025a71](https://github.com/django/django/commit/1853724acaf17ed7414d54c7d2b5563a25025a71)\n* [https://github.com/advisories/GHSA-fr28-569j-53c4](https://github.com/advisories/GHSA-fr28-569j-53c4)",
                "properties": {
                  "references": [
                    "https://docs.djangoproject.com/en/dev/releases/security/#september-1-2020-cve-2020-24584",
                    "https://www.djangoproject.com/weblog/2020/sep/01/security-releases/",
                    "https://docs.djangoproject.com/en/dev/releases/3.1.1/",
                    "https://docs.djangoproject.com/en/dev/releases/3.0.10/",
                    "https://docs.djangoproject.com/en/dev/releases/2.2.16/",
                    "https://github.com/django/django/commit/1853724acaf17ed7414d54c7d2b5563a25025a71",
                    "https://github.com/advisories/GHSA-fr28-569j-53c4"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2020-24584",
              "shortDescription": {
                "text": "CVE-2020-24584"
              }
            },
            {
              "id": "CVE-2021-31542",
              "help": {
                "text": "CVE-2021-31542\nIn Django before 2.2.21, 3.x before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.\n\nhttps://github.com/advisories/GHSA-rxjp-mfm9-w4wr\nhttps://github.com/django/django/commit/0b79eb36915d178aef5c6a7bbce71b1e76d376d3\nhttps://www.djangoproject.com/weblog/2021/may/04/security-releases/",
                "markdown": "# CVE-2021-31542\n## Description\nIn Django before 2.2.21, 3.x before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.\n## References\n* [https://github.com/advisories/GHSA-rxjp-mfm9-w4wr](https://github.com/advisories/GHSA-rxjp-mfm9-w4wr)\n* [https://github.com/django/django/commit/0b79eb36915d178aef5c6a7bbce71b1e76d376d3](https://github.com/django/django/commit/0b79eb36915d178aef5c6a7bbce71b1e76d376d3)\n* [https://www.djangoproject.com/weblog/2021/may/04/security-releases/](https://www.djangoproject.com/weblog/2021/may/04/security-releases/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-rxjp-mfm9-w4wr",
                    "https://github.com/django/django/commit/0b79eb36915d178aef5c6a7bbce71b1e76d376d3",
                    "https://www.djangoproject.com/weblog/2021/may/04/security-releases/"
                  ]
                }
              },
              "name": "AdvisoryCve202131542",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "PARTIAL",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "NONE",
                  "Severity": "Medium",
                  "BaseScore": "5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "HIGH",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": null,
                "cvePublishDate": "2021-05-05T15:15:00Z",
                "cwe": "CWE-22",
                "epssValue": "0.04357",
                "epssPercentile": "0.88309",
                "security-severity": "7.5"
              },
              "fullDescription": {
                "text": "CVE-2021-31542\nIn Django before 2.2.21, 3.x before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.\n\nhttps://github.com/advisories/GHSA-rxjp-mfm9-w4wr\nhttps://github.com/django/django/commit/0b79eb36915d178aef5c6a7bbce71b1e76d376d3\nhttps://www.djangoproject.com/weblog/2021/may/04/security-releases/",
                "markdown": "# CVE-2021-31542\n## Description\nIn Django before 2.2.21, 3.x before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.\n## References\n* [https://github.com/advisories/GHSA-rxjp-mfm9-w4wr](https://github.com/advisories/GHSA-rxjp-mfm9-w4wr)\n* [https://github.com/django/django/commit/0b79eb36915d178aef5c6a7bbce71b1e76d376d3](https://github.com/django/django/commit/0b79eb36915d178aef5c6a7bbce71b1e76d376d3)\n* [https://www.djangoproject.com/weblog/2021/may/04/security-releases/](https://www.djangoproject.com/weblog/2021/may/04/security-releases/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-rxjp-mfm9-w4wr",
                    "https://github.com/django/django/commit/0b79eb36915d178aef5c6a7bbce71b1e76d376d3",
                    "https://www.djangoproject.com/weblog/2021/may/04/security-releases/"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2021-31542",
              "shortDescription": {
                "text": "CVE-2021-31542"
              }
            },
            {
              "id": "CVE-2021-33571",
              "help": {
                "text": "CVE-2021-33571\nIn Django before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .\n\nhttps://github.com/advisories/GHSA-p99v-5w3c-jqq9\nhttps://github.com/django/django/commit/e1d787f1b36d13b95187f8f425425ae1b98da188\nhttps://docs.djangoproject.com/en/3.2/releases/security/\nhttps://www.djangoproject.com/weblog/2021/jun/02/security-releases/",
                "markdown": "# CVE-2021-33571\n## Description\nIn Django before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .\n## References\n* [https://github.com/advisories/GHSA-p99v-5w3c-jqq9](https://github.com/advisories/GHSA-p99v-5w3c-jqq9)\n* [https://github.com/django/django/commit/e1d787f1b36d13b95187f8f425425ae1b98da188](https://github.com/django/django/commit/e1d787f1b36d13b95187f8f425425ae1b98da188)\n* [https://docs.djangoproject.com/en/3.2/releases/security/](https://docs.djangoproject.com/en/3.2/releases/security/)\n* [https://www.djangoproject.com/weblog/2021/jun/02/security-releases/](https://www.djangoproject.com/weblog/2021/jun/02/security-releases/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-p99v-5w3c-jqq9",
                    "https://github.com/django/django/commit/e1d787f1b36d13b95187f8f425425ae1b98da188",
                    "https://docs.djangoproject.com/en/3.2/releases/security/",
                    "https://www.djangoproject.com/weblog/2021/jun/02/security-releases/"
                  ]
                }
              },
              "name": "AdvisoryCve202133571",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "Medium",
                  "BaseScore": "5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "HIGH",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": null,
                "cvePublishDate": "2021-06-08T18:15:00Z",
                "cwe": "CWE-918",
                "epssValue": "0.00014",
                "epssPercentile": "0.0178",
                "security-severity": "7.5"
              },
              "fullDescription": {
                "text": "CVE-2021-33571\nIn Django before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .\n\nhttps://github.com/advisories/GHSA-p99v-5w3c-jqq9\nhttps://github.com/django/django/commit/e1d787f1b36d13b95187f8f425425ae1b98da188\nhttps://docs.djangoproject.com/en/3.2/releases/security/\nhttps://www.djangoproject.com/weblog/2021/jun/02/security-releases/",
                "markdown": "# CVE-2021-33571\n## Description\nIn Django before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .\n## References\n* [https://github.com/advisories/GHSA-p99v-5w3c-jqq9](https://github.com/advisories/GHSA-p99v-5w3c-jqq9)\n* [https://github.com/django/django/commit/e1d787f1b36d13b95187f8f425425ae1b98da188](https://github.com/django/django/commit/e1d787f1b36d13b95187f8f425425ae1b98da188)\n* [https://docs.djangoproject.com/en/3.2/releases/security/](https://docs.djangoproject.com/en/3.2/releases/security/)\n* [https://www.djangoproject.com/weblog/2021/jun/02/security-releases/](https://www.djangoproject.com/weblog/2021/jun/02/security-releases/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-p99v-5w3c-jqq9",
                    "https://github.com/django/django/commit/e1d787f1b36d13b95187f8f425425ae1b98da188",
                    "https://docs.djangoproject.com/en/3.2/releases/security/",
                    "https://www.djangoproject.com/weblog/2021/jun/02/security-releases/"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2021-33571",
              "shortDescription": {
                "text": "CVE-2021-33571"
              }
            },
            {
              "id": "CVE-2021-45115",
              "help": {
                "text": "CVE-2021-45115\nAn issue was discovered in Django before 2.2.26, 3.1.x before 3.2.11, and 4.0.x before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.\n\nhttps://github.com/advisories/GHSA-53qw-q765-4fww\nhttps://docs.djangoproject.com/en/4.0/releases/security/\nhttps://github.com/django/django/commit/968a3d01fa79f055f93a1c3ed1535ecbcbdbb842",
                "markdown": "# CVE-2021-45115\n## Description\nAn issue was discovered in Django before 2.2.26, 3.1.x before 3.2.11, and 4.0.x before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.\n## References\n* [https://github.com/advisories/GHSA-53qw-q765-4fww](https://github.com/advisories/GHSA-53qw-q765-4fww)\n* [https://docs.djangoproject.com/en/4.0/releases/security/](https://docs.djangoproject.com/en/4.0/releases/security/)\n* [https://github.com/django/django/commit/968a3d01fa79f055f93a1c3ed1535ecbcbdbb842](https://github.com/django/django/commit/968a3d01fa79f055f93a1c3ed1535ecbcbdbb842)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-53qw-q765-4fww",
                    "https://docs.djangoproject.com/en/4.0/releases/security/",
                    "https://github.com/django/django/commit/968a3d01fa79f055f93a1c3ed1535ecbcbdbb842"
                  ]
                }
              },
              "name": "AdvisoryCve202145115",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "PARTIAL",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "NONE",
                  "Severity": "Medium",
                  "BaseScore": "5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": null,
                "cvePublishDate": "2022-01-05T00:15:00Z",
                "cwe": "CWE-400",
                "epssValue": "0.00348",
                "epssPercentile": "0.56682",
                "security-severity": "7.5"
              },
              "fullDescription": {
                "text": "CVE-2021-45115\nAn issue was discovered in Django before 2.2.26, 3.1.x before 3.2.11, and 4.0.x before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.\n\nhttps://github.com/advisories/GHSA-53qw-q765-4fww\nhttps://docs.djangoproject.com/en/4.0/releases/security/\nhttps://github.com/django/django/commit/968a3d01fa79f055f93a1c3ed1535ecbcbdbb842",
                "markdown": "# CVE-2021-45115\n## Description\nAn issue was discovered in Django before 2.2.26, 3.1.x before 3.2.11, and 4.0.x before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.\n## References\n* [https://github.com/advisories/GHSA-53qw-q765-4fww](https://github.com/advisories/GHSA-53qw-q765-4fww)\n* [https://docs.djangoproject.com/en/4.0/releases/security/](https://docs.djangoproject.com/en/4.0/releases/security/)\n* [https://github.com/django/django/commit/968a3d01fa79f055f93a1c3ed1535ecbcbdbb842](https://github.com/django/django/commit/968a3d01fa79f055f93a1c3ed1535ecbcbdbb842)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-53qw-q765-4fww",
                    "https://docs.djangoproject.com/en/4.0/releases/security/",
                    "https://github.com/django/django/commit/968a3d01fa79f055f93a1c3ed1535ecbcbdbb842"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2021-45115",
              "shortDescription": {
                "text": "CVE-2021-45115"
              }
            },
            {
              "id": "CVE-2021-45116",
              "help": {
                "text": "CVE-2021-45116\nAn issue was discovered in Django before 2.2.26, 3.1.x before 3.2.11, and 4.0.x before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.\n\nhttps://github.com/advisories/GHSA-8c5j-9r9f-c6w8\nhttps://docs.djangoproject.com/en/4.0/releases/security/\nhttps://github.com/django/django/commit/761f449e0daf3de06b0132bd4d6dfcdeef578e26",
                "markdown": "# CVE-2021-45116\n## Description\nAn issue was discovered in Django before 2.2.26, 3.1.x before 3.2.11, and 4.0.x before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.\n## References\n* [https://github.com/advisories/GHSA-8c5j-9r9f-c6w8](https://github.com/advisories/GHSA-8c5j-9r9f-c6w8)\n* [https://docs.djangoproject.com/en/4.0/releases/security/](https://docs.djangoproject.com/en/4.0/releases/security/)\n* [https://github.com/django/django/commit/761f449e0daf3de06b0132bd4d6dfcdeef578e26](https://github.com/django/django/commit/761f449e0daf3de06b0132bd4d6dfcdeef578e26)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-8c5j-9r9f-c6w8",
                    "https://docs.djangoproject.com/en/4.0/releases/security/",
                    "https://github.com/django/django/commit/761f449e0daf3de06b0132bd4d6dfcdeef578e26"
                  ]
                }
              },
              "name": "AdvisoryCve202145116",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "PARTIAL",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "NONE",
                  "Severity": "Medium",
                  "BaseScore": "5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "HIGH",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": null,
                "cvePublishDate": "2022-01-05T00:15:00Z",
                "cwe": "CWE-668",
                "epssValue": "0.00242",
                "epssPercentile": "0.47625",
                "security-severity": "7.5"
              },
              "fullDescription": {
                "text": "CVE-2021-45116\nAn issue was discovered in Django before 2.2.26, 3.1.x before 3.2.11, and 4.0.x before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.\n\nhttps://github.com/advisories/GHSA-8c5j-9r9f-c6w8\nhttps://docs.djangoproject.com/en/4.0/releases/security/\nhttps://github.com/django/django/commit/761f449e0daf3de06b0132bd4d6dfcdeef578e26",
                "markdown": "# CVE-2021-45116\n## Description\nAn issue was discovered in Django before 2.2.26, 3.1.x before 3.2.11, and 4.0.x before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.\n## References\n* [https://github.com/advisories/GHSA-8c5j-9r9f-c6w8](https://github.com/advisories/GHSA-8c5j-9r9f-c6w8)\n* [https://docs.djangoproject.com/en/4.0/releases/security/](https://docs.djangoproject.com/en/4.0/releases/security/)\n* [https://github.com/django/django/commit/761f449e0daf3de06b0132bd4d6dfcdeef578e26](https://github.com/django/django/commit/761f449e0daf3de06b0132bd4d6dfcdeef578e26)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-8c5j-9r9f-c6w8",
                    "https://docs.djangoproject.com/en/4.0/releases/security/",
                    "https://github.com/django/django/commit/761f449e0daf3de06b0132bd4d6dfcdeef578e26"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2021-45116",
              "shortDescription": {
                "text": "CVE-2021-45116"
              }
            },
            {
              "id": "CVE-2023-24580",
              "help": {
                "text": "CVE-2023-24580\nAn issue was discovered in the Multipart Request Parser in Django prior to 3.2.18, 4.0.x prior to 4.0.10, 4.1.x prior to 4.1.7, and 4.2.x prior to 4.2b1. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.\n\nhttps://github.com/advisories/GHSA-2hrw-hx67-34x6\nhttps://github.com/django/django/commit/85ac33591c393f1480d4f23b4daff40119cb6410\nhttps://www.djangoproject.com/weblog/2023/feb/14/security-releases/\nhttps://www.openwall.com/lists/oss-security/2023/02/14/1",
                "markdown": "# CVE-2023-24580\n## Description\nAn issue was discovered in the Multipart Request Parser in Django prior to 3.2.18, 4.0.x prior to 4.0.10, 4.1.x prior to 4.1.7, and 4.2.x prior to 4.2b1. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.\n## References\n* [https://github.com/advisories/GHSA-2hrw-hx67-34x6](https://github.com/advisories/GHSA-2hrw-hx67-34x6)\n* [https://github.com/django/django/commit/85ac33591c393f1480d4f23b4daff40119cb6410](https://github.com/django/django/commit/85ac33591c393f1480d4f23b4daff40119cb6410)\n* [https://www.djangoproject.com/weblog/2023/feb/14/security-releases/](https://www.djangoproject.com/weblog/2023/feb/14/security-releases/)\n* [https://www.openwall.com/lists/oss-security/2023/02/14/1](https://www.openwall.com/lists/oss-security/2023/02/14/1)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-2hrw-hx67-34x6",
                    "https://github.com/django/django/commit/85ac33591c393f1480d4f23b4daff40119cb6410",
                    "https://www.djangoproject.com/weblog/2023/feb/14/security-releases/",
                    "https://www.openwall.com/lists/oss-security/2023/02/14/1"
                  ]
                }
              },
              "name": "AdvisoryCve202324580",
              "properties": {
                "cvss2": null,
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": null,
                "cvePublishDate": "2023-02-15T01:15:00Z",
                "cwe": "CWE-400",
                "epssValue": "0.05213",
                "epssPercentile": "0.89523",
                "security-severity": "7.5"
              },
              "fullDescription": {
                "text": "CVE-2023-24580\nAn issue was discovered in the Multipart Request Parser in Django prior to 3.2.18, 4.0.x prior to 4.0.10, 4.1.x prior to 4.1.7, and 4.2.x prior to 4.2b1. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.\n\nhttps://github.com/advisories/GHSA-2hrw-hx67-34x6\nhttps://github.com/django/django/commit/85ac33591c393f1480d4f23b4daff40119cb6410\nhttps://www.djangoproject.com/weblog/2023/feb/14/security-releases/\nhttps://www.openwall.com/lists/oss-security/2023/02/14/1",
                "markdown": "# CVE-2023-24580\n## Description\nAn issue was discovered in the Multipart Request Parser in Django prior to 3.2.18, 4.0.x prior to 4.0.10, 4.1.x prior to 4.1.7, and 4.2.x prior to 4.2b1. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack.\n## References\n* [https://github.com/advisories/GHSA-2hrw-hx67-34x6](https://github.com/advisories/GHSA-2hrw-hx67-34x6)\n* [https://github.com/django/django/commit/85ac33591c393f1480d4f23b4daff40119cb6410](https://github.com/django/django/commit/85ac33591c393f1480d4f23b4daff40119cb6410)\n* [https://www.djangoproject.com/weblog/2023/feb/14/security-releases/](https://www.djangoproject.com/weblog/2023/feb/14/security-releases/)\n* [https://www.openwall.com/lists/oss-security/2023/02/14/1](https://www.openwall.com/lists/oss-security/2023/02/14/1)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-2hrw-hx67-34x6",
                    "https://github.com/django/django/commit/85ac33591c393f1480d4f23b4daff40119cb6410",
                    "https://www.djangoproject.com/weblog/2023/feb/14/security-releases/",
                    "https://www.openwall.com/lists/oss-security/2023/02/14/1"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2023-24580",
              "shortDescription": {
                "text": "CVE-2023-24580"
              }
            },
            {
              "id": "CVE-2024-27351",
              "help": {
                "text": "CVE-2024-27351\nIn Django through 3.2.24, 4.x.x through 4.2.10, and 5.x.x through 5.0.2, the \"django.utils.text.Truncator.words()\" method (with html=True) and the \"truncatewords_html\" template filter are subject to a potential regular expression denial-of-service attack via a crafted string. NOTE: This issue exists because of an incomplete fix for CVE-2019-14232 and CVE-2023-43665.\n\nhttps://github.com/advisories/GHSA-vm8q-m57g-pff3\nhttps://www.djangoproject.com/weblog/2024/mar/04/security-releases/\nhttps://github.com/django/django/blob/main/docs/releases/5.0.3.txt#L10-L16\nhttps://github.com/django/django/commit/3394fc6132436eca89e997083bae9985fb7e761e",
                "markdown": "# CVE-2024-27351\n## Description\nIn Django through 3.2.24, 4.x.x through 4.2.10, and 5.x.x through 5.0.2, the \"django.utils.text.Truncator.words()\" method (with html=True) and the \"truncatewords_html\" template filter are subject to a potential regular expression denial-of-service attack via a crafted string. NOTE: This issue exists because of an incomplete fix for CVE-2019-14232 and CVE-2023-43665.\n## References\n* [https://github.com/advisories/GHSA-vm8q-m57g-pff3](https://github.com/advisories/GHSA-vm8q-m57g-pff3)\n* [https://www.djangoproject.com/weblog/2024/mar/04/security-releases/](https://www.djangoproject.com/weblog/2024/mar/04/security-releases/)\n* [https://github.com/django/django/blob/main/docs/releases/5.0.3.txt#L10-L16](https://github.com/django/django/blob/main/docs/releases/5.0.3.txt#L10-L16)\n* [https://github.com/django/django/commit/3394fc6132436eca89e997083bae9985fb7e761e](https://github.com/django/django/commit/3394fc6132436eca89e997083bae9985fb7e761e)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-vm8q-m57g-pff3",
                    "https://www.djangoproject.com/weblog/2024/mar/04/security-releases/",
                    "https://github.com/django/django/blob/main/docs/releases/5.0.3.txt#L10-L16",
                    "https://github.com/django/django/commit/3394fc6132436eca89e997083bae9985fb7e761e"
                  ]
                }
              },
              "name": "AdvisoryCve202427351",
              "properties": {
                "cvss2": null,
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": "",
                  "RemediationLevel": "",
                  "ReportConfidence": "REASONABLE",
                  "ConfidentialityRequirement": "",
                  "IntegrityRequirement": "",
                  "AvailabilityRequirement": "",
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": null,
                "cvePublishDate": "2024-03-14T18:30:00Z",
                "cwe": "CWE-1333",
                "epssValue": "0.00405",
                "epssPercentile": "0.60328",
                "security-severity": "7.5"
              },
              "fullDescription": {
                "text": "CVE-2024-27351\nIn Django through 3.2.24, 4.x.x through 4.2.10, and 5.x.x through 5.0.2, the \"django.utils.text.Truncator.words()\" method (with html=True) and the \"truncatewords_html\" template filter are subject to a potential regular expression denial-of-service attack via a crafted string. NOTE: This issue exists because of an incomplete fix for CVE-2019-14232 and CVE-2023-43665.\n\nhttps://github.com/advisories/GHSA-vm8q-m57g-pff3\nhttps://www.djangoproject.com/weblog/2024/mar/04/security-releases/\nhttps://github.com/django/django/blob/main/docs/releases/5.0.3.txt#L10-L16\nhttps://github.com/django/django/commit/3394fc6132436eca89e997083bae9985fb7e761e",
                "markdown": "# CVE-2024-27351\n## Description\nIn Django through 3.2.24, 4.x.x through 4.2.10, and 5.x.x through 5.0.2, the \"django.utils.text.Truncator.words()\" method (with html=True) and the \"truncatewords_html\" template filter are subject to a potential regular expression denial-of-service attack via a crafted string. NOTE: This issue exists because of an incomplete fix for CVE-2019-14232 and CVE-2023-43665.\n## References\n* [https://github.com/advisories/GHSA-vm8q-m57g-pff3](https://github.com/advisories/GHSA-vm8q-m57g-pff3)\n* [https://www.djangoproject.com/weblog/2024/mar/04/security-releases/](https://www.djangoproject.com/weblog/2024/mar/04/security-releases/)\n* [https://github.com/django/django/blob/main/docs/releases/5.0.3.txt#L10-L16](https://github.com/django/django/blob/main/docs/releases/5.0.3.txt#L10-L16)\n* [https://github.com/django/django/commit/3394fc6132436eca89e997083bae9985fb7e761e](https://github.com/django/django/commit/3394fc6132436eca89e997083bae9985fb7e761e)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-vm8q-m57g-pff3",
                    "https://www.djangoproject.com/weblog/2024/mar/04/security-releases/",
                    "https://github.com/django/django/blob/main/docs/releases/5.0.3.txt#L10-L16",
                    "https://github.com/django/django/commit/3394fc6132436eca89e997083bae9985fb7e761e"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2024-27351",
              "shortDescription": {
                "text": "CVE-2024-27351"
              }
            },
            {
              "id": "CVE-2024-41989",
              "help": {
                "text": "CVE-2024-41989\nAn issue was discovered in Django versions through 4.2.14, 5.0a1 through 5.0.7, and 5.1a1 through 5.1rc1. The \"floatformat\" template filter is subject to significant memory consumption when given a string representation of a number in scientific notation with a large exponent.\n\nhttps://github.com/advisories/GHSA-jh75-99hh-qvx9\nhttps://www.djangoproject.com/weblog/2024/aug/06/security-releases/\nhttps://github.com/django/django/commit/c19465ad87e33b6122c886b97a202ad54cd43672",
                "markdown": "# CVE-2024-41989\n## Description\nAn issue was discovered in Django versions through 4.2.14, 5.0a1 through 5.0.7, and 5.1a1 through 5.1rc1. The \"floatformat\" template filter is subject to significant memory consumption when given a string representation of a number in scientific notation with a large exponent.\n## References\n* [https://github.com/advisories/GHSA-jh75-99hh-qvx9](https://github.com/advisories/GHSA-jh75-99hh-qvx9)\n* [https://www.djangoproject.com/weblog/2024/aug/06/security-releases/](https://www.djangoproject.com/weblog/2024/aug/06/security-releases/)\n* [https://github.com/django/django/commit/c19465ad87e33b6122c886b97a202ad54cd43672](https://github.com/django/django/commit/c19465ad87e33b6122c886b97a202ad54cd43672)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-jh75-99hh-qvx9",
                    "https://www.djangoproject.com/weblog/2024/aug/06/security-releases/",
                    "https://github.com/django/django/commit/c19465ad87e33b6122c886b97a202ad54cd43672"
                  ]
                }
              },
              "name": "AdvisoryCve202441989",
              "properties": {
                "cvss2": null,
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": null,
                "cvePublishDate": "2024-08-07T15:15:00Z",
                "cwe": "CWE-400",
                "epssValue": "0.00173",
                "epssPercentile": "0.39487",
                "security-severity": "7.5"
              },
              "fullDescription": {
                "text": "CVE-2024-41989\nAn issue was discovered in Django versions through 4.2.14, 5.0a1 through 5.0.7, and 5.1a1 through 5.1rc1. The \"floatformat\" template filter is subject to significant memory consumption when given a string representation of a number in scientific notation with a large exponent.\n\nhttps://github.com/advisories/GHSA-jh75-99hh-qvx9\nhttps://www.djangoproject.com/weblog/2024/aug/06/security-releases/\nhttps://github.com/django/django/commit/c19465ad87e33b6122c886b97a202ad54cd43672",
                "markdown": "# CVE-2024-41989\n## Description\nAn issue was discovered in Django versions through 4.2.14, 5.0a1 through 5.0.7, and 5.1a1 through 5.1rc1. The \"floatformat\" template filter is subject to significant memory consumption when given a string representation of a number in scientific notation with a large exponent.\n## References\n* [https://github.com/advisories/GHSA-jh75-99hh-qvx9](https://github.com/advisories/GHSA-jh75-99hh-qvx9)\n* [https://www.djangoproject.com/weblog/2024/aug/06/security-releases/](https://www.djangoproject.com/weblog/2024/aug/06/security-releases/)\n* [https://github.com/django/django/commit/c19465ad87e33b6122c886b97a202ad54cd43672](https://github.com/django/django/commit/c19465ad87e33b6122c886b97a202ad54cd43672)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-jh75-99hh-qvx9",
                    "https://www.djangoproject.com/weblog/2024/aug/06/security-releases/",
                    "https://github.com/django/django/commit/c19465ad87e33b6122c886b97a202ad54cd43672"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2024-41989",
              "shortDescription": {
                "text": "CVE-2024-41989"
              }
            },
            {
              "id": "CVE-2024-41990",
              "help": {
                "text": "CVE-2024-41990\nAn issue was discovered in Django versions through 4.2.14, 5.0a1 through 5.0.7, and 5.1a1 through 5.1rc1. The \"urlize()\" and \"urlizetrunc()\" template filters are subject to a potential denial-of-service attack via very large inputs with a specific sequence of characters.\n\nhttps://github.com/advisories/GHSA-795c-9xpc-xw6g\nhttps://github.com/django/django/commit/ecf1f8fb900f94de08c945164633e9a28a2edadb\nhttps://www.djangoproject.com/weblog/2024/aug/06/security-releases/",
                "markdown": "# CVE-2024-41990\n## Description\nAn issue was discovered in Django versions through 4.2.14, 5.0a1 through 5.0.7, and 5.1a1 through 5.1rc1. The \"urlize()\" and \"urlizetrunc()\" template filters are subject to a potential denial-of-service attack via very large inputs with a specific sequence of characters.\n## References\n* [https://github.com/advisories/GHSA-795c-9xpc-xw6g](https://github.com/advisories/GHSA-795c-9xpc-xw6g)\n* [https://github.com/django/django/commit/ecf1f8fb900f94de08c945164633e9a28a2edadb](https://github.com/django/django/commit/ecf1f8fb900f94de08c945164633e9a28a2edadb)\n* [https://www.djangoproject.com/weblog/2024/aug/06/security-releases/](https://www.djangoproject.com/weblog/2024/aug/06/security-releases/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-795c-9xpc-xw6g",
                    "https://github.com/django/django/commit/ecf1f8fb900f94de08c945164633e9a28a2edadb",
                    "https://www.djangoproject.com/weblog/2024/aug/06/security-releases/"
                  ]
                }
              },
              "name": "AdvisoryCve202441990",
              "properties": {
                "cvss2": null,
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": null,
                "cvePublishDate": "2024-08-07T15:15:00Z",
                "cwe": "CWE-130",
                "epssValue": "0.00164",
                "epssPercentile": "0.38382",
                "security-severity": "7.5"
              },
              "fullDescription": {
                "text": "CVE-2024-41990\nAn issue was discovered in Django versions through 4.2.14, 5.0a1 through 5.0.7, and 5.1a1 through 5.1rc1. The \"urlize()\" and \"urlizetrunc()\" template filters are subject to a potential denial-of-service attack via very large inputs with a specific sequence of characters.\n\nhttps://github.com/advisories/GHSA-795c-9xpc-xw6g\nhttps://github.com/django/django/commit/ecf1f8fb900f94de08c945164633e9a28a2edadb\nhttps://www.djangoproject.com/weblog/2024/aug/06/security-releases/",
                "markdown": "# CVE-2024-41990\n## Description\nAn issue was discovered in Django versions through 4.2.14, 5.0a1 through 5.0.7, and 5.1a1 through 5.1rc1. The \"urlize()\" and \"urlizetrunc()\" template filters are subject to a potential denial-of-service attack via very large inputs with a specific sequence of characters.\n## References\n* [https://github.com/advisories/GHSA-795c-9xpc-xw6g](https://github.com/advisories/GHSA-795c-9xpc-xw6g)\n* [https://github.com/django/django/commit/ecf1f8fb900f94de08c945164633e9a28a2edadb](https://github.com/django/django/commit/ecf1f8fb900f94de08c945164633e9a28a2edadb)\n* [https://www.djangoproject.com/weblog/2024/aug/06/security-releases/](https://www.djangoproject.com/weblog/2024/aug/06/security-releases/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-795c-9xpc-xw6g",
                    "https://github.com/django/django/commit/ecf1f8fb900f94de08c945164633e9a28a2edadb",
                    "https://www.djangoproject.com/weblog/2024/aug/06/security-releases/"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2024-41990",
              "shortDescription": {
                "text": "CVE-2024-41990"
              }
            },
            {
              "id": "CVE-2024-41991",
              "help": {
                "text": "CVE-2024-41991\nAn issue was discovered in Django versions through 4.2.14, 5.0a1 through 5.0.7, and 5.1a1 through 5.1rc1. The \"urlize\" and \"urlizetrunc\" template filters, and the \"AdminURLFieldWidget\" widget, are subject to a potential denial-of-service attack via certain inputs with a very large number of Unicode characters.\n\nhttps://github.com/advisories/GHSA-r836-hh6v-rg5g\nhttps://github.com/django/django/commit/5f1757142febd95994caa1c0f64c1a0c161982c3\nhttps://docs.djangoproject.com/en/dev/releases/security/#august-6-2024-cve-2024-41991\nhttps://www.djangoproject.com/weblog/2024/aug/06/security-releases/",
                "markdown": "# CVE-2024-41991\n## Description\nAn issue was discovered in Django versions through 4.2.14, 5.0a1 through 5.0.7, and 5.1a1 through 5.1rc1. The \"urlize\" and \"urlizetrunc\" template filters, and the \"AdminURLFieldWidget\" widget, are subject to a potential denial-of-service attack via certain inputs with a very large number of Unicode characters.\n## References\n* [https://github.com/advisories/GHSA-r836-hh6v-rg5g](https://github.com/advisories/GHSA-r836-hh6v-rg5g)\n* [https://github.com/django/django/commit/5f1757142febd95994caa1c0f64c1a0c161982c3](https://github.com/django/django/commit/5f1757142febd95994caa1c0f64c1a0c161982c3)\n* [https://docs.djangoproject.com/en/dev/releases/security/#august-6-2024-cve-2024-41991](https://docs.djangoproject.com/en/dev/releases/security/#august-6-2024-cve-2024-41991)\n* [https://www.djangoproject.com/weblog/2024/aug/06/security-releases/](https://www.djangoproject.com/weblog/2024/aug/06/security-releases/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-r836-hh6v-rg5g",
                    "https://github.com/django/django/commit/5f1757142febd95994caa1c0f64c1a0c161982c3",
                    "https://docs.djangoproject.com/en/dev/releases/security/#august-6-2024-cve-2024-41991",
                    "https://www.djangoproject.com/weblog/2024/aug/06/security-releases/"
                  ]
                }
              },
              "name": "AdvisoryCve202441991",
              "properties": {
                "cvss2": null,
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": null,
                "cvePublishDate": "2024-08-07T15:15:00Z",
                "cwe": "CWE-1284",
                "epssValue": "0.00173",
                "epssPercentile": "0.3961",
                "security-severity": "7.5"
              },
              "fullDescription": {
                "text": "CVE-2024-41991\nAn issue was discovered in Django versions through 4.2.14, 5.0a1 through 5.0.7, and 5.1a1 through 5.1rc1. The \"urlize\" and \"urlizetrunc\" template filters, and the \"AdminURLFieldWidget\" widget, are subject to a potential denial-of-service attack via certain inputs with a very large number of Unicode characters.\n\nhttps://github.com/advisories/GHSA-r836-hh6v-rg5g\nhttps://github.com/django/django/commit/5f1757142febd95994caa1c0f64c1a0c161982c3\nhttps://docs.djangoproject.com/en/dev/releases/security/#august-6-2024-cve-2024-41991\nhttps://www.djangoproject.com/weblog/2024/aug/06/security-releases/",
                "markdown": "# CVE-2024-41991\n## Description\nAn issue was discovered in Django versions through 4.2.14, 5.0a1 through 5.0.7, and 5.1a1 through 5.1rc1. The \"urlize\" and \"urlizetrunc\" template filters, and the \"AdminURLFieldWidget\" widget, are subject to a potential denial-of-service attack via certain inputs with a very large number of Unicode characters.\n## References\n* [https://github.com/advisories/GHSA-r836-hh6v-rg5g](https://github.com/advisories/GHSA-r836-hh6v-rg5g)\n* [https://github.com/django/django/commit/5f1757142febd95994caa1c0f64c1a0c161982c3](https://github.com/django/django/commit/5f1757142febd95994caa1c0f64c1a0c161982c3)\n* [https://docs.djangoproject.com/en/dev/releases/security/#august-6-2024-cve-2024-41991](https://docs.djangoproject.com/en/dev/releases/security/#august-6-2024-cve-2024-41991)\n* [https://www.djangoproject.com/weblog/2024/aug/06/security-releases/](https://www.djangoproject.com/weblog/2024/aug/06/security-releases/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-r836-hh6v-rg5g",
                    "https://github.com/django/django/commit/5f1757142febd95994caa1c0f64c1a0c161982c3",
                    "https://docs.djangoproject.com/en/dev/releases/security/#august-6-2024-cve-2024-41991",
                    "https://www.djangoproject.com/weblog/2024/aug/06/security-releases/"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2024-41991",
              "shortDescription": {
                "text": "CVE-2024-41991"
              }
            },
            {
              "id": "CVE-2025-32873",
              "help": {
                "text": "CVE-2025-32873\nAn issue was discovered in Django versions through 4.2.20, 5.0a1 through 5.1.8, and 5.2a1 through 5.2. The \"django.utils.html.strip_tags()\" function is vulnerable to a potential Denial-Of-Service (slow performance) when processing inputs containing large sequences of incomplete HTML tags. The template filter striptags is also vulnerable, because it is built on top of \"strip_tags()\".\n\nhttps://github.com/advisories/GHSA-8j24-cjrq-gr2m\nhttps://github.com/django/django/commit/9f3419b519799d69f2aba70b9d25abe2e70d03e0\nhttps://www.djangoproject.com/weblog/2025/may/07/security-releases/\nhttps://www.openwall.com/lists/oss-security/2025/05/07/1\nhttps://github.com/django/django/blob/5.2.1/docs/releases/5.2.1.txt#L10",
                "markdown": "# CVE-2025-32873\n## Description\nAn issue was discovered in Django versions through 4.2.20, 5.0a1 through 5.1.8, and 5.2a1 through 5.2. The \"django.utils.html.strip_tags()\" function is vulnerable to a potential Denial-Of-Service (slow performance) when processing inputs containing large sequences of incomplete HTML tags. The template filter striptags is also vulnerable, because it is built on top of \"strip_tags()\".\n## References\n* [https://github.com/advisories/GHSA-8j24-cjrq-gr2m](https://github.com/advisories/GHSA-8j24-cjrq-gr2m)\n* [https://github.com/django/django/commit/9f3419b519799d69f2aba70b9d25abe2e70d03e0](https://github.com/django/django/commit/9f3419b519799d69f2aba70b9d25abe2e70d03e0)\n* [https://www.djangoproject.com/weblog/2025/may/07/security-releases/](https://www.djangoproject.com/weblog/2025/may/07/security-releases/)\n* [https://www.openwall.com/lists/oss-security/2025/05/07/1](https://www.openwall.com/lists/oss-security/2025/05/07/1)\n* [https://github.com/django/django/blob/5.2.1/docs/releases/5.2.1.txt#L10](https://github.com/django/django/blob/5.2.1/docs/releases/5.2.1.txt#L10)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-8j24-cjrq-gr2m",
                    "https://github.com/django/django/commit/9f3419b519799d69f2aba70b9d25abe2e70d03e0",
                    "https://www.djangoproject.com/weblog/2025/may/07/security-releases/",
                    "https://www.openwall.com/lists/oss-security/2025/05/07/1",
                    "https://github.com/django/django/blob/5.2.1/docs/releases/5.2.1.txt#L10"
                  ]
                }
              },
              "name": "AdvisoryCve202532873",
              "properties": {
                "cvss2": null,
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "HIGH",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss4": null,
                "cvePublishDate": "2025-05-08T04:17:18Z",
                "cwe": "CWE-770",
                "epssValue": "0.00024",
                "epssPercentile": "0.0495",
                "security-severity": "7.5"
              },
              "fullDescription": {
                "text": "CVE-2025-32873\nAn issue was discovered in Django versions through 4.2.20, 5.0a1 through 5.1.8, and 5.2a1 through 5.2. The \"django.utils.html.strip_tags()\" function is vulnerable to a potential Denial-Of-Service (slow performance) when processing inputs containing large sequences of incomplete HTML tags. The template filter striptags is also vulnerable, because it is built on top of \"strip_tags()\".\n\nhttps://github.com/advisories/GHSA-8j24-cjrq-gr2m\nhttps://github.com/django/django/commit/9f3419b519799d69f2aba70b9d25abe2e70d03e0\nhttps://www.djangoproject.com/weblog/2025/may/07/security-releases/\nhttps://www.openwall.com/lists/oss-security/2025/05/07/1\nhttps://github.com/django/django/blob/5.2.1/docs/releases/5.2.1.txt#L10",
                "markdown": "# CVE-2025-32873\n## Description\nAn issue was discovered in Django versions through 4.2.20, 5.0a1 through 5.1.8, and 5.2a1 through 5.2. The \"django.utils.html.strip_tags()\" function is vulnerable to a potential Denial-Of-Service (slow performance) when processing inputs containing large sequences of incomplete HTML tags. The template filter striptags is also vulnerable, because it is built on top of \"strip_tags()\".\n## References\n* [https://github.com/advisories/GHSA-8j24-cjrq-gr2m](https://github.com/advisories/GHSA-8j24-cjrq-gr2m)\n* [https://github.com/django/django/commit/9f3419b519799d69f2aba70b9d25abe2e70d03e0](https://github.com/django/django/commit/9f3419b519799d69f2aba70b9d25abe2e70d03e0)\n* [https://www.djangoproject.com/weblog/2025/may/07/security-releases/](https://www.djangoproject.com/weblog/2025/may/07/security-releases/)\n* [https://www.openwall.com/lists/oss-security/2025/05/07/1](https://www.openwall.com/lists/oss-security/2025/05/07/1)\n* [https://github.com/django/django/blob/5.2.1/docs/releases/5.2.1.txt#L10](https://github.com/django/django/blob/5.2.1/docs/releases/5.2.1.txt#L10)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-8j24-cjrq-gr2m",
                    "https://github.com/django/django/commit/9f3419b519799d69f2aba70b9d25abe2e70d03e0",
                    "https://www.djangoproject.com/weblog/2025/may/07/security-releases/",
                    "https://www.openwall.com/lists/oss-security/2025/05/07/1",
                    "https://github.com/django/django/blob/5.2.1/docs/releases/5.2.1.txt#L10"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2025-32873",
              "shortDescription": {
                "text": "CVE-2025-32873"
              }
            },
            {
              "id": "CVE-2021-44420",
              "help": {
                "text": "CVE-2021-44420\nIn Django before 2.2.25, 3.1.14,  3.2.10, and 4.0, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.\n\nhttps://github.com/advisories/GHSA-v6rh-hp5x-86rv\nhttps://www.djangoproject.com/weblog/2021/dec/07/security-releases/\nhttps://www.openwall.com/lists/oss-security/2021/12/07/1\nhttps://github.com/django/django/commit/d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6",
                "markdown": "# CVE-2021-44420\n## Description\nIn Django before 2.2.25, 3.1.14,  3.2.10, and 4.0, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.\n## References\n* [https://github.com/advisories/GHSA-v6rh-hp5x-86rv](https://github.com/advisories/GHSA-v6rh-hp5x-86rv)\n* [https://www.djangoproject.com/weblog/2021/dec/07/security-releases/](https://www.djangoproject.com/weblog/2021/dec/07/security-releases/)\n* [https://www.openwall.com/lists/oss-security/2021/12/07/1](https://www.openwall.com/lists/oss-security/2021/12/07/1)\n* [https://github.com/django/django/commit/d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6](https://github.com/django/django/commit/d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-v6rh-hp5x-86rv",
                    "https://www.djangoproject.com/weblog/2021/dec/07/security-releases/",
                    "https://www.openwall.com/lists/oss-security/2021/12/07/1",
                    "https://github.com/django/django/commit/d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6"
                  ]
                }
              },
              "name": "AdvisoryCve202144420",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "PARTIAL",
                  "Availability": "PARTIAL",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "High",
                  "BaseScore": "7.5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "LOW",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "LOW",
                  "Availability": "LOW",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.3"
                },
                "cvss4": null,
                "cvePublishDate": "2021-12-08T00:15:00Z",
                "cwe": "CWE-287",
                "epssValue": "0.00106",
                "epssPercentile": "0.29626",
                "security-severity": "7.3"
              },
              "fullDescription": {
                "text": "CVE-2021-44420\nIn Django before 2.2.25, 3.1.14,  3.2.10, and 4.0, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.\n\nhttps://github.com/advisories/GHSA-v6rh-hp5x-86rv\nhttps://www.djangoproject.com/weblog/2021/dec/07/security-releases/\nhttps://www.openwall.com/lists/oss-security/2021/12/07/1\nhttps://github.com/django/django/commit/d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6",
                "markdown": "# CVE-2021-44420\n## Description\nIn Django before 2.2.25, 3.1.14,  3.2.10, and 4.0, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.\n## References\n* [https://github.com/advisories/GHSA-v6rh-hp5x-86rv](https://github.com/advisories/GHSA-v6rh-hp5x-86rv)\n* [https://www.djangoproject.com/weblog/2021/dec/07/security-releases/](https://www.djangoproject.com/weblog/2021/dec/07/security-releases/)\n* [https://www.openwall.com/lists/oss-security/2021/12/07/1](https://www.openwall.com/lists/oss-security/2021/12/07/1)\n* [https://github.com/django/django/commit/d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6](https://github.com/django/django/commit/d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-v6rh-hp5x-86rv",
                    "https://www.djangoproject.com/weblog/2021/dec/07/security-releases/",
                    "https://www.openwall.com/lists/oss-security/2021/12/07/1",
                    "https://github.com/django/django/commit/d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2021-44420",
              "shortDescription": {
                "text": "CVE-2021-44420"
              }
            },
            {
              "id": "CVE-2024-42005",
              "help": {
                "text": "CVE-2024-42005\nAn issue was discovered in Django versions through 4.2.14, 5.0a1 through 5.0.7, and 5.1a1 through 5.1rc1. \"QuerySet.values()\" and \"values_list()\" methods on models with a \"JSONField\" are subject to SQL injection in column aliases via a crafted JSON object key as a passed *arg.\n\nhttps://github.com/advisories/GHSA-pv4p-cwwg-4rph\nhttps://github.com/django/django/commit/c87bfaacf8fb84984243b5055dc70f97996cb115\nhttps://docs.djangoproject.com/en/dev/releases/security/#august-6-2024-cve-2024-42005\nhttps://www.djangoproject.com/weblog/2024/aug/06/security-releases/",
                "markdown": "# CVE-2024-42005\n## Description\nAn issue was discovered in Django versions through 4.2.14, 5.0a1 through 5.0.7, and 5.1a1 through 5.1rc1. \"QuerySet.values()\" and \"values_list()\" methods on models with a \"JSONField\" are subject to SQL injection in column aliases via a crafted JSON object key as a passed *arg.\n## References\n* [https://github.com/advisories/GHSA-pv4p-cwwg-4rph](https://github.com/advisories/GHSA-pv4p-cwwg-4rph)\n* [https://github.com/django/django/commit/c87bfaacf8fb84984243b5055dc70f97996cb115](https://github.com/django/django/commit/c87bfaacf8fb84984243b5055dc70f97996cb115)\n* [https://docs.djangoproject.com/en/dev/releases/security/#august-6-2024-cve-2024-42005](https://docs.djangoproject.com/en/dev/releases/security/#august-6-2024-cve-2024-42005)\n* [https://www.djangoproject.com/weblog/2024/aug/06/security-releases/](https://www.djangoproject.com/weblog/2024/aug/06/security-releases/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-pv4p-cwwg-4rph",
                    "https://github.com/django/django/commit/c87bfaacf8fb84984243b5055dc70f97996cb115",
                    "https://docs.djangoproject.com/en/dev/releases/security/#august-6-2024-cve-2024-42005",
                    "https://www.djangoproject.com/weblog/2024/aug/06/security-releases/"
                  ]
                }
              },
              "name": "AdvisoryCve202442005",
              "properties": {
                "cvss2": null,
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "LOW",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "LOW",
                  "Availability": "LOW",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "High",
                  "BaseScore": "7.3"
                },
                "cvss4": null,
                "cvePublishDate": "2024-08-07T15:15:00Z",
                "cwe": "CWE-89",
                "epssValue": "0.00285",
                "epssPercentile": "0.51662",
                "security-severity": "7.3"
              },
              "fullDescription": {
                "text": "CVE-2024-42005\nAn issue was discovered in Django versions through 4.2.14, 5.0a1 through 5.0.7, and 5.1a1 through 5.1rc1. \"QuerySet.values()\" and \"values_list()\" methods on models with a \"JSONField\" are subject to SQL injection in column aliases via a crafted JSON object key as a passed *arg.\n\nhttps://github.com/advisories/GHSA-pv4p-cwwg-4rph\nhttps://github.com/django/django/commit/c87bfaacf8fb84984243b5055dc70f97996cb115\nhttps://docs.djangoproject.com/en/dev/releases/security/#august-6-2024-cve-2024-42005\nhttps://www.djangoproject.com/weblog/2024/aug/06/security-releases/",
                "markdown": "# CVE-2024-42005\n## Description\nAn issue was discovered in Django versions through 4.2.14, 5.0a1 through 5.0.7, and 5.1a1 through 5.1rc1. \"QuerySet.values()\" and \"values_list()\" methods on models with a \"JSONField\" are subject to SQL injection in column aliases via a crafted JSON object key as a passed *arg.\n## References\n* [https://github.com/advisories/GHSA-pv4p-cwwg-4rph](https://github.com/advisories/GHSA-pv4p-cwwg-4rph)\n* [https://github.com/django/django/commit/c87bfaacf8fb84984243b5055dc70f97996cb115](https://github.com/django/django/commit/c87bfaacf8fb84984243b5055dc70f97996cb115)\n* [https://docs.djangoproject.com/en/dev/releases/security/#august-6-2024-cve-2024-42005](https://docs.djangoproject.com/en/dev/releases/security/#august-6-2024-cve-2024-42005)\n* [https://www.djangoproject.com/weblog/2024/aug/06/security-releases/](https://www.djangoproject.com/weblog/2024/aug/06/security-releases/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-pv4p-cwwg-4rph",
                    "https://github.com/django/django/commit/c87bfaacf8fb84984243b5055dc70f97996cb115",
                    "https://docs.djangoproject.com/en/dev/releases/security/#august-6-2024-cve-2024-42005",
                    "https://www.djangoproject.com/weblog/2024/aug/06/security-releases/"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2024-42005",
              "shortDescription": {
                "text": "CVE-2024-42005"
              }
            },
            {
              "id": "CVE-2024-39329",
              "help": {
                "text": "CVE-2024-39329\nAn issue was discovered in Django versions prior to 4.2.14, 5.0.x prior to 5.0.7, 5.1a1, and 5.1b1. The \"django.contrib.auth.backends.ModelBackend.authenticate()\" method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.\n\nhttps://github.com/advisories/GHSA-x7q2-wr7g-xqmf\nhttps://github.com/django/django/commit/5d8645857936c142a3973694799c52165e2bdcdb\nhttps://www.djangoproject.com/weblog/2024/jul/09/security-releases/\nhttps://docs.djangoproject.com/en/dev/releases/security/",
                "markdown": "# CVE-2024-39329\n## Description\nAn issue was discovered in Django versions prior to 4.2.14, 5.0.x prior to 5.0.7, 5.1a1, and 5.1b1. The \"django.contrib.auth.backends.ModelBackend.authenticate()\" method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.\n## References\n* [https://github.com/advisories/GHSA-x7q2-wr7g-xqmf](https://github.com/advisories/GHSA-x7q2-wr7g-xqmf)\n* [https://github.com/django/django/commit/5d8645857936c142a3973694799c52165e2bdcdb](https://github.com/django/django/commit/5d8645857936c142a3973694799c52165e2bdcdb)\n* [https://www.djangoproject.com/weblog/2024/jul/09/security-releases/](https://www.djangoproject.com/weblog/2024/jul/09/security-releases/)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-x7q2-wr7g-xqmf",
                    "https://github.com/django/django/commit/5d8645857936c142a3973694799c52165e2bdcdb",
                    "https://www.djangoproject.com/weblog/2024/jul/09/security-releases/",
                    "https://docs.djangoproject.com/en/dev/releases/security/"
                  ]
                }
              },
              "name": "AdvisoryCve202439329",
              "properties": {
                "cvss2": null,
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "LOW",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "3.9",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium",
                  "BaseScore": "5.3"
                },
                "cvss4": {
                  "BaseScore": "6.9",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "AttackRequirements": "NONE",
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "VulnerableSystemConfidentiality": "LOW",
                  "VulnerableSystemIntegrity": "NONE",
                  "VulnerableSystemAvailability": "NONE",
                  "SubsequentSystemConfidentiality": "NONE",
                  "SubsequentSystemIntegrity": "NONE",
                  "SubsequentSystemAvailability": "NONE",
                  "ExploitMaturity": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium"
                },
                "cvePublishDate": "2024-07-10T05:15:12Z",
                "cwe": "CWE-208",
                "epssValue": "0.00088",
                "epssPercentile": "0.26546",
                "security-severity": "6.9"
              },
              "fullDescription": {
                "text": "CVE-2024-39329\nAn issue was discovered in Django versions prior to 4.2.14, 5.0.x prior to 5.0.7, 5.1a1, and 5.1b1. The \"django.contrib.auth.backends.ModelBackend.authenticate()\" method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.\n\nhttps://github.com/advisories/GHSA-x7q2-wr7g-xqmf\nhttps://github.com/django/django/commit/5d8645857936c142a3973694799c52165e2bdcdb\nhttps://www.djangoproject.com/weblog/2024/jul/09/security-releases/\nhttps://docs.djangoproject.com/en/dev/releases/security/",
                "markdown": "# CVE-2024-39329\n## Description\nAn issue was discovered in Django versions prior to 4.2.14, 5.0.x prior to 5.0.7, 5.1a1, and 5.1b1. The \"django.contrib.auth.backends.ModelBackend.authenticate()\" method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.\n## References\n* [https://github.com/advisories/GHSA-x7q2-wr7g-xqmf](https://github.com/advisories/GHSA-x7q2-wr7g-xqmf)\n* [https://github.com/django/django/commit/5d8645857936c142a3973694799c52165e2bdcdb](https://github.com/django/django/commit/5d8645857936c142a3973694799c52165e2bdcdb)\n* [https://www.djangoproject.com/weblog/2024/jul/09/security-releases/](https://www.djangoproject.com/weblog/2024/jul/09/security-releases/)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-x7q2-wr7g-xqmf",
                    "https://github.com/django/django/commit/5d8645857936c142a3973694799c52165e2bdcdb",
                    "https://www.djangoproject.com/weblog/2024/jul/09/security-releases/",
                    "https://docs.djangoproject.com/en/dev/releases/security/"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2024-39329",
              "shortDescription": {
                "text": "CVE-2024-39329"
              }
            },
            {
              "id": "CVE-2019-19118",
              "help": {
                "text": "CVE-2019-19118\nDjango 2.1 before 2.1.15, 2.2 before 2.2.8 and versions between 3.0a1 to 3.0rc1 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)\n\nhttps://github.com/advisories/GHSA-hvmf-r92r-27hr\nhttps://www.djangoproject.com/weblog/2019/dec/02/security-releases/\nhttps://github.com/django/django/commit/11c5e0609bcc0db93809de2a08e0dc3d70b393e4",
                "markdown": "# CVE-2019-19118\n## Description\nDjango 2.1 before 2.1.15, 2.2 before 2.2.8 and versions between 3.0a1 to 3.0rc1 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)\n## References\n* [https://github.com/advisories/GHSA-hvmf-r92r-27hr](https://github.com/advisories/GHSA-hvmf-r92r-27hr)\n* [https://www.djangoproject.com/weblog/2019/dec/02/security-releases/](https://www.djangoproject.com/weblog/2019/dec/02/security-releases/)\n* [https://github.com/django/django/commit/11c5e0609bcc0db93809de2a08e0dc3d70b393e4](https://github.com/django/django/commit/11c5e0609bcc0db93809de2a08e0dc3d70b393e4)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-hvmf-r92r-27hr",
                    "https://www.djangoproject.com/weblog/2019/dec/02/security-releases/",
                    "https://github.com/django/django/commit/11c5e0609bcc0db93809de2a08e0dc3d70b393e4"
                  ]
                }
              },
              "name": "AdvisoryCve201919118",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "8",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "SINGLE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "Medium",
                  "BaseScore": "4"
                },
                "cvss3": {
                  "PrivilegesRequired": "LOW",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "HIGH",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium",
                  "BaseScore": "6.5"
                },
                "cvss4": null,
                "cvePublishDate": "2019-12-02T14:15:00Z",
                "cwe": "CWE-276",
                "epssValue": "0.00256",
                "epssPercentile": "0.48874",
                "security-severity": "6.5"
              },
              "fullDescription": {
                "text": "CVE-2019-19118\nDjango 2.1 before 2.1.15, 2.2 before 2.2.8 and versions between 3.0a1 to 3.0rc1 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)\n\nhttps://github.com/advisories/GHSA-hvmf-r92r-27hr\nhttps://www.djangoproject.com/weblog/2019/dec/02/security-releases/\nhttps://github.com/django/django/commit/11c5e0609bcc0db93809de2a08e0dc3d70b393e4",
                "markdown": "# CVE-2019-19118\n## Description\nDjango 2.1 before 2.1.15, 2.2 before 2.2.8 and versions between 3.0a1 to 3.0rc1 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)\n## References\n* [https://github.com/advisories/GHSA-hvmf-r92r-27hr](https://github.com/advisories/GHSA-hvmf-r92r-27hr)\n* [https://www.djangoproject.com/weblog/2019/dec/02/security-releases/](https://www.djangoproject.com/weblog/2019/dec/02/security-releases/)\n* [https://github.com/django/django/commit/11c5e0609bcc0db93809de2a08e0dc3d70b393e4](https://github.com/django/django/commit/11c5e0609bcc0db93809de2a08e0dc3d70b393e4)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-hvmf-r92r-27hr",
                    "https://www.djangoproject.com/weblog/2019/dec/02/security-releases/",
                    "https://github.com/django/django/commit/11c5e0609bcc0db93809de2a08e0dc3d70b393e4"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2019-19118",
              "shortDescription": {
                "text": "CVE-2019-19118"
              }
            },
            {
              "id": "CVE-2019-3498",
              "help": {
                "text": "CVE-2019-3498\nIn Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content. Branches prior to 1.11.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-337x-4q8g-prc5\nhttps://lists.debian.org/debian-lts-announce/2019/01/msg00005.html\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://www.djangoproject.com/weblog/2019/jan/04/security-releases/\nhttps://github.com/django/django/commit/1ecc0a395be721e987e8e9fdfadde952b6dee1c7\nhttps://github.com/django/django/commit/1cd00fcf52d089ef0fe03beabd05d59df8ea052a\nhttps://github.com/django/django/commit/9f4ed7c94c62e21644ef5115e393ac426b886f2e\nhttps://github.com/django/django/commit/64d2396e83aedba3fcc84ca40f23fbd22f0b9b5b",
                "markdown": "# CVE-2019-3498\n## Description\nIn Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content. Branches prior to 1.11.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-337x-4q8g-prc5](https://github.com/advisories/GHSA-337x-4q8g-prc5)\n* [https://lists.debian.org/debian-lts-announce/2019/01/msg00005.html](https://lists.debian.org/debian-lts-announce/2019/01/msg00005.html)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://www.djangoproject.com/weblog/2019/jan/04/security-releases/](https://www.djangoproject.com/weblog/2019/jan/04/security-releases/)\n* [https://github.com/django/django/commit/1ecc0a395be721e987e8e9fdfadde952b6dee1c7](https://github.com/django/django/commit/1ecc0a395be721e987e8e9fdfadde952b6dee1c7)\n* [https://github.com/django/django/commit/1cd00fcf52d089ef0fe03beabd05d59df8ea052a](https://github.com/django/django/commit/1cd00fcf52d089ef0fe03beabd05d59df8ea052a)\n* [https://github.com/django/django/commit/9f4ed7c94c62e21644ef5115e393ac426b886f2e](https://github.com/django/django/commit/9f4ed7c94c62e21644ef5115e393ac426b886f2e)\n* [https://github.com/django/django/commit/64d2396e83aedba3fcc84ca40f23fbd22f0b9b5b](https://github.com/django/django/commit/64d2396e83aedba3fcc84ca40f23fbd22f0b9b5b)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-337x-4q8g-prc5",
                    "https://lists.debian.org/debian-lts-announce/2019/01/msg00005.html",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://www.djangoproject.com/weblog/2019/jan/04/security-releases/",
                    "https://github.com/django/django/commit/1ecc0a395be721e987e8e9fdfadde952b6dee1c7",
                    "https://github.com/django/django/commit/1cd00fcf52d089ef0fe03beabd05d59df8ea052a",
                    "https://github.com/django/django/commit/9f4ed7c94c62e21644ef5115e393ac426b886f2e",
                    "https://github.com/django/django/commit/64d2396e83aedba3fcc84ca40f23fbd22f0b9b5b"
                  ]
                }
              },
              "name": "AdvisoryCve20193498",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "MEDIUM",
                  "Confidentiality": "NONE",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "8.6",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "Medium",
                  "BaseScore": "4.3"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "REQUIRED",
                  "Scope": "UNCHANGED",
                  "Integrity": "HIGH",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium",
                  "BaseScore": "6.5"
                },
                "cvss4": null,
                "cvePublishDate": "2019-01-09T23:29:00Z",
                "cwe": "CWE-74",
                "epssValue": "0.01523",
                "epssPercentile": "0.80469",
                "security-severity": "6.5"
              },
              "fullDescription": {
                "text": "CVE-2019-3498\nIn Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content. Branches prior to 1.11.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-337x-4q8g-prc5\nhttps://lists.debian.org/debian-lts-announce/2019/01/msg00005.html\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://www.djangoproject.com/weblog/2019/jan/04/security-releases/\nhttps://github.com/django/django/commit/1ecc0a395be721e987e8e9fdfadde952b6dee1c7\nhttps://github.com/django/django/commit/1cd00fcf52d089ef0fe03beabd05d59df8ea052a\nhttps://github.com/django/django/commit/9f4ed7c94c62e21644ef5115e393ac426b886f2e\nhttps://github.com/django/django/commit/64d2396e83aedba3fcc84ca40f23fbd22f0b9b5b",
                "markdown": "# CVE-2019-3498\n## Description\nIn Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content. Branches prior to 1.11.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-337x-4q8g-prc5](https://github.com/advisories/GHSA-337x-4q8g-prc5)\n* [https://lists.debian.org/debian-lts-announce/2019/01/msg00005.html](https://lists.debian.org/debian-lts-announce/2019/01/msg00005.html)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://www.djangoproject.com/weblog/2019/jan/04/security-releases/](https://www.djangoproject.com/weblog/2019/jan/04/security-releases/)\n* [https://github.com/django/django/commit/1ecc0a395be721e987e8e9fdfadde952b6dee1c7](https://github.com/django/django/commit/1ecc0a395be721e987e8e9fdfadde952b6dee1c7)\n* [https://github.com/django/django/commit/1cd00fcf52d089ef0fe03beabd05d59df8ea052a](https://github.com/django/django/commit/1cd00fcf52d089ef0fe03beabd05d59df8ea052a)\n* [https://github.com/django/django/commit/9f4ed7c94c62e21644ef5115e393ac426b886f2e](https://github.com/django/django/commit/9f4ed7c94c62e21644ef5115e393ac426b886f2e)\n* [https://github.com/django/django/commit/64d2396e83aedba3fcc84ca40f23fbd22f0b9b5b](https://github.com/django/django/commit/64d2396e83aedba3fcc84ca40f23fbd22f0b9b5b)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-337x-4q8g-prc5",
                    "https://lists.debian.org/debian-lts-announce/2019/01/msg00005.html",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://www.djangoproject.com/weblog/2019/jan/04/security-releases/",
                    "https://github.com/django/django/commit/1ecc0a395be721e987e8e9fdfadde952b6dee1c7",
                    "https://github.com/django/django/commit/1cd00fcf52d089ef0fe03beabd05d59df8ea052a",
                    "https://github.com/django/django/commit/9f4ed7c94c62e21644ef5115e393ac426b886f2e",
                    "https://github.com/django/django/commit/64d2396e83aedba3fcc84ca40f23fbd22f0b9b5b"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2019-3498",
              "shortDescription": {
                "text": "CVE-2019-3498"
              }
            },
            {
              "id": "CVE-2016-6186",
              "help": {
                "text": "CVE-2016-6186\nCross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML. Branches prior to 1.8.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-c8c8-9472-w52h\nhttps://www.djangoproject.com/weblog/2016/jul/18/security-releases/\nhttps://github.com/django/django/commit/93c538694e6b14a29cb0f52b784a3bfed604fda6\nhttps://github.com/django/django/commit/6fa150b2f8b601668083042324c4add534143cb1\nhttps://github.com/django/django/commit/d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158\nhttps://github.com/django/django/commit/f68e5a99164867ab0e071a936470958ed867479d",
                "markdown": "# CVE-2016-6186\n## Description\nCross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML. Branches prior to 1.8.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-c8c8-9472-w52h](https://github.com/advisories/GHSA-c8c8-9472-w52h)\n* [https://www.djangoproject.com/weblog/2016/jul/18/security-releases/](https://www.djangoproject.com/weblog/2016/jul/18/security-releases/)\n* [https://github.com/django/django/commit/93c538694e6b14a29cb0f52b784a3bfed604fda6](https://github.com/django/django/commit/93c538694e6b14a29cb0f52b784a3bfed604fda6)\n* [https://github.com/django/django/commit/6fa150b2f8b601668083042324c4add534143cb1](https://github.com/django/django/commit/6fa150b2f8b601668083042324c4add534143cb1)\n* [https://github.com/django/django/commit/d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158](https://github.com/django/django/commit/d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158)\n* [https://github.com/django/django/commit/f68e5a99164867ab0e071a936470958ed867479d](https://github.com/django/django/commit/f68e5a99164867ab0e071a936470958ed867479d)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-c8c8-9472-w52h",
                    "https://www.djangoproject.com/weblog/2016/jul/18/security-releases/",
                    "https://github.com/django/django/commit/93c538694e6b14a29cb0f52b784a3bfed604fda6",
                    "https://github.com/django/django/commit/6fa150b2f8b601668083042324c4add534143cb1",
                    "https://github.com/django/django/commit/d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158",
                    "https://github.com/django/django/commit/f68e5a99164867ab0e071a936470958ed867479d"
                  ]
                }
              },
              "name": "AdvisoryCve20166186",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "MEDIUM",
                  "Confidentiality": "NONE",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "8.6",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "Medium",
                  "BaseScore": "4.3"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "REQUIRED",
                  "Scope": "CHANGED",
                  "Integrity": "LOW",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "LOW",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium",
                  "BaseScore": "6.1"
                },
                "cvss4": null,
                "cvePublishDate": "2016-08-05T15:59:00Z",
                "cwe": "CWE-79",
                "epssValue": "0.13095",
                "epssPercentile": "0.93683",
                "security-severity": "6.1"
              },
              "fullDescription": {
                "text": "CVE-2016-6186\nCross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML. Branches prior to 1.8.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-c8c8-9472-w52h\nhttps://www.djangoproject.com/weblog/2016/jul/18/security-releases/\nhttps://github.com/django/django/commit/93c538694e6b14a29cb0f52b784a3bfed604fda6\nhttps://github.com/django/django/commit/6fa150b2f8b601668083042324c4add534143cb1\nhttps://github.com/django/django/commit/d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158\nhttps://github.com/django/django/commit/f68e5a99164867ab0e071a936470958ed867479d",
                "markdown": "# CVE-2016-6186\n## Description\nCross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML. Branches prior to 1.8.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-c8c8-9472-w52h](https://github.com/advisories/GHSA-c8c8-9472-w52h)\n* [https://www.djangoproject.com/weblog/2016/jul/18/security-releases/](https://www.djangoproject.com/weblog/2016/jul/18/security-releases/)\n* [https://github.com/django/django/commit/93c538694e6b14a29cb0f52b784a3bfed604fda6](https://github.com/django/django/commit/93c538694e6b14a29cb0f52b784a3bfed604fda6)\n* [https://github.com/django/django/commit/6fa150b2f8b601668083042324c4add534143cb1](https://github.com/django/django/commit/6fa150b2f8b601668083042324c4add534143cb1)\n* [https://github.com/django/django/commit/d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158](https://github.com/django/django/commit/d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158)\n* [https://github.com/django/django/commit/f68e5a99164867ab0e071a936470958ed867479d](https://github.com/django/django/commit/f68e5a99164867ab0e071a936470958ed867479d)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-c8c8-9472-w52h",
                    "https://www.djangoproject.com/weblog/2016/jul/18/security-releases/",
                    "https://github.com/django/django/commit/93c538694e6b14a29cb0f52b784a3bfed604fda6",
                    "https://github.com/django/django/commit/6fa150b2f8b601668083042324c4add534143cb1",
                    "https://github.com/django/django/commit/d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158",
                    "https://github.com/django/django/commit/f68e5a99164867ab0e071a936470958ed867479d"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2016-6186",
              "shortDescription": {
                "text": "CVE-2016-6186"
              }
            },
            {
              "id": "CVE-2017-12794",
              "help": {
                "text": "CVE-2017-12794\nIn Django, HTML auto escaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a Cross-Site Scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with \"DEBUG = True\" (which makes this page accessible) in your production settings. This issue affects Django versions  1.9 through 1.10.7, and 1.11a1 through 1.11.4.\n\nhttps://www.djangoproject.com/weblog/2017/sep/05/security-releases/\nhttps://github.com/django/django/commit/46e2b9e059e617afe6fe56da9f132568a7e6b198\nhttps://github.com/advisories/GHSA-9r8w-6x8c-6jr9",
                "markdown": "# CVE-2017-12794\n## Description\nIn Django, HTML auto escaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a Cross-Site Scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with \"DEBUG = True\" (which makes this page accessible) in your production settings. This issue affects Django versions  1.9 through 1.10.7, and 1.11a1 through 1.11.4.\n## References\n* [https://www.djangoproject.com/weblog/2017/sep/05/security-releases/](https://www.djangoproject.com/weblog/2017/sep/05/security-releases/)\n* [https://github.com/django/django/commit/46e2b9e059e617afe6fe56da9f132568a7e6b198](https://github.com/django/django/commit/46e2b9e059e617afe6fe56da9f132568a7e6b198)\n* [https://github.com/advisories/GHSA-9r8w-6x8c-6jr9](https://github.com/advisories/GHSA-9r8w-6x8c-6jr9)",
                "properties": {
                  "references": [
                    "https://www.djangoproject.com/weblog/2017/sep/05/security-releases/",
                    "https://github.com/django/django/commit/46e2b9e059e617afe6fe56da9f132568a7e6b198",
                    "https://github.com/advisories/GHSA-9r8w-6x8c-6jr9"
                  ]
                }
              },
              "name": "AdvisoryCve201712794",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "MEDIUM",
                  "Confidentiality": "NONE",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "8.6",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "Medium",
                  "BaseScore": "4.3"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "REQUIRED",
                  "Scope": "CHANGED",
                  "Integrity": "LOW",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "LOW",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium",
                  "BaseScore": "6.1"
                },
                "cvss4": null,
                "cvePublishDate": "2017-09-07T13:29:00Z",
                "cwe": "CWE-79",
                "epssValue": "0.13032",
                "epssPercentile": "0.93796",
                "security-severity": "6.1"
              },
              "fullDescription": {
                "text": "CVE-2017-12794\nIn Django, HTML auto escaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a Cross-Site Scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with \"DEBUG = True\" (which makes this page accessible) in your production settings. This issue affects Django versions  1.9 through 1.10.7, and 1.11a1 through 1.11.4.\n\nhttps://www.djangoproject.com/weblog/2017/sep/05/security-releases/\nhttps://github.com/django/django/commit/46e2b9e059e617afe6fe56da9f132568a7e6b198\nhttps://github.com/advisories/GHSA-9r8w-6x8c-6jr9",
                "markdown": "# CVE-2017-12794\n## Description\nIn Django, HTML auto escaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a Cross-Site Scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with \"DEBUG = True\" (which makes this page accessible) in your production settings. This issue affects Django versions  1.9 through 1.10.7, and 1.11a1 through 1.11.4.\n## References\n* [https://www.djangoproject.com/weblog/2017/sep/05/security-releases/](https://www.djangoproject.com/weblog/2017/sep/05/security-releases/)\n* [https://github.com/django/django/commit/46e2b9e059e617afe6fe56da9f132568a7e6b198](https://github.com/django/django/commit/46e2b9e059e617afe6fe56da9f132568a7e6b198)\n* [https://github.com/advisories/GHSA-9r8w-6x8c-6jr9](https://github.com/advisories/GHSA-9r8w-6x8c-6jr9)",
                "properties": {
                  "references": [
                    "https://www.djangoproject.com/weblog/2017/sep/05/security-releases/",
                    "https://github.com/django/django/commit/46e2b9e059e617afe6fe56da9f132568a7e6b198",
                    "https://github.com/advisories/GHSA-9r8w-6x8c-6jr9"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2017-12794",
              "shortDescription": {
                "text": "CVE-2017-12794"
              }
            },
            {
              "id": "CVE-2017-7233",
              "help": {
                "text": "CVE-2017-7233\nDjango 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an \"on success\" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs \"safe\" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack. Branches prior to 1.8.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-37hp-765x-j95x\nhttps://www.djangoproject.com/weblog/2017/apr/04/security-releases/\nhttps://github.com/django/django/commit/5ea48a70afac5e5684b504f09286e7defdd1a81a\nhttps://github.com/django/django/commit/97e77b7bc14eafda704a01881cb2a3dc164947bc\nhttps://github.com/django/django/commit/f824655bc2c50b19d2f202d7640785caabc82787\nhttps://github.com/django/django/commit/254326cb3682389f55f886804d2c43f7b9f23e4f\nhttps://github.com/django/django/commit/8339277518c7d8ec280070a780915304654e3b66",
                "markdown": "# CVE-2017-7233\n## Description\nDjango 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an \"on success\" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs \"safe\" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack. Branches prior to 1.8.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-37hp-765x-j95x](https://github.com/advisories/GHSA-37hp-765x-j95x)\n* [https://www.djangoproject.com/weblog/2017/apr/04/security-releases/](https://www.djangoproject.com/weblog/2017/apr/04/security-releases/)\n* [https://github.com/django/django/commit/5ea48a70afac5e5684b504f09286e7defdd1a81a](https://github.com/django/django/commit/5ea48a70afac5e5684b504f09286e7defdd1a81a)\n* [https://github.com/django/django/commit/97e77b7bc14eafda704a01881cb2a3dc164947bc](https://github.com/django/django/commit/97e77b7bc14eafda704a01881cb2a3dc164947bc)\n* [https://github.com/django/django/commit/f824655bc2c50b19d2f202d7640785caabc82787](https://github.com/django/django/commit/f824655bc2c50b19d2f202d7640785caabc82787)\n* [https://github.com/django/django/commit/254326cb3682389f55f886804d2c43f7b9f23e4f](https://github.com/django/django/commit/254326cb3682389f55f886804d2c43f7b9f23e4f)\n* [https://github.com/django/django/commit/8339277518c7d8ec280070a780915304654e3b66](https://github.com/django/django/commit/8339277518c7d8ec280070a780915304654e3b66)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-37hp-765x-j95x",
                    "https://www.djangoproject.com/weblog/2017/apr/04/security-releases/",
                    "https://github.com/django/django/commit/5ea48a70afac5e5684b504f09286e7defdd1a81a",
                    "https://github.com/django/django/commit/97e77b7bc14eafda704a01881cb2a3dc164947bc",
                    "https://github.com/django/django/commit/f824655bc2c50b19d2f202d7640785caabc82787",
                    "https://github.com/django/django/commit/254326cb3682389f55f886804d2c43f7b9f23e4f",
                    "https://github.com/django/django/commit/8339277518c7d8ec280070a780915304654e3b66"
                  ]
                }
              },
              "name": "AdvisoryCve20177233",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "MEDIUM",
                  "Confidentiality": "PARTIAL",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "8.6",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "Medium",
                  "BaseScore": "5.8"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "REQUIRED",
                  "Scope": "CHANGED",
                  "Integrity": "LOW",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "LOW",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium",
                  "BaseScore": "6.1"
                },
                "cvss4": null,
                "cvePublishDate": "2017-04-04T17:59:00Z",
                "cwe": "CWE-601",
                "epssValue": "0.00747",
                "epssPercentile": "0.72021",
                "security-severity": "6.1"
              },
              "fullDescription": {
                "text": "CVE-2017-7233\nDjango 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an \"on success\" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs \"safe\" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack. Branches prior to 1.8.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-37hp-765x-j95x\nhttps://www.djangoproject.com/weblog/2017/apr/04/security-releases/\nhttps://github.com/django/django/commit/5ea48a70afac5e5684b504f09286e7defdd1a81a\nhttps://github.com/django/django/commit/97e77b7bc14eafda704a01881cb2a3dc164947bc\nhttps://github.com/django/django/commit/f824655bc2c50b19d2f202d7640785caabc82787\nhttps://github.com/django/django/commit/254326cb3682389f55f886804d2c43f7b9f23e4f\nhttps://github.com/django/django/commit/8339277518c7d8ec280070a780915304654e3b66",
                "markdown": "# CVE-2017-7233\n## Description\nDjango 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an \"on success\" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs \"safe\" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack. Branches prior to 1.8.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-37hp-765x-j95x](https://github.com/advisories/GHSA-37hp-765x-j95x)\n* [https://www.djangoproject.com/weblog/2017/apr/04/security-releases/](https://www.djangoproject.com/weblog/2017/apr/04/security-releases/)\n* [https://github.com/django/django/commit/5ea48a70afac5e5684b504f09286e7defdd1a81a](https://github.com/django/django/commit/5ea48a70afac5e5684b504f09286e7defdd1a81a)\n* [https://github.com/django/django/commit/97e77b7bc14eafda704a01881cb2a3dc164947bc](https://github.com/django/django/commit/97e77b7bc14eafda704a01881cb2a3dc164947bc)\n* [https://github.com/django/django/commit/f824655bc2c50b19d2f202d7640785caabc82787](https://github.com/django/django/commit/f824655bc2c50b19d2f202d7640785caabc82787)\n* [https://github.com/django/django/commit/254326cb3682389f55f886804d2c43f7b9f23e4f](https://github.com/django/django/commit/254326cb3682389f55f886804d2c43f7b9f23e4f)\n* [https://github.com/django/django/commit/8339277518c7d8ec280070a780915304654e3b66](https://github.com/django/django/commit/8339277518c7d8ec280070a780915304654e3b66)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-37hp-765x-j95x",
                    "https://www.djangoproject.com/weblog/2017/apr/04/security-releases/",
                    "https://github.com/django/django/commit/5ea48a70afac5e5684b504f09286e7defdd1a81a",
                    "https://github.com/django/django/commit/97e77b7bc14eafda704a01881cb2a3dc164947bc",
                    "https://github.com/django/django/commit/f824655bc2c50b19d2f202d7640785caabc82787",
                    "https://github.com/django/django/commit/254326cb3682389f55f886804d2c43f7b9f23e4f",
                    "https://github.com/django/django/commit/8339277518c7d8ec280070a780915304654e3b66"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2017-7233",
              "shortDescription": {
                "text": "CVE-2017-7233"
              }
            },
            {
              "id": "CVE-2017-7234",
              "help": {
                "text": "CVE-2017-7234\nA maliciously crafted URL to a Django site using the \"django.views.static.serve()\" view could redirect to any other domain, aka an open redirect vulnerability. This issue affects Django versions 1.1.3 through 1.8.17, 1.9a1 through 1.9.12, 1.10a1 through 1.10.6, and 1.11a1 through 1.11rc1.\n\nhttps://www.djangoproject.com/weblog/2017/apr/04/security-releases/\nhttps://github.com/django/django/commit/a1f948b468b6621083a03b0d53432341b7a4d753\nhttps://github.com/advisories/GHSA-h4hv-m4h4-mhwg",
                "markdown": "# CVE-2017-7234\n## Description\nA maliciously crafted URL to a Django site using the \"django.views.static.serve()\" view could redirect to any other domain, aka an open redirect vulnerability. This issue affects Django versions 1.1.3 through 1.8.17, 1.9a1 through 1.9.12, 1.10a1 through 1.10.6, and 1.11a1 through 1.11rc1.\n## References\n* [https://www.djangoproject.com/weblog/2017/apr/04/security-releases/](https://www.djangoproject.com/weblog/2017/apr/04/security-releases/)\n* [https://github.com/django/django/commit/a1f948b468b6621083a03b0d53432341b7a4d753](https://github.com/django/django/commit/a1f948b468b6621083a03b0d53432341b7a4d753)\n* [https://github.com/advisories/GHSA-h4hv-m4h4-mhwg](https://github.com/advisories/GHSA-h4hv-m4h4-mhwg)",
                "properties": {
                  "references": [
                    "https://www.djangoproject.com/weblog/2017/apr/04/security-releases/",
                    "https://github.com/django/django/commit/a1f948b468b6621083a03b0d53432341b7a4d753",
                    "https://github.com/advisories/GHSA-h4hv-m4h4-mhwg"
                  ]
                }
              },
              "name": "AdvisoryCve20177234",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "MEDIUM",
                  "Confidentiality": "PARTIAL",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "8.6",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "Medium",
                  "BaseScore": "5.8"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "REQUIRED",
                  "Scope": "CHANGED",
                  "Integrity": "LOW",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "LOW",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium",
                  "BaseScore": "6.1"
                },
                "cvss4": null,
                "cvePublishDate": "2017-04-04T17:59:00Z",
                "cwe": "CWE-601",
                "epssValue": "0.00422",
                "epssPercentile": "0.61163",
                "security-severity": "6.1"
              },
              "fullDescription": {
                "text": "CVE-2017-7234\nA maliciously crafted URL to a Django site using the \"django.views.static.serve()\" view could redirect to any other domain, aka an open redirect vulnerability. This issue affects Django versions 1.1.3 through 1.8.17, 1.9a1 through 1.9.12, 1.10a1 through 1.10.6, and 1.11a1 through 1.11rc1.\n\nhttps://www.djangoproject.com/weblog/2017/apr/04/security-releases/\nhttps://github.com/django/django/commit/a1f948b468b6621083a03b0d53432341b7a4d753\nhttps://github.com/advisories/GHSA-h4hv-m4h4-mhwg",
                "markdown": "# CVE-2017-7234\n## Description\nA maliciously crafted URL to a Django site using the \"django.views.static.serve()\" view could redirect to any other domain, aka an open redirect vulnerability. This issue affects Django versions 1.1.3 through 1.8.17, 1.9a1 through 1.9.12, 1.10a1 through 1.10.6, and 1.11a1 through 1.11rc1.\n## References\n* [https://www.djangoproject.com/weblog/2017/apr/04/security-releases/](https://www.djangoproject.com/weblog/2017/apr/04/security-releases/)\n* [https://github.com/django/django/commit/a1f948b468b6621083a03b0d53432341b7a4d753](https://github.com/django/django/commit/a1f948b468b6621083a03b0d53432341b7a4d753)\n* [https://github.com/advisories/GHSA-h4hv-m4h4-mhwg](https://github.com/advisories/GHSA-h4hv-m4h4-mhwg)",
                "properties": {
                  "references": [
                    "https://www.djangoproject.com/weblog/2017/apr/04/security-releases/",
                    "https://github.com/django/django/commit/a1f948b468b6621083a03b0d53432341b7a4d753",
                    "https://github.com/advisories/GHSA-h4hv-m4h4-mhwg"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2017-7234",
              "shortDescription": {
                "text": "CVE-2017-7234"
              }
            },
            {
              "id": "CVE-2018-14574",
              "help": {
                "text": "CVE-2018-14574\n\"django.middleware.common.CommonMiddleware\"  in Django has an Open Redirect vulnerability. Branches prior to 1.11.x are unsupported and might be vulnerable as well. This issue affects Django versions through 1.11.14, 2.0a1 through 2.0.7, and  2.1a1 through 2.1rc1.\n\nhttps://github.com/django/django/commit/a656a681272f8f3734b6eb38e9a88aa0d91806f1\nhttps://github.com/advisories/GHSA-5hg3-6c2f-f3wr\nhttps://www.djangoproject.com/weblog/2018/aug/01/security-releases/",
                "markdown": "# CVE-2018-14574\n## Description\n\"django.middleware.common.CommonMiddleware\"  in Django has an Open Redirect vulnerability. Branches prior to 1.11.x are unsupported and might be vulnerable as well. This issue affects Django versions through 1.11.14, 2.0a1 through 2.0.7, and  2.1a1 through 2.1rc1.\n## References\n* [https://github.com/django/django/commit/a656a681272f8f3734b6eb38e9a88aa0d91806f1](https://github.com/django/django/commit/a656a681272f8f3734b6eb38e9a88aa0d91806f1)\n* [https://github.com/advisories/GHSA-5hg3-6c2f-f3wr](https://github.com/advisories/GHSA-5hg3-6c2f-f3wr)\n* [https://www.djangoproject.com/weblog/2018/aug/01/security-releases/](https://www.djangoproject.com/weblog/2018/aug/01/security-releases/)",
                "properties": {
                  "references": [
                    "https://github.com/django/django/commit/a656a681272f8f3734b6eb38e9a88aa0d91806f1",
                    "https://github.com/advisories/GHSA-5hg3-6c2f-f3wr",
                    "https://www.djangoproject.com/weblog/2018/aug/01/security-releases/"
                  ]
                }
              },
              "name": "AdvisoryCve201814574",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "MEDIUM",
                  "Confidentiality": "PARTIAL",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "8.6",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "Medium",
                  "BaseScore": "5.8"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "REQUIRED",
                  "Scope": "CHANGED",
                  "Integrity": "LOW",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "LOW",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium",
                  "BaseScore": "6.1"
                },
                "cvss4": null,
                "cvePublishDate": "2018-08-03T17:29:00Z",
                "cwe": "CWE-601",
                "epssValue": "0.162",
                "epssPercentile": "0.94545",
                "security-severity": "6.1"
              },
              "fullDescription": {
                "text": "CVE-2018-14574\n\"django.middleware.common.CommonMiddleware\"  in Django has an Open Redirect vulnerability. Branches prior to 1.11.x are unsupported and might be vulnerable as well. This issue affects Django versions through 1.11.14, 2.0a1 through 2.0.7, and  2.1a1 through 2.1rc1.\n\nhttps://github.com/django/django/commit/a656a681272f8f3734b6eb38e9a88aa0d91806f1\nhttps://github.com/advisories/GHSA-5hg3-6c2f-f3wr\nhttps://www.djangoproject.com/weblog/2018/aug/01/security-releases/",
                "markdown": "# CVE-2018-14574\n## Description\n\"django.middleware.common.CommonMiddleware\"  in Django has an Open Redirect vulnerability. Branches prior to 1.11.x are unsupported and might be vulnerable as well. This issue affects Django versions through 1.11.14, 2.0a1 through 2.0.7, and  2.1a1 through 2.1rc1.\n## References\n* [https://github.com/django/django/commit/a656a681272f8f3734b6eb38e9a88aa0d91806f1](https://github.com/django/django/commit/a656a681272f8f3734b6eb38e9a88aa0d91806f1)\n* [https://github.com/advisories/GHSA-5hg3-6c2f-f3wr](https://github.com/advisories/GHSA-5hg3-6c2f-f3wr)\n* [https://www.djangoproject.com/weblog/2018/aug/01/security-releases/](https://www.djangoproject.com/weblog/2018/aug/01/security-releases/)",
                "properties": {
                  "references": [
                    "https://github.com/django/django/commit/a656a681272f8f3734b6eb38e9a88aa0d91806f1",
                    "https://github.com/advisories/GHSA-5hg3-6c2f-f3wr",
                    "https://www.djangoproject.com/weblog/2018/aug/01/security-releases/"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2018-14574",
              "shortDescription": {
                "text": "CVE-2018-14574"
              }
            },
            {
              "id": "CVE-2019-12308",
              "help": {
                "text": "CVE-2019-12308\nAn issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-7rp2-fm2h-wchj\nhttps://www.djangoproject.com/weblog/2019/jun/03/security-releases/\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://lists.debian.org/debian-lts-announce/2019/06/msg00001.html\nhttps://github.com/django/django/commit/deeba6d92006999fee9adfbd8be79bf0a59e8008\nhttps://github.com/django/django/commit/afddabf8428ddc89a332f7a78d0d21eaf2b5a673\nhttps://github.com/django/django/commit/09186a13d975de6d049f8b3e05484f66b01ece62\nhttps://github.com/django/django/commit/c238701859a52d584f349cce15d56c8e8137c52b",
                "markdown": "# CVE-2019-12308\n## Description\nAn issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-7rp2-fm2h-wchj](https://github.com/advisories/GHSA-7rp2-fm2h-wchj)\n* [https://www.djangoproject.com/weblog/2019/jun/03/security-releases/](https://www.djangoproject.com/weblog/2019/jun/03/security-releases/)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://lists.debian.org/debian-lts-announce/2019/06/msg00001.html](https://lists.debian.org/debian-lts-announce/2019/06/msg00001.html)\n* [https://github.com/django/django/commit/deeba6d92006999fee9adfbd8be79bf0a59e8008](https://github.com/django/django/commit/deeba6d92006999fee9adfbd8be79bf0a59e8008)\n* [https://github.com/django/django/commit/afddabf8428ddc89a332f7a78d0d21eaf2b5a673](https://github.com/django/django/commit/afddabf8428ddc89a332f7a78d0d21eaf2b5a673)\n* [https://github.com/django/django/commit/09186a13d975de6d049f8b3e05484f66b01ece62](https://github.com/django/django/commit/09186a13d975de6d049f8b3e05484f66b01ece62)\n* [https://github.com/django/django/commit/c238701859a52d584f349cce15d56c8e8137c52b](https://github.com/django/django/commit/c238701859a52d584f349cce15d56c8e8137c52b)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-7rp2-fm2h-wchj",
                    "https://www.djangoproject.com/weblog/2019/jun/03/security-releases/",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://lists.debian.org/debian-lts-announce/2019/06/msg00001.html",
                    "https://github.com/django/django/commit/deeba6d92006999fee9adfbd8be79bf0a59e8008",
                    "https://github.com/django/django/commit/afddabf8428ddc89a332f7a78d0d21eaf2b5a673",
                    "https://github.com/django/django/commit/09186a13d975de6d049f8b3e05484f66b01ece62",
                    "https://github.com/django/django/commit/c238701859a52d584f349cce15d56c8e8137c52b"
                  ]
                }
              },
              "name": "AdvisoryCve201912308",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "MEDIUM",
                  "Confidentiality": "NONE",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "8.6",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "Medium",
                  "BaseScore": "4.3"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "REQUIRED",
                  "Scope": "CHANGED",
                  "Integrity": "LOW",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "LOW",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium",
                  "BaseScore": "6.1"
                },
                "cvss4": null,
                "cvePublishDate": "2019-06-03T17:29:00Z",
                "cwe": "CWE-79",
                "epssValue": "0.0127",
                "epssPercentile": "0.77646",
                "security-severity": "6.1"
              },
              "fullDescription": {
                "text": "CVE-2019-12308\nAn issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-7rp2-fm2h-wchj\nhttps://www.djangoproject.com/weblog/2019/jun/03/security-releases/\nhttps://docs.djangoproject.com/en/dev/releases/security/\nhttps://lists.debian.org/debian-lts-announce/2019/06/msg00001.html\nhttps://github.com/django/django/commit/deeba6d92006999fee9adfbd8be79bf0a59e8008\nhttps://github.com/django/django/commit/afddabf8428ddc89a332f7a78d0d21eaf2b5a673\nhttps://github.com/django/django/commit/09186a13d975de6d049f8b3e05484f66b01ece62\nhttps://github.com/django/django/commit/c238701859a52d584f349cce15d56c8e8137c52b",
                "markdown": "# CVE-2019-12308\n## Description\nAn issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-7rp2-fm2h-wchj](https://github.com/advisories/GHSA-7rp2-fm2h-wchj)\n* [https://www.djangoproject.com/weblog/2019/jun/03/security-releases/](https://www.djangoproject.com/weblog/2019/jun/03/security-releases/)\n* [https://docs.djangoproject.com/en/dev/releases/security/](https://docs.djangoproject.com/en/dev/releases/security/)\n* [https://lists.debian.org/debian-lts-announce/2019/06/msg00001.html](https://lists.debian.org/debian-lts-announce/2019/06/msg00001.html)\n* [https://github.com/django/django/commit/deeba6d92006999fee9adfbd8be79bf0a59e8008](https://github.com/django/django/commit/deeba6d92006999fee9adfbd8be79bf0a59e8008)\n* [https://github.com/django/django/commit/afddabf8428ddc89a332f7a78d0d21eaf2b5a673](https://github.com/django/django/commit/afddabf8428ddc89a332f7a78d0d21eaf2b5a673)\n* [https://github.com/django/django/commit/09186a13d975de6d049f8b3e05484f66b01ece62](https://github.com/django/django/commit/09186a13d975de6d049f8b3e05484f66b01ece62)\n* [https://github.com/django/django/commit/c238701859a52d584f349cce15d56c8e8137c52b](https://github.com/django/django/commit/c238701859a52d584f349cce15d56c8e8137c52b)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-7rp2-fm2h-wchj",
                    "https://www.djangoproject.com/weblog/2019/jun/03/security-releases/",
                    "https://docs.djangoproject.com/en/dev/releases/security/",
                    "https://lists.debian.org/debian-lts-announce/2019/06/msg00001.html",
                    "https://github.com/django/django/commit/deeba6d92006999fee9adfbd8be79bf0a59e8008",
                    "https://github.com/django/django/commit/afddabf8428ddc89a332f7a78d0d21eaf2b5a673",
                    "https://github.com/django/django/commit/09186a13d975de6d049f8b3e05484f66b01ece62",
                    "https://github.com/django/django/commit/c238701859a52d584f349cce15d56c8e8137c52b"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2019-12308",
              "shortDescription": {
                "text": "CVE-2019-12308"
              }
            },
            {
              "id": "CVE-2020-13596",
              "help": {
                "text": "CVE-2020-13596\nAn issue was discovered in Django before 2.2.13, 3.x before 3.0.7 and 3.1a1. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.\n\nhttps://github.com/advisories/GHSA-2m34-jcjv-45xf\nhttps://www.djangoproject.com/weblog/2020/jun/03/security-releases/\nhttps://www.debian.org/security/2020/dsa-4705\nhttps://github.com/django/django/commit/6d61860b22875f358fac83d903dc629897934815\nhttps://github.com/django/django/commit/1f2dd37f6fcefdd10ed44cb233b2e62b520afb38",
                "markdown": "# CVE-2020-13596\n## Description\nAn issue was discovered in Django before 2.2.13, 3.x before 3.0.7 and 3.1a1. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.\n## References\n* [https://github.com/advisories/GHSA-2m34-jcjv-45xf](https://github.com/advisories/GHSA-2m34-jcjv-45xf)\n* [https://www.djangoproject.com/weblog/2020/jun/03/security-releases/](https://www.djangoproject.com/weblog/2020/jun/03/security-releases/)\n* [https://www.debian.org/security/2020/dsa-4705](https://www.debian.org/security/2020/dsa-4705)\n* [https://github.com/django/django/commit/6d61860b22875f358fac83d903dc629897934815](https://github.com/django/django/commit/6d61860b22875f358fac83d903dc629897934815)\n* [https://github.com/django/django/commit/1f2dd37f6fcefdd10ed44cb233b2e62b520afb38](https://github.com/django/django/commit/1f2dd37f6fcefdd10ed44cb233b2e62b520afb38)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-2m34-jcjv-45xf",
                    "https://www.djangoproject.com/weblog/2020/jun/03/security-releases/",
                    "https://www.debian.org/security/2020/dsa-4705",
                    "https://github.com/django/django/commit/6d61860b22875f358fac83d903dc629897934815",
                    "https://github.com/django/django/commit/1f2dd37f6fcefdd10ed44cb233b2e62b520afb38"
                  ]
                }
              },
              "name": "AdvisoryCve202013596",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "MEDIUM",
                  "Confidentiality": "NONE",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "8.6",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "Medium",
                  "BaseScore": "4.3"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "REQUIRED",
                  "Scope": "CHANGED",
                  "Integrity": "LOW",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "LOW",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium",
                  "BaseScore": "6.1"
                },
                "cvss4": null,
                "cvePublishDate": "2020-06-03T14:15:00Z",
                "cwe": "CWE-79",
                "epssValue": "0.0108",
                "epssPercentile": "0.75856",
                "security-severity": "6.1"
              },
              "fullDescription": {
                "text": "CVE-2020-13596\nAn issue was discovered in Django before 2.2.13, 3.x before 3.0.7 and 3.1a1. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.\n\nhttps://github.com/advisories/GHSA-2m34-jcjv-45xf\nhttps://www.djangoproject.com/weblog/2020/jun/03/security-releases/\nhttps://www.debian.org/security/2020/dsa-4705\nhttps://github.com/django/django/commit/6d61860b22875f358fac83d903dc629897934815\nhttps://github.com/django/django/commit/1f2dd37f6fcefdd10ed44cb233b2e62b520afb38",
                "markdown": "# CVE-2020-13596\n## Description\nAn issue was discovered in Django before 2.2.13, 3.x before 3.0.7 and 3.1a1. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.\n## References\n* [https://github.com/advisories/GHSA-2m34-jcjv-45xf](https://github.com/advisories/GHSA-2m34-jcjv-45xf)\n* [https://www.djangoproject.com/weblog/2020/jun/03/security-releases/](https://www.djangoproject.com/weblog/2020/jun/03/security-releases/)\n* [https://www.debian.org/security/2020/dsa-4705](https://www.debian.org/security/2020/dsa-4705)\n* [https://github.com/django/django/commit/6d61860b22875f358fac83d903dc629897934815](https://github.com/django/django/commit/6d61860b22875f358fac83d903dc629897934815)\n* [https://github.com/django/django/commit/1f2dd37f6fcefdd10ed44cb233b2e62b520afb38](https://github.com/django/django/commit/1f2dd37f6fcefdd10ed44cb233b2e62b520afb38)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-2m34-jcjv-45xf",
                    "https://www.djangoproject.com/weblog/2020/jun/03/security-releases/",
                    "https://www.debian.org/security/2020/dsa-4705",
                    "https://github.com/django/django/commit/6d61860b22875f358fac83d903dc629897934815",
                    "https://github.com/django/django/commit/1f2dd37f6fcefdd10ed44cb233b2e62b520afb38"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2020-13596",
              "shortDescription": {
                "text": "CVE-2020-13596"
              }
            },
            {
              "id": "CVE-2021-32052",
              "help": {
                "text": "CVE-2021-32052\nIn Django before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.\n\nhttps://github.com/advisories/GHSA-qm57-vhq3-3fwf\nhttps://github.com/django/django/commit/e1e81aa1c4427411e3c68facdd761229ffea6f6f\nhttps://docs.djangoproject.com/en/3.2/releases/security/\nhttps://www.djangoproject.com/weblog/2021/may/06/security-releases/\nhttps://bugs.python.org/issue43882\nhttps://github.com/django/django/pull/14349",
                "markdown": "# CVE-2021-32052\n## Description\nIn Django before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.\n## References\n* [https://github.com/advisories/GHSA-qm57-vhq3-3fwf](https://github.com/advisories/GHSA-qm57-vhq3-3fwf)\n* [https://github.com/django/django/commit/e1e81aa1c4427411e3c68facdd761229ffea6f6f](https://github.com/django/django/commit/e1e81aa1c4427411e3c68facdd761229ffea6f6f)\n* [https://docs.djangoproject.com/en/3.2/releases/security/](https://docs.djangoproject.com/en/3.2/releases/security/)\n* [https://www.djangoproject.com/weblog/2021/may/06/security-releases/](https://www.djangoproject.com/weblog/2021/may/06/security-releases/)\n* [https://bugs.python.org/issue43882](https://bugs.python.org/issue43882)\n* [https://github.com/django/django/pull/14349](https://github.com/django/django/pull/14349)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-qm57-vhq3-3fwf",
                    "https://github.com/django/django/commit/e1e81aa1c4427411e3c68facdd761229ffea6f6f",
                    "https://docs.djangoproject.com/en/3.2/releases/security/",
                    "https://www.djangoproject.com/weblog/2021/may/06/security-releases/",
                    "https://bugs.python.org/issue43882",
                    "https://github.com/django/django/pull/14349"
                  ]
                }
              },
              "name": "AdvisoryCve202132052",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "MEDIUM",
                  "Confidentiality": "NONE",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "8.6",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "PARTIAL",
                  "Severity": "Medium",
                  "BaseScore": "4.3"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "REQUIRED",
                  "Scope": "CHANGED",
                  "Integrity": "LOW",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "LOW",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium",
                  "BaseScore": "6.1"
                },
                "cvss4": null,
                "cvePublishDate": "2021-05-06T16:15:00Z",
                "cwe": "CWE-79",
                "epssValue": "0.00805",
                "epssPercentile": "0.72954",
                "security-severity": "6.1"
              },
              "fullDescription": {
                "text": "CVE-2021-32052\nIn Django before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.\n\nhttps://github.com/advisories/GHSA-qm57-vhq3-3fwf\nhttps://github.com/django/django/commit/e1e81aa1c4427411e3c68facdd761229ffea6f6f\nhttps://docs.djangoproject.com/en/3.2/releases/security/\nhttps://www.djangoproject.com/weblog/2021/may/06/security-releases/\nhttps://bugs.python.org/issue43882\nhttps://github.com/django/django/pull/14349",
                "markdown": "# CVE-2021-32052\n## Description\nIn Django before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.\n## References\n* [https://github.com/advisories/GHSA-qm57-vhq3-3fwf](https://github.com/advisories/GHSA-qm57-vhq3-3fwf)\n* [https://github.com/django/django/commit/e1e81aa1c4427411e3c68facdd761229ffea6f6f](https://github.com/django/django/commit/e1e81aa1c4427411e3c68facdd761229ffea6f6f)\n* [https://docs.djangoproject.com/en/3.2/releases/security/](https://docs.djangoproject.com/en/3.2/releases/security/)\n* [https://www.djangoproject.com/weblog/2021/may/06/security-releases/](https://www.djangoproject.com/weblog/2021/may/06/security-releases/)\n* [https://bugs.python.org/issue43882](https://bugs.python.org/issue43882)\n* [https://github.com/django/django/pull/14349](https://github.com/django/django/pull/14349)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-qm57-vhq3-3fwf",
                    "https://github.com/django/django/commit/e1e81aa1c4427411e3c68facdd761229ffea6f6f",
                    "https://docs.djangoproject.com/en/3.2/releases/security/",
                    "https://www.djangoproject.com/weblog/2021/may/06/security-releases/",
                    "https://bugs.python.org/issue43882",
                    "https://github.com/django/django/pull/14349"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2021-32052",
              "shortDescription": {
                "text": "CVE-2021-32052"
              }
            },
            {
              "id": "CVE-2020-13254",
              "help": {
                "text": "CVE-2020-13254\nAn issue was discovered in Django before 2.2.13, 3.x before 3.0.7 and 3.1a1. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.\n\nhttps://github.com/advisories/GHSA-wpjr-j57x-wxfw\nhttps://www.djangoproject.com/weblog/2020/jun/03/security-releases/\nhttps://lists.debian.org/debian-lts-announce/2020/06/msg00016.html\nhttps://github.com/django/django/commit/84b2da5552e100ae3294f564f6c862fef8d0e693\nhttps://github.com/django/django/commit/07e59caa02831c4569bbebb9eb773bdd9cb4b206",
                "markdown": "# CVE-2020-13254\n## Description\nAn issue was discovered in Django before 2.2.13, 3.x before 3.0.7 and 3.1a1. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.\n## References\n* [https://github.com/advisories/GHSA-wpjr-j57x-wxfw](https://github.com/advisories/GHSA-wpjr-j57x-wxfw)\n* [https://www.djangoproject.com/weblog/2020/jun/03/security-releases/](https://www.djangoproject.com/weblog/2020/jun/03/security-releases/)\n* [https://lists.debian.org/debian-lts-announce/2020/06/msg00016.html](https://lists.debian.org/debian-lts-announce/2020/06/msg00016.html)\n* [https://github.com/django/django/commit/84b2da5552e100ae3294f564f6c862fef8d0e693](https://github.com/django/django/commit/84b2da5552e100ae3294f564f6c862fef8d0e693)\n* [https://github.com/django/django/commit/07e59caa02831c4569bbebb9eb773bdd9cb4b206](https://github.com/django/django/commit/07e59caa02831c4569bbebb9eb773bdd9cb4b206)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-wpjr-j57x-wxfw",
                    "https://www.djangoproject.com/weblog/2020/jun/03/security-releases/",
                    "https://lists.debian.org/debian-lts-announce/2020/06/msg00016.html",
                    "https://github.com/django/django/commit/84b2da5552e100ae3294f564f6c862fef8d0e693",
                    "https://github.com/django/django/commit/07e59caa02831c4569bbebb9eb773bdd9cb4b206"
                  ]
                }
              },
              "name": "AdvisoryCve202013254",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "MEDIUM",
                  "Confidentiality": "PARTIAL",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "8.6",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "NONE",
                  "Severity": "Medium",
                  "BaseScore": "4.3"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "HIGH",
                  "Confidentiality": "HIGH",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium",
                  "BaseScore": "5.9"
                },
                "cvss4": null,
                "cvePublishDate": "2020-06-03T14:15:00Z",
                "cwe": "CWE-295",
                "epssValue": "0.08918",
                "epssPercentile": "0.91772",
                "security-severity": "5.9"
              },
              "fullDescription": {
                "text": "CVE-2020-13254\nAn issue was discovered in Django before 2.2.13, 3.x before 3.0.7 and 3.1a1. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.\n\nhttps://github.com/advisories/GHSA-wpjr-j57x-wxfw\nhttps://www.djangoproject.com/weblog/2020/jun/03/security-releases/\nhttps://lists.debian.org/debian-lts-announce/2020/06/msg00016.html\nhttps://github.com/django/django/commit/84b2da5552e100ae3294f564f6c862fef8d0e693\nhttps://github.com/django/django/commit/07e59caa02831c4569bbebb9eb773bdd9cb4b206",
                "markdown": "# CVE-2020-13254\n## Description\nAn issue was discovered in Django before 2.2.13, 3.x before 3.0.7 and 3.1a1. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.\n## References\n* [https://github.com/advisories/GHSA-wpjr-j57x-wxfw](https://github.com/advisories/GHSA-wpjr-j57x-wxfw)\n* [https://www.djangoproject.com/weblog/2020/jun/03/security-releases/](https://www.djangoproject.com/weblog/2020/jun/03/security-releases/)\n* [https://lists.debian.org/debian-lts-announce/2020/06/msg00016.html](https://lists.debian.org/debian-lts-announce/2020/06/msg00016.html)\n* [https://github.com/django/django/commit/84b2da5552e100ae3294f564f6c862fef8d0e693](https://github.com/django/django/commit/84b2da5552e100ae3294f564f6c862fef8d0e693)\n* [https://github.com/django/django/commit/07e59caa02831c4569bbebb9eb773bdd9cb4b206](https://github.com/django/django/commit/07e59caa02831c4569bbebb9eb773bdd9cb4b206)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-wpjr-j57x-wxfw",
                    "https://www.djangoproject.com/weblog/2020/jun/03/security-releases/",
                    "https://lists.debian.org/debian-lts-announce/2020/06/msg00016.html",
                    "https://github.com/django/django/commit/84b2da5552e100ae3294f564f6c862fef8d0e693",
                    "https://github.com/django/django/commit/07e59caa02831c4569bbebb9eb773bdd9cb4b206"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2020-13254",
              "shortDescription": {
                "text": "CVE-2020-13254"
              }
            },
            {
              "id": "CVE-2018-7536",
              "help": {
                "text": "CVE-2018-7536\nAn issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable. The older branches are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-r28v-mw67-m5p9\nhttps://www.djangoproject.com/weblog/2018/mar/06/security-releases/\nhttps://github.com/django/django/commit/8618271caa0b09daba39ff3b46567d33ae1e1d3a\nhttps://github.com/django/django/commit/e157315da3ae7005fa0683ffc9751dbeca7306c8\nhttps://github.com/django/django/commit/abf89d729f210c692a50e0ad3f75fb6bec6fae16\nhttps://github.com/django/django/commit/1ca63a66ef3163149ad822701273e8a1844192c2",
                "markdown": "# CVE-2018-7536\n## Description\nAn issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable. The older branches are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-r28v-mw67-m5p9](https://github.com/advisories/GHSA-r28v-mw67-m5p9)\n* [https://www.djangoproject.com/weblog/2018/mar/06/security-releases/](https://www.djangoproject.com/weblog/2018/mar/06/security-releases/)\n* [https://github.com/django/django/commit/8618271caa0b09daba39ff3b46567d33ae1e1d3a](https://github.com/django/django/commit/8618271caa0b09daba39ff3b46567d33ae1e1d3a)\n* [https://github.com/django/django/commit/e157315da3ae7005fa0683ffc9751dbeca7306c8](https://github.com/django/django/commit/e157315da3ae7005fa0683ffc9751dbeca7306c8)\n* [https://github.com/django/django/commit/abf89d729f210c692a50e0ad3f75fb6bec6fae16](https://github.com/django/django/commit/abf89d729f210c692a50e0ad3f75fb6bec6fae16)\n* [https://github.com/django/django/commit/1ca63a66ef3163149ad822701273e8a1844192c2](https://github.com/django/django/commit/1ca63a66ef3163149ad822701273e8a1844192c2)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-r28v-mw67-m5p9",
                    "https://www.djangoproject.com/weblog/2018/mar/06/security-releases/",
                    "https://github.com/django/django/commit/8618271caa0b09daba39ff3b46567d33ae1e1d3a",
                    "https://github.com/django/django/commit/e157315da3ae7005fa0683ffc9751dbeca7306c8",
                    "https://github.com/django/django/commit/abf89d729f210c692a50e0ad3f75fb6bec6fae16",
                    "https://github.com/django/django/commit/1ca63a66ef3163149ad822701273e8a1844192c2"
                  ]
                }
              },
              "name": "AdvisoryCve20187536",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "PARTIAL",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "NONE",
                  "Severity": "Medium",
                  "BaseScore": "5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "LOW",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium",
                  "BaseScore": "5.3"
                },
                "cvss4": null,
                "cvePublishDate": "2018-03-09T20:29:00Z",
                "cwe": "CWE-185",
                "epssValue": "0.01198",
                "epssPercentile": "0.77887",
                "security-severity": "5.3"
              },
              "fullDescription": {
                "text": "CVE-2018-7536\nAn issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable. The older branches are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-r28v-mw67-m5p9\nhttps://www.djangoproject.com/weblog/2018/mar/06/security-releases/\nhttps://github.com/django/django/commit/8618271caa0b09daba39ff3b46567d33ae1e1d3a\nhttps://github.com/django/django/commit/e157315da3ae7005fa0683ffc9751dbeca7306c8\nhttps://github.com/django/django/commit/abf89d729f210c692a50e0ad3f75fb6bec6fae16\nhttps://github.com/django/django/commit/1ca63a66ef3163149ad822701273e8a1844192c2",
                "markdown": "# CVE-2018-7536\n## Description\nAn issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable. The older branches are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-r28v-mw67-m5p9](https://github.com/advisories/GHSA-r28v-mw67-m5p9)\n* [https://www.djangoproject.com/weblog/2018/mar/06/security-releases/](https://www.djangoproject.com/weblog/2018/mar/06/security-releases/)\n* [https://github.com/django/django/commit/8618271caa0b09daba39ff3b46567d33ae1e1d3a](https://github.com/django/django/commit/8618271caa0b09daba39ff3b46567d33ae1e1d3a)\n* [https://github.com/django/django/commit/e157315da3ae7005fa0683ffc9751dbeca7306c8](https://github.com/django/django/commit/e157315da3ae7005fa0683ffc9751dbeca7306c8)\n* [https://github.com/django/django/commit/abf89d729f210c692a50e0ad3f75fb6bec6fae16](https://github.com/django/django/commit/abf89d729f210c692a50e0ad3f75fb6bec6fae16)\n* [https://github.com/django/django/commit/1ca63a66ef3163149ad822701273e8a1844192c2](https://github.com/django/django/commit/1ca63a66ef3163149ad822701273e8a1844192c2)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-r28v-mw67-m5p9",
                    "https://www.djangoproject.com/weblog/2018/mar/06/security-releases/",
                    "https://github.com/django/django/commit/8618271caa0b09daba39ff3b46567d33ae1e1d3a",
                    "https://github.com/django/django/commit/e157315da3ae7005fa0683ffc9751dbeca7306c8",
                    "https://github.com/django/django/commit/abf89d729f210c692a50e0ad3f75fb6bec6fae16",
                    "https://github.com/django/django/commit/1ca63a66ef3163149ad822701273e8a1844192c2"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2018-7536",
              "shortDescription": {
                "text": "CVE-2018-7536"
              }
            },
            {
              "id": "CVE-2018-7537",
              "help": {
                "text": "CVE-2018-7537\nAn issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable. The older branches are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-2f9x-5v75-3qv4\nhttps://lists.debian.org/debian-lts-announce/2018/03/msg00006.html\nhttps://www.djangoproject.com/weblog/2018/mar/06/security-releases/\nhttps://github.com/django/django/commit/97b7dd59bb8d6163239061e2022153c3415d146d\nhttps://github.com/django/django/commit/94c5da1d17a6b0d378866c66b605102c19f7988c\nhttps://github.com/django/django/commit/a91436360b79a6ff995c3e5018bcc666dfaf1539\nhttps://github.com/django/django/commit/d17974a287a6ea2e361daff88fcc004cbd6835fa",
                "markdown": "# CVE-2018-7537\n## Description\nAn issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable. The older branches are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-2f9x-5v75-3qv4](https://github.com/advisories/GHSA-2f9x-5v75-3qv4)\n* [https://lists.debian.org/debian-lts-announce/2018/03/msg00006.html](https://lists.debian.org/debian-lts-announce/2018/03/msg00006.html)\n* [https://www.djangoproject.com/weblog/2018/mar/06/security-releases/](https://www.djangoproject.com/weblog/2018/mar/06/security-releases/)\n* [https://github.com/django/django/commit/97b7dd59bb8d6163239061e2022153c3415d146d](https://github.com/django/django/commit/97b7dd59bb8d6163239061e2022153c3415d146d)\n* [https://github.com/django/django/commit/94c5da1d17a6b0d378866c66b605102c19f7988c](https://github.com/django/django/commit/94c5da1d17a6b0d378866c66b605102c19f7988c)\n* [https://github.com/django/django/commit/a91436360b79a6ff995c3e5018bcc666dfaf1539](https://github.com/django/django/commit/a91436360b79a6ff995c3e5018bcc666dfaf1539)\n* [https://github.com/django/django/commit/d17974a287a6ea2e361daff88fcc004cbd6835fa](https://github.com/django/django/commit/d17974a287a6ea2e361daff88fcc004cbd6835fa)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-2f9x-5v75-3qv4",
                    "https://lists.debian.org/debian-lts-announce/2018/03/msg00006.html",
                    "https://www.djangoproject.com/weblog/2018/mar/06/security-releases/",
                    "https://github.com/django/django/commit/97b7dd59bb8d6163239061e2022153c3415d146d",
                    "https://github.com/django/django/commit/94c5da1d17a6b0d378866c66b605102c19f7988c",
                    "https://github.com/django/django/commit/a91436360b79a6ff995c3e5018bcc666dfaf1539",
                    "https://github.com/django/django/commit/d17974a287a6ea2e361daff88fcc004cbd6835fa"
                  ]
                }
              },
              "name": "AdvisoryCve20187537",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "PARTIAL",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "NONE",
                  "Severity": "Medium",
                  "BaseScore": "5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "NONE",
                  "Availability": "LOW",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium",
                  "BaseScore": "5.3"
                },
                "cvss4": null,
                "cvePublishDate": "2018-03-09T20:29:00Z",
                "cwe": "CWE-185",
                "epssValue": "0.00586",
                "epssPercentile": "0.68227",
                "security-severity": "5.3"
              },
              "fullDescription": {
                "text": "CVE-2018-7537\nAn issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable. The older branches are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-2f9x-5v75-3qv4\nhttps://lists.debian.org/debian-lts-announce/2018/03/msg00006.html\nhttps://www.djangoproject.com/weblog/2018/mar/06/security-releases/\nhttps://github.com/django/django/commit/97b7dd59bb8d6163239061e2022153c3415d146d\nhttps://github.com/django/django/commit/94c5da1d17a6b0d378866c66b605102c19f7988c\nhttps://github.com/django/django/commit/a91436360b79a6ff995c3e5018bcc666dfaf1539\nhttps://github.com/django/django/commit/d17974a287a6ea2e361daff88fcc004cbd6835fa",
                "markdown": "# CVE-2018-7537\n## Description\nAn issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable. The older branches are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-2f9x-5v75-3qv4](https://github.com/advisories/GHSA-2f9x-5v75-3qv4)\n* [https://lists.debian.org/debian-lts-announce/2018/03/msg00006.html](https://lists.debian.org/debian-lts-announce/2018/03/msg00006.html)\n* [https://www.djangoproject.com/weblog/2018/mar/06/security-releases/](https://www.djangoproject.com/weblog/2018/mar/06/security-releases/)\n* [https://github.com/django/django/commit/97b7dd59bb8d6163239061e2022153c3415d146d](https://github.com/django/django/commit/97b7dd59bb8d6163239061e2022153c3415d146d)\n* [https://github.com/django/django/commit/94c5da1d17a6b0d378866c66b605102c19f7988c](https://github.com/django/django/commit/94c5da1d17a6b0d378866c66b605102c19f7988c)\n* [https://github.com/django/django/commit/a91436360b79a6ff995c3e5018bcc666dfaf1539](https://github.com/django/django/commit/a91436360b79a6ff995c3e5018bcc666dfaf1539)\n* [https://github.com/django/django/commit/d17974a287a6ea2e361daff88fcc004cbd6835fa](https://github.com/django/django/commit/d17974a287a6ea2e361daff88fcc004cbd6835fa)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-2f9x-5v75-3qv4",
                    "https://lists.debian.org/debian-lts-announce/2018/03/msg00006.html",
                    "https://www.djangoproject.com/weblog/2018/mar/06/security-releases/",
                    "https://github.com/django/django/commit/97b7dd59bb8d6163239061e2022153c3415d146d",
                    "https://github.com/django/django/commit/94c5da1d17a6b0d378866c66b605102c19f7988c",
                    "https://github.com/django/django/commit/a91436360b79a6ff995c3e5018bcc666dfaf1539",
                    "https://github.com/django/django/commit/d17974a287a6ea2e361daff88fcc004cbd6835fa"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2018-7537",
              "shortDescription": {
                "text": "CVE-2018-7537"
              }
            },
            {
              "id": "CVE-2019-12781",
              "help": {
                "text": "CVE-2019-12781\nAn issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-6c7v-2f49-8h26\nhttps://www.djangoproject.com/weblog/2019/jul/01/security-releases/\nhttps://github.com/django/django/commit/54d0f5e62f54c29a12dd96f44bacd810cbe03ac8\nhttps://github.com/django/django/commit/77706a3e4766da5d5fb75c4db22a0a59a28e6cd6\nhttps://github.com/django/django/commit/1e40f427bb8d0fb37cc9f830096a97c36c97af6f\nhttps://github.com/django/django/commit/32124fc41e75074141b05f10fc55a4f01ff7f050",
                "markdown": "# CVE-2019-12781\n## Description\nAn issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-6c7v-2f49-8h26](https://github.com/advisories/GHSA-6c7v-2f49-8h26)\n* [https://www.djangoproject.com/weblog/2019/jul/01/security-releases/](https://www.djangoproject.com/weblog/2019/jul/01/security-releases/)\n* [https://github.com/django/django/commit/54d0f5e62f54c29a12dd96f44bacd810cbe03ac8](https://github.com/django/django/commit/54d0f5e62f54c29a12dd96f44bacd810cbe03ac8)\n* [https://github.com/django/django/commit/77706a3e4766da5d5fb75c4db22a0a59a28e6cd6](https://github.com/django/django/commit/77706a3e4766da5d5fb75c4db22a0a59a28e6cd6)\n* [https://github.com/django/django/commit/1e40f427bb8d0fb37cc9f830096a97c36c97af6f](https://github.com/django/django/commit/1e40f427bb8d0fb37cc9f830096a97c36c97af6f)\n* [https://github.com/django/django/commit/32124fc41e75074141b05f10fc55a4f01ff7f050](https://github.com/django/django/commit/32124fc41e75074141b05f10fc55a4f01ff7f050)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-6c7v-2f49-8h26",
                    "https://www.djangoproject.com/weblog/2019/jul/01/security-releases/",
                    "https://github.com/django/django/commit/54d0f5e62f54c29a12dd96f44bacd810cbe03ac8",
                    "https://github.com/django/django/commit/77706a3e4766da5d5fb75c4db22a0a59a28e6cd6",
                    "https://github.com/django/django/commit/1e40f427bb8d0fb37cc9f830096a97c36c97af6f",
                    "https://github.com/django/django/commit/32124fc41e75074141b05f10fc55a4f01ff7f050"
                  ]
                }
              },
              "name": "AdvisoryCve201912781",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "PARTIAL",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "NONE",
                  "Severity": "Medium",
                  "BaseScore": "5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "LOW",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium",
                  "BaseScore": "5.3"
                },
                "cvss4": null,
                "cvePublishDate": "2019-07-01T14:15:00Z",
                "cwe": "CWE-319",
                "epssValue": "0.02419",
                "epssPercentile": "0.83681",
                "security-severity": "5.3"
              },
              "fullDescription": {
                "text": "CVE-2019-12781\nAn issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n\nhttps://github.com/advisories/GHSA-6c7v-2f49-8h26\nhttps://www.djangoproject.com/weblog/2019/jul/01/security-releases/\nhttps://github.com/django/django/commit/54d0f5e62f54c29a12dd96f44bacd810cbe03ac8\nhttps://github.com/django/django/commit/77706a3e4766da5d5fb75c4db22a0a59a28e6cd6\nhttps://github.com/django/django/commit/1e40f427bb8d0fb37cc9f830096a97c36c97af6f\nhttps://github.com/django/django/commit/32124fc41e75074141b05f10fc55a4f01ff7f050",
                "markdown": "# CVE-2019-12781\n## Description\nAn issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP. Branch 2.0.x and branches prior to 1.11.x are unsupported and might be vulnerable as well.\n## References\n* [https://github.com/advisories/GHSA-6c7v-2f49-8h26](https://github.com/advisories/GHSA-6c7v-2f49-8h26)\n* [https://www.djangoproject.com/weblog/2019/jul/01/security-releases/](https://www.djangoproject.com/weblog/2019/jul/01/security-releases/)\n* [https://github.com/django/django/commit/54d0f5e62f54c29a12dd96f44bacd810cbe03ac8](https://github.com/django/django/commit/54d0f5e62f54c29a12dd96f44bacd810cbe03ac8)\n* [https://github.com/django/django/commit/77706a3e4766da5d5fb75c4db22a0a59a28e6cd6](https://github.com/django/django/commit/77706a3e4766da5d5fb75c4db22a0a59a28e6cd6)\n* [https://github.com/django/django/commit/1e40f427bb8d0fb37cc9f830096a97c36c97af6f](https://github.com/django/django/commit/1e40f427bb8d0fb37cc9f830096a97c36c97af6f)\n* [https://github.com/django/django/commit/32124fc41e75074141b05f10fc55a4f01ff7f050](https://github.com/django/django/commit/32124fc41e75074141b05f10fc55a4f01ff7f050)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-6c7v-2f49-8h26",
                    "https://www.djangoproject.com/weblog/2019/jul/01/security-releases/",
                    "https://github.com/django/django/commit/54d0f5e62f54c29a12dd96f44bacd810cbe03ac8",
                    "https://github.com/django/django/commit/77706a3e4766da5d5fb75c4db22a0a59a28e6cd6",
                    "https://github.com/django/django/commit/1e40f427bb8d0fb37cc9f830096a97c36c97af6f",
                    "https://github.com/django/django/commit/32124fc41e75074141b05f10fc55a4f01ff7f050"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2019-12781",
              "shortDescription": {
                "text": "CVE-2019-12781"
              }
            },
            {
              "id": "CVE-2021-45452",
              "help": {
                "text": "CVE-2021-45452\nStorage.save in Django before 2.2.26, 3.1.x before 3.2.11, and 4.0.x before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.\n\nhttps://github.com/advisories/GHSA-jrh2-hc4r-7jwx\nhttps://docs.djangoproject.com/en/4.0/releases/security/\nhttps://github.com/django/django/commit/6d343d01c57eb03ca1c6826318b652709e58a76e",
                "markdown": "# CVE-2021-45452\n## Description\nStorage.save in Django before 2.2.26, 3.1.x before 3.2.11, and 4.0.x before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.\n## References\n* [https://github.com/advisories/GHSA-jrh2-hc4r-7jwx](https://github.com/advisories/GHSA-jrh2-hc4r-7jwx)\n* [https://docs.djangoproject.com/en/4.0/releases/security/](https://docs.djangoproject.com/en/4.0/releases/security/)\n* [https://github.com/django/django/commit/6d343d01c57eb03ca1c6826318b652709e58a76e](https://github.com/django/django/commit/6d343d01c57eb03ca1c6826318b652709e58a76e)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-jrh2-hc4r-7jwx",
                    "https://docs.djangoproject.com/en/4.0/releases/security/",
                    "https://github.com/django/django/commit/6d343d01c57eb03ca1c6826318b652709e58a76e"
                  ]
                }
              },
              "name": "AdvisoryCve202145452",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "PARTIAL",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "NONE",
                  "Severity": "Medium",
                  "BaseScore": "5"
                },
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "LOW",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium",
                  "BaseScore": "5.3"
                },
                "cvss4": null,
                "cvePublishDate": "2022-01-05T00:15:00Z",
                "cwe": "CWE-22",
                "epssValue": "0.00238",
                "epssPercentile": "0.46893",
                "security-severity": "5.3"
              },
              "fullDescription": {
                "text": "CVE-2021-45452\nStorage.save in Django before 2.2.26, 3.1.x before 3.2.11, and 4.0.x before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.\n\nhttps://github.com/advisories/GHSA-jrh2-hc4r-7jwx\nhttps://docs.djangoproject.com/en/4.0/releases/security/\nhttps://github.com/django/django/commit/6d343d01c57eb03ca1c6826318b652709e58a76e",
                "markdown": "# CVE-2021-45452\n## Description\nStorage.save in Django before 2.2.26, 3.1.x before 3.2.11, and 4.0.x before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.\n## References\n* [https://github.com/advisories/GHSA-jrh2-hc4r-7jwx](https://github.com/advisories/GHSA-jrh2-hc4r-7jwx)\n* [https://docs.djangoproject.com/en/4.0/releases/security/](https://docs.djangoproject.com/en/4.0/releases/security/)\n* [https://github.com/django/django/commit/6d343d01c57eb03ca1c6826318b652709e58a76e](https://github.com/django/django/commit/6d343d01c57eb03ca1c6826318b652709e58a76e)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-jrh2-hc4r-7jwx",
                    "https://docs.djangoproject.com/en/4.0/releases/security/",
                    "https://github.com/django/django/commit/6d343d01c57eb03ca1c6826318b652709e58a76e"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2021-45452",
              "shortDescription": {
                "text": "CVE-2021-45452"
              }
            },
            {
              "id": "CVE-2024-45231",
              "help": {
                "text": "CVE-2024-45231\nAn issue was discovered in Django prior to 4.2.16, 5.0.x prior to 5.0.9, and 5.1.x prior to 5.1.1. The 'django.contrib.auth.forms.PasswordResetForm' class, when used in a view implementing password reset flows, allows remote attackers to enumerate user e-mail addresses by sending password reset requests and observing the outcome (only when e-mail sending is consistently failing).\n\nhttps://github.com/advisories/GHSA-rrqc-c2jx-6jgv\nhttps://github.com/django/django/commit/3c733c78d6f8e50296d6e248968b6516c92a53ca\nhttps://www.djangoproject.com/weblog/2024/sep/03/security-releases/\nhttps://github.com/django/django/blob/5.1.1/docs/releases/5.1.1.txt#L17",
                "markdown": "# CVE-2024-45231\n## Description\nAn issue was discovered in Django prior to 4.2.16, 5.0.x prior to 5.0.9, and 5.1.x prior to 5.1.1. The 'django.contrib.auth.forms.PasswordResetForm' class, when used in a view implementing password reset flows, allows remote attackers to enumerate user e-mail addresses by sending password reset requests and observing the outcome (only when e-mail sending is consistently failing).\n## References\n* [https://github.com/advisories/GHSA-rrqc-c2jx-6jgv](https://github.com/advisories/GHSA-rrqc-c2jx-6jgv)\n* [https://github.com/django/django/commit/3c733c78d6f8e50296d6e248968b6516c92a53ca](https://github.com/django/django/commit/3c733c78d6f8e50296d6e248968b6516c92a53ca)\n* [https://www.djangoproject.com/weblog/2024/sep/03/security-releases/](https://www.djangoproject.com/weblog/2024/sep/03/security-releases/)\n* [https://github.com/django/django/blob/5.1.1/docs/releases/5.1.1.txt#L17](https://github.com/django/django/blob/5.1.1/docs/releases/5.1.1.txt#L17)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-rrqc-c2jx-6jgv",
                    "https://github.com/django/django/commit/3c733c78d6f8e50296d6e248968b6516c92a53ca",
                    "https://www.djangoproject.com/weblog/2024/sep/03/security-releases/",
                    "https://github.com/django/django/blob/5.1.1/docs/releases/5.1.1.txt#L17"
                  ]
                }
              },
              "name": "AdvisoryCve202445231",
              "properties": {
                "cvss2": null,
                "cvss3": {
                  "PrivilegesRequired": "NONE",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "LOW",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium",
                  "BaseScore": "5.3"
                },
                "cvss4": null,
                "cvePublishDate": "2024-10-08T16:15:00Z",
                "cwe": "CWE-203",
                "epssValue": "0.00053",
                "epssPercentile": "0.1647",
                "security-severity": "5.3"
              },
              "fullDescription": {
                "text": "CVE-2024-45231\nAn issue was discovered in Django prior to 4.2.16, 5.0.x prior to 5.0.9, and 5.1.x prior to 5.1.1. The 'django.contrib.auth.forms.PasswordResetForm' class, when used in a view implementing password reset flows, allows remote attackers to enumerate user e-mail addresses by sending password reset requests and observing the outcome (only when e-mail sending is consistently failing).\n\nhttps://github.com/advisories/GHSA-rrqc-c2jx-6jgv\nhttps://github.com/django/django/commit/3c733c78d6f8e50296d6e248968b6516c92a53ca\nhttps://www.djangoproject.com/weblog/2024/sep/03/security-releases/\nhttps://github.com/django/django/blob/5.1.1/docs/releases/5.1.1.txt#L17",
                "markdown": "# CVE-2024-45231\n## Description\nAn issue was discovered in Django prior to 4.2.16, 5.0.x prior to 5.0.9, and 5.1.x prior to 5.1.1. The 'django.contrib.auth.forms.PasswordResetForm' class, when used in a view implementing password reset flows, allows remote attackers to enumerate user e-mail addresses by sending password reset requests and observing the outcome (only when e-mail sending is consistently failing).\n## References\n* [https://github.com/advisories/GHSA-rrqc-c2jx-6jgv](https://github.com/advisories/GHSA-rrqc-c2jx-6jgv)\n* [https://github.com/django/django/commit/3c733c78d6f8e50296d6e248968b6516c92a53ca](https://github.com/django/django/commit/3c733c78d6f8e50296d6e248968b6516c92a53ca)\n* [https://www.djangoproject.com/weblog/2024/sep/03/security-releases/](https://www.djangoproject.com/weblog/2024/sep/03/security-releases/)\n* [https://github.com/django/django/blob/5.1.1/docs/releases/5.1.1.txt#L17](https://github.com/django/django/blob/5.1.1/docs/releases/5.1.1.txt#L17)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-rrqc-c2jx-6jgv",
                    "https://github.com/django/django/commit/3c733c78d6f8e50296d6e248968b6516c92a53ca",
                    "https://www.djangoproject.com/weblog/2024/sep/03/security-releases/",
                    "https://github.com/django/django/blob/5.1.1/docs/releases/5.1.1.txt#L17"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2024-45231",
              "shortDescription": {
                "text": "CVE-2024-45231"
              }
            },
            {
              "id": "CVE-2021-33203",
              "help": {
                "text": "CVE-2021-33203\nDjango before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.\n\nhttps://github.com/advisories/GHSA-68w8-qjq3-2gfm\nhttps://github.com/django/django/commit/46572de2e92fdeaf047f80c44d52269e54ad68db\nhttps://www.djangoproject.com/weblog/2021/jun/02/security-releases/\nhttps://docs.djangoproject.com/en/3.2/releases/security/",
                "markdown": "# CVE-2021-33203\n## Description\nDjango before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.\n## References\n* [https://github.com/advisories/GHSA-68w8-qjq3-2gfm](https://github.com/advisories/GHSA-68w8-qjq3-2gfm)\n* [https://github.com/django/django/commit/46572de2e92fdeaf047f80c44d52269e54ad68db](https://github.com/django/django/commit/46572de2e92fdeaf047f80c44d52269e54ad68db)\n* [https://www.djangoproject.com/weblog/2021/jun/02/security-releases/](https://www.djangoproject.com/weblog/2021/jun/02/security-releases/)\n* [https://docs.djangoproject.com/en/3.2/releases/security/](https://docs.djangoproject.com/en/3.2/releases/security/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-68w8-qjq3-2gfm",
                    "https://github.com/django/django/commit/46572de2e92fdeaf047f80c44d52269e54ad68db",
                    "https://www.djangoproject.com/weblog/2021/jun/02/security-releases/",
                    "https://docs.djangoproject.com/en/3.2/releases/security/"
                  ]
                }
              },
              "name": "AdvisoryCve202133203",
              "properties": {
                "cvss2": {
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "PARTIAL",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": "10",
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Authentication": "NONE",
                  "CollateralDamagePotential": null,
                  "TargetDistribution": null,
                  "IntegrityImpact": "NONE",
                  "Severity": "Medium",
                  "BaseScore": "5"
                },
                "cvss3": {
                  "PrivilegesRequired": "HIGH",
                  "UserInteraction": "NONE",
                  "Scope": "UNCHANGED",
                  "Integrity": "NONE",
                  "AttackVector": "NETWORK",
                  "AttackComplexity": "LOW",
                  "Confidentiality": "HIGH",
                  "Availability": "NONE",
                  "ExploitCodeMaturity": null,
                  "RemediationLevel": null,
                  "ReportConfidence": null,
                  "ConfidentialityRequirement": null,
                  "IntegrityRequirement": null,
                  "AvailabilityRequirement": null,
                  "Severity": "Medium",
                  "BaseScore": "4.9"
                },
                "cvss4": null,
                "cvePublishDate": "2021-06-08T18:15:00Z",
                "cwe": "CWE-22",
                "epssValue": "0.0014",
                "epssPercentile": "0.35111",
                "security-severity": "4.9"
              },
              "fullDescription": {
                "text": "CVE-2021-33203\nDjango before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.\n\nhttps://github.com/advisories/GHSA-68w8-qjq3-2gfm\nhttps://github.com/django/django/commit/46572de2e92fdeaf047f80c44d52269e54ad68db\nhttps://www.djangoproject.com/weblog/2021/jun/02/security-releases/\nhttps://docs.djangoproject.com/en/3.2/releases/security/",
                "markdown": "# CVE-2021-33203\n## Description\nDjango before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.\n## References\n* [https://github.com/advisories/GHSA-68w8-qjq3-2gfm](https://github.com/advisories/GHSA-68w8-qjq3-2gfm)\n* [https://github.com/django/django/commit/46572de2e92fdeaf047f80c44d52269e54ad68db](https://github.com/django/django/commit/46572de2e92fdeaf047f80c44d52269e54ad68db)\n* [https://www.djangoproject.com/weblog/2021/jun/02/security-releases/](https://www.djangoproject.com/weblog/2021/jun/02/security-releases/)\n* [https://docs.djangoproject.com/en/3.2/releases/security/](https://docs.djangoproject.com/en/3.2/releases/security/)",
                "properties": {
                  "references": [
                    "https://github.com/advisories/GHSA-68w8-qjq3-2gfm",
                    "https://github.com/django/django/commit/46572de2e92fdeaf047f80c44d52269e54ad68db",
                    "https://www.djangoproject.com/weblog/2021/jun/02/security-releases/",
                    "https://docs.djangoproject.com/en/3.2/releases/security/"
                  ]
                }
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2021-33203",
              "shortDescription": {
                "text": "CVE-2021-33203"
              }
            }
          ],
          "fullName": "Checkmarx SCA 3.40.0",
          "informationUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
          "productSuite": "CheckmarxOne",
          "semanticVersion": "3.40.0",
          "shortDescription": {
            "text": "Software composition analysis scanner."
          }
        },
        "properties": {
          "summary": {
            "RiskReportId": "127418ed-1a40-4473-b50b-6a8555e1d36c",
            "ProjectId": "44779275-8597-4882-ae95-c843d0445845",
            "ProjectName": "lets-be-bad-guys",
            "ProjectCreatedOn": "2025-07-02T18:24:33.052Z",
            "ProjectTags": [],
            "CriticalVulnerabilityCount": 9,
            "HighVulnerabilityCount": 26,
            "MediumVulnerabilityCount": 18,
            "LowVulnerabilityCount": 0,
            "NoneVulnerabilityCount": 0,
            "TotalPackages": 4,
            "DirectPackages": 3,
            "CreatedOn": "2025-07-02T18:26:20.035Z",
            "RiskScore": 9.8,
            "TotalOutdatedPackages": 3,
            "VulnerablePackages": 2,
            "CriticalVulnerablePackages": 2,
            "HighVulnerablePackages": 1,
            "MediumVulnerablePackages": 1,
            "LowVulnerablePackages": 0,
            "NoneVulnerablePackages": 0,
            "TotalPackagesWithLegalRisk": 1,
            "LicensesLegalRisk": {
              "Critical": 0,
              "High": 0,
              "Medium": 0,
              "Low": 0,
              "None": 1
            },
            "ScanOrigin": "Local",
            "ScanTags": [
              "flow:Local",
              "origin:webapp"
            ],
            "ExploitablePathEnabled": true,
            "ExploitablePathsFound": 5,
            "HasRemediationRecommendation": true,
            "BuildBreakerPolicies": 0,
            "ProjectPolicies": [
              "CxOne Policy"
            ],
            "ViolatingPoliciesCount": 1
          }
        }
      },
      "results": [
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2016-9013%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Critical",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.9.11",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2016-9013%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2016-9013"
          },
          "ruleId": "CVE-2016-9013"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-14234%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Critical",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.11.23",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-14234%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2019-14234"
          },
          "ruleId": "CVE-2019-14234"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-19844%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Critical",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.11.27",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-19844%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2019-19844"
          },
          "ruleId": "CVE-2019-19844"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2020-7471%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Critical",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.11.28",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2020-7471%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2020-7471"
          },
          "ruleId": "CVE-2020-7471"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2022-28346%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Critical",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "2.2.28",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2022-28346%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2022-28346"
          },
          "ruleId": "CVE-2022-28346"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2022-28347%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Critical",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "2.2.28",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2022-28347%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2022-28347"
          },
          "ruleId": "CVE-2022-28347"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2023-31047%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Critical",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "3.2.19",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2023-31047%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2023-31047"
          },
          "ruleId": "CVE-2023-31047"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2023-5457%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Critical",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": null,
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2023-5457%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2023-5457"
          },
          "ruleId": "CVE-2023-5457"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **django-debug-toolbar** version **1.4** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2021-30459%253APython-django-debug-toolbar-1.4%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **django-debug-toolbar** version **1.4** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Critical",
            "packageName": "django-debug-toolbar",
            "packageVersion": "1.4",
            "packageManager": "Python",
            "fixResolutionText": "1.11.1",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2021-30459%253APython-django-debug-toolbar-1.4%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-django-debug-toolbar-1.4",
            "cve": "CVE-2021-30459"
          },
          "ruleId": "CVE-2021-30459"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2020-9402%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.11.29",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2020-9402%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2020-9402"
          },
          "ruleId": "CVE-2020-9402"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-38875%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "4.2.14",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-38875%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2024-38875"
          },
          "ruleId": "CVE-2024-38875"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-39330%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "4.2.14",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-39330%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2024-39330"
          },
          "ruleId": "CVE-2024-39330"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-39614%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "4.2.14",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-39614%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2024-39614"
          },
          "ruleId": "CVE-2024-39614"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-53907%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "4.2.17",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-53907%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2024-53907"
          },
          "ruleId": "CVE-2024-53907"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2016-9014%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.9.11",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2016-9014%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2016-9014"
          },
          "ruleId": "CVE-2016-9014"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2016-7401%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.9.10",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2016-7401%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2016-7401"
          },
          "ruleId": "CVE-2016-7401"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2018-6188%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.11",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2018-6188%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2018-6188"
          },
          "ruleId": "CVE-2018-6188"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**.\n\n\n\nExploitable Path found some locations where package may be referenced:\n\n\n* StreamingBuffer||.read: /django/utils/text.py Line: 304\n* StreamingBuffer.read: /badguys/vulnerable/views.py Line: 42\n\n [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-14232%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**.\n\n\n\nExploitable Path found some locations where package may be referenced:\n\n\n* StreamingBuffer||.read: /django/utils/text.py Line: 304\n* StreamingBuffer.read: /badguys/vulnerable/views.py Line: 42\n\n"
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.11.23",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "NameSpace": "",
                              "FullName": "StreamingBuffer||.read",
                              "ShortName": "read"
                            },
                            "endColumn": 1,
                            "startColumn": 1,
                            "startLine": 304
                          },
                          "artifactLocation": {
                            "uri": "django/utils/text.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "NameSpace": "",
                              "FullName": "StreamingBuffer.read",
                              "ShortName": "read"
                            },
                            "endColumn": 1,
                            "startColumn": 1,
                            "startLine": 42
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-14232%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2019-14232"
          },
          "ruleId": "CVE-2019-14232"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-14233%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.11.23",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-14233%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2019-14233"
          },
          "ruleId": "CVE-2019-14233"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-14235%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.11.23",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-14235%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2019-14235"
          },
          "ruleId": "CVE-2019-14235"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-6975%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.11.20",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-6975%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2019-6975"
          },
          "ruleId": "CVE-2019-6975"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2020-24583%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "2.2.16",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2020-24583%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2020-24583"
          },
          "ruleId": "CVE-2020-24583"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2020-24584%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "2.2.16",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2020-24584%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2020-24584"
          },
          "ruleId": "CVE-2020-24584"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2021-31542%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "2.2.21",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2021-31542%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2021-31542"
          },
          "ruleId": "CVE-2021-31542"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2021-33571%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "2.2.24",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2021-33571%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2021-33571"
          },
          "ruleId": "CVE-2021-33571"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2021-45115%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "2.2.26",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2021-45115%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2021-45115"
          },
          "ruleId": "CVE-2021-45115"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2021-45116%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "2.2.26",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2021-45116%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2021-45116"
          },
          "ruleId": "CVE-2021-45116"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2023-24580%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "3.2.18",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2023-24580%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2023-24580"
          },
          "ruleId": "CVE-2023-24580"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**.\n\n\n\nExploitable Path found some locations where package may be referenced:\n\n\n* StreamingBuffer||.read: /django/utils/text.py Line: 304\n* StreamingBuffer.read: /badguys/vulnerable/views.py Line: 42\n\n [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-27351%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**.\n\n\n\nExploitable Path found some locations where package may be referenced:\n\n\n* StreamingBuffer||.read: /django/utils/text.py Line: 304\n* StreamingBuffer.read: /badguys/vulnerable/views.py Line: 42\n\n"
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "3.2.25",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "NameSpace": "",
                              "FullName": "StreamingBuffer||.read",
                              "ShortName": "read"
                            },
                            "endColumn": 1,
                            "startColumn": 1,
                            "startLine": 304
                          },
                          "artifactLocation": {
                            "uri": "django/utils/text.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "NameSpace": "",
                              "FullName": "StreamingBuffer.read",
                              "ShortName": "read"
                            },
                            "endColumn": 1,
                            "startColumn": 1,
                            "startLine": 42
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-27351%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2024-27351"
          },
          "ruleId": "CVE-2024-27351"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-41989%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "4.2.15",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-41989%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2024-41989"
          },
          "ruleId": "CVE-2024-41989"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-41990%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "4.2.15",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-41990%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2024-41990"
          },
          "ruleId": "CVE-2024-41990"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-41991%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "4.2.15",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-41991%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2024-41991"
          },
          "ruleId": "CVE-2024-41991"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2025-32873%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "4.2.21",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2025-32873%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2025-32873"
          },
          "ruleId": "CVE-2025-32873"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2021-44420%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "2.2.25",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2021-44420%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2021-44420"
          },
          "ruleId": "CVE-2021-44420"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-42005%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "High",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "4.2.15",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "True"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-42005%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2024-42005"
          },
          "ruleId": "CVE-2024-42005"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-39329%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Medium",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "4.2.14",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "False"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-39329%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2024-39329"
          },
          "ruleId": "CVE-2024-39329"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-19118%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Medium",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "2.1.15",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "False"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-19118%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2019-19118"
          },
          "ruleId": "CVE-2019-19118"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-3498%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Medium",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.11.18",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "False"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-3498%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2019-3498"
          },
          "ruleId": "CVE-2019-3498"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2016-6186%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Medium",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.9.8",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "False"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2016-6186%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2016-6186"
          },
          "ruleId": "CVE-2016-6186"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2017-12794%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Medium",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.10.8",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "False"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2017-12794%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2017-12794"
          },
          "ruleId": "CVE-2017-12794"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2017-7233%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Medium",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.9.13",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "False"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2017-7233%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2017-7233"
          },
          "ruleId": "CVE-2017-7233"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2017-7234%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Medium",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.9.13",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "False"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2017-7234%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2017-7234"
          },
          "ruleId": "CVE-2017-7234"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2018-14574%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Medium",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.11.15",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "False"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2018-14574%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2018-14574"
          },
          "ruleId": "CVE-2018-14574"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-12308%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Medium",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.11.21",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "False"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-12308%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2019-12308"
          },
          "ruleId": "CVE-2019-12308"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2020-13596%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Medium",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "2.2.13",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "False"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2020-13596%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2020-13596"
          },
          "ruleId": "CVE-2020-13596"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2021-32052%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Medium",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "2.2.22",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "False"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2021-32052%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2021-32052"
          },
          "ruleId": "CVE-2021-32052"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**.\n\n\n\nExploitable Path found some locations where package may be referenced:\n\n\n* BaseMemcachedCache||.get: /django/core/cache/backends/memcached.py Line: 74\n* BaseMemcachedCache.get: /badguys/vulnerable/views.py Line: 30\n\n [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2020-13254%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**.\n\n\n\nExploitable Path found some locations where package may be referenced:\n\n\n* BaseMemcachedCache||.get: /django/core/cache/backends/memcached.py Line: 74\n* BaseMemcachedCache.get: /badguys/vulnerable/views.py Line: 30\n\n"
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Medium",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "2.2.13",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "False"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "NameSpace": "",
                              "FullName": "BaseMemcachedCache||.get",
                              "ShortName": "get"
                            },
                            "endColumn": 1,
                            "startColumn": 1,
                            "startLine": 74
                          },
                          "artifactLocation": {
                            "uri": "django/core/cache/backends/memcached.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "NameSpace": "",
                              "FullName": "BaseMemcachedCache.get",
                              "ShortName": "get"
                            },
                            "endColumn": 1,
                            "startColumn": 1,
                            "startLine": 30
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2020-13254%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2020-13254"
          },
          "ruleId": "CVE-2020-13254"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2018-7536%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Medium",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.11.11",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "False"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2018-7536%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2018-7536"
          },
          "ruleId": "CVE-2018-7536"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**.\n\n\n\nExploitable Path found some locations where package may be referenced:\n\n\n* StreamingBuffer||.read: /django/utils/text.py Line: 304\n* StreamingBuffer.read: /badguys/vulnerable/views.py Line: 42\n\n [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2018-7537%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**.\n\n\n\nExploitable Path found some locations where package may be referenced:\n\n\n* StreamingBuffer||.read: /django/utils/text.py Line: 304\n* StreamingBuffer.read: /badguys/vulnerable/views.py Line: 42\n\n"
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Medium",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.11.11",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "False"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "NameSpace": "",
                              "FullName": "StreamingBuffer||.read",
                              "ShortName": "read"
                            },
                            "endColumn": 1,
                            "startColumn": 1,
                            "startLine": 304
                          },
                          "artifactLocation": {
                            "uri": "django/utils/text.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "NameSpace": "",
                              "FullName": "StreamingBuffer.read",
                              "ShortName": "read"
                            },
                            "endColumn": 1,
                            "startColumn": 1,
                            "startLine": 42
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2018-7537%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2018-7537"
          },
          "ruleId": "CVE-2018-7537"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**.\n\n\n\nExploitable Path found some locations where package may be referenced:\n\n\n* HttpRequest||.read: /django/http/request.py Line: 317\n* HttpRequest.read: /badguys/vulnerable/views.py Line: 42\n\n [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-12781%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**.\n\n\n\nExploitable Path found some locations where package may be referenced:\n\n\n* HttpRequest||.read: /django/http/request.py Line: 317\n* HttpRequest.read: /badguys/vulnerable/views.py Line: 42\n\n"
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Medium",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "1.11.22",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "False"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "NameSpace": "",
                              "FullName": "HttpRequest||.read",
                              "ShortName": "read"
                            },
                            "endColumn": 1,
                            "startColumn": 1,
                            "startLine": 317
                          },
                          "artifactLocation": {
                            "uri": "django/http/request.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "NameSpace": "",
                              "FullName": "HttpRequest.read",
                              "ShortName": "read"
                            },
                            "endColumn": 1,
                            "startColumn": 1,
                            "startLine": 42
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2019-12781%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2019-12781"
          },
          "ruleId": "CVE-2019-12781"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2021-45452%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Medium",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "2.2.26",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "False"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2021-45452%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2021-45452"
          },
          "ruleId": "CVE-2021-45452"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-45231%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Medium",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "4.2.16",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "False"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2024-45231%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2024-45231"
          },
          "ruleId": "CVE-2024-45231"
        },
        {
          "message": {
            "markdown": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**. [View in CheckmarxOne](https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2021-33203%253APython-Django-1.9.6%2FvulnerabilityDetailsGql)",
            "text": "Displaying manifest where package reference is found. Detected in package **Django** version **1.9.6** from package manager **Python**."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "endColumn": 1,
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "requirements.txt"
                }
              }
            }
          ],
          "properties": {
            "severity": "Medium",
            "packageName": "Django",
            "packageVersion": "1.9.6",
            "packageManager": "Python",
            "fixResolutionText": "2.2.24",
            "state": "ToVerify",
            "status": "New",
            "firstFoundAt": "2025-07-02T18:26:20.035Z",
            "riskType": "package",
            "isViolatingPolicy": "False"
          },
          "hostedViewerUri": "https://ast.checkmarx.net/results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c/sca?internalPath=%2Fvulnerabilities%2FCVE-2021-33203%253APython-Django-1.9.6%2FvulnerabilityDetailsGql",
          "partialFingerprints": {
            "packageId": "Python-Django-1.9.6",
            "cve": "CVE-2021-33203"
          },
          "ruleId": "CVE-2021-33203"
        }
      ],
      "automationDetails": {
        "description": {
          "text": "Software composition analysis scan with CheckmarxOne SCA"
        },
        "guid": "127418ed-1a40-4473-b50b-6a8555e1d36c",
        "id": "projectid/44779275-8597-4882-ae95-c843d0445845/scanid/127418ed-1a40-4473-b50b-6a8555e1d36c/",
        "correlationGuid": "44779275-8597-4882-ae95-c843d0445845"
      },
      "columnKind": "unicodeCodePoints",
      "versionControlProvenance": [
        {
          "branch": "master",
          "properties": {
            "sourceType": "github",
            "sourceOrigin": "webapp"
          },
          "repositoryUri": "https://github.com/cx-nathan-leach/lets-be-bad-guys.git",
          "asOfTimeUtc": "2025-07-02T18:26:16.562424Z"
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "CheckmarxOne-SAST",
          "guid": "1ca3e5a3-f84e-43aa-8b7c-fe39c2cecac4",
          "notifications": [],
          "organization": "Checkmarx",
          "properties": {
            "scanMetrics": {
              "scanId": "127418ed-1a40-4473-b50b-6a8555e1d36c",
              "memoryPeak": 1218,
              "virtualMemoryPeak": 60345,
              "totalScannedFilesCount": 16,
              "totalScannedLoc": 1408,
              "domObjectsPerLanguage": {
                "JavaScript": 229,
                "Python": 2393
              },
              "successfullLocPerLanguage": {
                "JavaScript": 311,
                "Python": 887
              },
              "failedLocPerLanguage": null,
              "fileCountOfDetectedButNotScannedLanguages": null,
              "scannedFilesPerLanguage": {
                "JavaScript": {
                  "goodFiles": 5,
                  "partiallyGoodFiles": 0,
                  "badFiles": 0
                },
                "Python": {
                  "goodFiles": 13,
                  "partiallyGoodFiles": 0,
                  "badFiles": 0
                }
              }
            }
          },
          "rules": [
            {
              "id": "Python_Critical_Risk.Stored_XSS",
              "help": {
                "text": "*   Fully encode all dynamic data, regardless of source, before embedding it in output.\r\n*   Encoding should be context-sensitive. For example:\r\n    *   HTML encoding for HTML content\r\n    *   HTML Attribute encoding for data output to attribute values\r\n    *   JavaScript encoding for server-generated JavaScript\r\n*   It is recommended to use the platform-provided encoding functionality, or known security libraries for encoding output.\r\n*   Implement a Content Security Policy (CSP) with explicit whitelists for the application's resources only.\u00a0\r\n*   As an extra layer of protection, validate all untrusted data, regardless of source (note this is not a replacement for encoding). Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:\r\n    *   Data type\r\n    *   Size\r\n    *   Range\r\n    *   Format\r\n    *   Expected values\r\n*   In the `Content-Type` HTTP response header, explicitly define character encoding (charset) for the entire page.\u00a0\r\n*   Set the `HTTPOnly` flag on the session cookie for \"Defense in Depth\", to prevent any successful XSS exploits from stealing the cookie.\n\n"
              },
              "name": "StoredXss",
              "properties": {
                "queryID": 346558629760677672,
                "security-severity": "9.4203"
              },
              "fullDescription": {
                "text": "A successful XSS exploit would allow an attacker to rewrite web pages and insert malicious scripts which would alter the intended output. This could include HTML fragments, CSS styling rules, arbitrary JavaScript, or references to third party code. An attacker could use this to steal users' passwords, collect personal data such as credit card details, provide false information, or run malware. From the victim\u2019s point of view, this is performed by the genuine website, and the victim would blame the site for incurred damage.\n\nAn attacker could use legitimate access to the application to submit modified data to the application\u2019s data-store. This would then be used to construct the returned web page, triggering the attack.\n\n"
              },
              "helpUri": "https://docs.checkmarx.com/",
              "shortDescription": {
                "text": "Python: Stored XSS"
              }
            },
            {
              "id": "Python_Critical_Risk.Code_Injection",
              "help": {
                "text": "\r\n*   The application should not compile, execute, or evaluate any untrusted code from any external source, including user input, uploaded files, or a database. \r\n*   If it is absolutely necessary to include external data in dynamic execution, it is permissible to pass the data as parameters to the code, but do not execute user data directly.  \r\n*   If it is necessary to pass untrusted data to dynamic execution, enforce very strict data validation. For example, accept only integers between certain values.\r\n*   Validate all input, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Parameters should be limited to an allowed character set, and non-validated input should be dropped. In addition to characters, check for:\r\n    *   Data type\r\n    *   Size\r\n    *   Range\r\n    *   Format\r\n    *   Expected values\r\n*   If possible, always prefer to whitelist known and trusted input instead of comparing to a blacklist.\r\n*   Configure the application to run using a restricted user account that has no unnecessary privileges.\r\n*   If possible, isolate all dynamic execution to use a separate, dedicated user account that has privileges only for the specific operations and files used by dynamic execution, according to the Principle of Least Privilege.\r\n*   Prefer passing user data to a pre-implemented script, e.g. in another isolated application.\u00a0\r\n*   If the provided user data consists only of Python literals and literal containers, consider using\u00a0`ast.literal_eval()` instead, or even the `json` object."
              },
              "name": "CodeInjection",
              "properties": {
                "queryID": 13646819717326216658,
                "security-severity": "9.1304"
              },
              "fullDescription": {
                "text": "An attacker could run arbitrary code on the application server host. Depending on the application\u2019s OS permissions,these could include:\r\n*   Database access, such as reading or modifying sensitive data;\r\n*   File actions (read / create / modify / delete);\r\n*   Changing the website;\r\n*   Open a network connection to the attacker\u2019s server;\r\n*   Decrypt secret data using the application's encryption keys;\u00a0\r\n*   Start and stop system services;\r\n*   Complete server takeover.\n\n"
              },
              "helpUri": "https://docs.checkmarx.com/",
              "shortDescription": {
                "text": "Python: Code Injection"
              }
            },
            {
              "id": "Python_High_Risk.Reflected_XSS",
              "help": {
                "text": "*   Fully encode all dynamic data, regardless of source, before embedding it in output.\r\n*   Encoding should be context-sensitive. For example:\r\n    *   HTML encoding for HTML content\r\n    *   HTML Attribute encoding for data output to attribute values\r\n    *   JavaScript encoding for server-generated JavaScript\r\n*   It is recommended to use the platform-provided encoding functionality, or known security libraries for encoding output.\r\n*   Implement a Content Security Policy (CSP) with explicit whitelists for the application's resources only.\u00a0\r\n*   As an extra layer of protection, validate all untrusted data, regardless of source (note this is not a replacement for encoding). Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:\r\n    *   Data type\r\n    *   Size\r\n    *   Range\r\n    *   Format\r\n    *   Expected values\r\n*   In the `Content-Type` HTTP response header, explicitly define character encoding (charset) for the entire page.\u00a0\r\n*   Set the `HTTPOnly` flag on the session cookie for \"Defense in Depth\", to prevent any successful XSS exploits from stealing the cookie.\n\n"
              },
              "name": "ReflectedXss",
              "properties": {
                "queryID": 11301225196674651062,
                "security-severity": "7"
              },
              "fullDescription": {
                "text": "A successful XSS exploit would allow an attacker to rewrite web pages and insert malicious scripts which would alter the intended output. This could include HTML fragments, CSS styling rules, arbitrary JavaScript, or references to third party code. An attacker could use this to steal users' passwords, collect personal data such as credit card details, provide false information, or run malware. From the victim\u2019s point of view, this is performed by the genuine website, and the victim would blame the site for incurred damage.\n\nThe attacker could use social engineering to cause the user to send the website modified input, which will be returned in the requested web page.\n\n"
              },
              "helpUri": "https://docs.checkmarx.com/",
              "shortDescription": {
                "text": "Python: Reflected XSS"
              }
            },
            {
              "id": "Python_High_Risk.Path_Traversal",
              "help": {
                "text": "1.  Ideally, avoid depending on dynamic data for file selection.\n2.  Validate all input, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:\n    * Data type\n    * Size\n    * Range\n    * Format\n    * Expected values\n4.  Accept dynamic data only for the filename, not for the path and folders.\n5.  Ensure that file path is fully canonicalized.\n6.  Explicitly limit the application to use a designated folder that is separate from the applications binary folder.\n7.  Restrict the privileges of the application\u2019s OS user to necessary files and folders. The application should not be able to write to the application binary folder, and should not read anything outside of the application folder and data folder.\n\n"
              },
              "name": "PathTraversal",
              "properties": {
                "queryID": 4418167693267818286,
                "security-severity": "7.5362"
              },
              "fullDescription": {
                "text": "An attacker could define arbitrary file path for the application to use, potentially leading to:\r\n*   Stealing sensitive files, such as configuration or system files\r\n*   Overwriting files such as program binaries, configuration files, or system files\r\n*   Deleting critical files, causing denial of service (DoS).\n\n"
              },
              "helpUri": "https://docs.checkmarx.com/",
              "shortDescription": {
                "text": "Python: Path Traversal"
              }
            },
            {
              "id": "Python_High_Risk.Debug_Enabled",
              "help": {
                "text": "\u00a0- Remove all debug code before deploying or building the application. Ensure the configuration settings are not defined to enable debug mode.\u00a0\r\n\u00a0- Implement all test code via a dedicated test framework, which can isolate the test case code from the rest of the application.\u00a0\r\n\u00a0- Avoid implementing special \"test code\", \"debugging-time\" functionality, or \"secret\" interfaces or parameters in the application code itself.\u00a0\r\n\u00a0- Define and implement a standard and automatic build / deployment process, using dedicated CI / CD tools, that can automatically configure the deployed application, exclude all temporary code, and include only intended application code."
              },
              "name": "DebugEnabled",
              "properties": {
                "queryID": 15910406614565918143,
                "security-severity": "7.6812"
              },
              "fullDescription": {
                "text": "Tests and debugging code are not intended to be deployed to the production environment, and can create unintended entry points, thus increasing the application's attack surface. Furthermore, this code is often not properly tested or maintained, and can retain historic vulnerabilities that were fixed in other parts of the codebase. Often, debug code will contain a functional \"back door\", by enabling the programmer to bypass operational security mechanisms, such as authentication or access controls."
              },
              "helpUri": "https://docs.checkmarx.com/",
              "shortDescription": {
                "text": "Python: Debug Enabled"
              }
            },
            {
              "id": "Python_Medium_Threat.Use_Of_Hardcoded_Password",
              "help": {
                "text": "*   Do not hardcode any secret data in source code, especially not passwords.\u00a0\r\n*   In particular, user passwords should be stored in a\u00a0database or directory service, and protected with a strong password hash (e.g. bcrypt, scrypt, PBKDF2, or Argon2). Do not compare user passwords with a hardcoded value.\u00a0\r\n*   Sytem passwords should be stored in a configuration file or the database, and protected with strong encryption (e.g. AES-256). Encryption keys should be securely managed, and not hardcoded."
              },
              "name": "UseOfHardcodedPassword",
              "properties": {
                "queryID": 10308959669028119927,
                "security-severity": "5.5072"
              },
              "fullDescription": {
                "text": "Hardcoded passwords expose the application to password leakage. If an attacker gains access to the source code, she will be able to steal the embedded passwords, and use them to impersonate a valid user. This could include impersonating end users to the application, or impersonating the application to a remote system, such as a database or a remote web service.\u00a0\r\n\r\nOnce the attacker succeeds in impersonating the user or application, she will have full access to the system, and be able to do anything the impersonated identity could do."
              },
              "helpUri": "https://docs.checkmarx.com/",
              "shortDescription": {
                "text": "Python: Use Of Hardcoded Password"
              }
            },
            {
              "id": "Python_Medium_Threat.Use_of_Hardcoded_Cryptographic_Key",
              "help": {
                "text": "Generic Guidance:\r\n*   Do not store any sensitive information, such as encryption keys, in plain text.\r\n*   Never\u00a0hardcode encryption keys in the application source code.\u00a0\r\n*   Implement proper key management, including dynamically generating random keys, protecting keys, and replacing keys as necessary.\u00a0\r\n\r\nSpecific Recommendations:\r\n*   Remove the hardcoded encryption key from the application source code. Instead, retrieve the key from an external, protected store.\n\n"
              },
              "name": "UseOfHardcodedCryptographicKey",
              "properties": {
                "queryID": 17125041041096276150,
                "security-severity": "5.7971"
              },
              "fullDescription": {
                "text": "Static, unchangeable encryption keys in the source code can be stolen by an attacker with access to the source code or the application binaries. Once the attacker has the encryption key, this can be used to gain access to any encrypted secret data, thus violating the confidentiality of the data. Furthermore, it would be impossible to replace the encryption key once stolen. Note that if this is\u00a0a product that can be installed numerous times, the encryption key will always be the same, allowing an attacker to break all instances at the same cost.\n\n"
              },
              "helpUri": "https://docs.checkmarx.com/",
              "shortDescription": {
                "text": "Python: Use of Hardcoded Cryptographic Key"
              }
            },
            {
              "id": "Python_Medium_Threat.Secure_Cookie_Flag_Not_Set_In_Config",
              "help": {
                "text": "*   Always rely on HTTPS to conduct secure HTTP communications\r\n*   Cookies should always have the secure attribute flag when a secured channel is used\n\n"
              },
              "name": "SecureCookieFlagNotSetInConfig",
              "properties": {
                "queryID": 13728294608634614396,
                "security-severity": "5"
              },
              "fullDescription": {
                "text": "Cookies without the secure attribute may be transmitted over an unencrypted channel, in a way that may allow an attacker may be able to observe the cookie and might impersonate the user, performing actions on their behalf.\n\n"
              },
              "helpUri": "https://docs.checkmarx.com/",
              "shortDescription": {
                "text": "Python: Secure Cookie Flag Not Set In Config"
              }
            },
            {
              "id": "Python_Medium_Threat.Open_Redirect",
              "help": {
                "text": "\r\n1.  Ideally, do not allow arbitrary URLs for redirection. Instead, create a mapping from user-provided parameter values to legitimate URLs.\r\n2.  If it is necessary to allow arbitrary URLs:\r\n    *   For URLs inside the application site, first filter and encode the user-provided parameter, and then either:\r\n        *   Create a white-list of allowed URLs inside the application\r\n        *   Use variables as a relative URL as an absolute one, by prefixing it with the application site domain - this will ensure all redirection will occur inside the domain\r\n    *   For URLs outside the application (if necessary), either:\r\n        *   White-list redirection to allowed external domains by first filtering URLs with trusted prefixes. Prefixes must be tested up to the third slash \\[/\\] - `scheme://my.trusted.domain.com/,` to prevent evasion. For example, if the third slash \\[/\\] is not validated and scheme://my.trusted.domain.com is trusted, the URL scheme://my.trusted.domain.com.evildomain.com would be valid under this filter, but the domain actually being browsed is evildomain.com, not domain.com.\r\n        *   For fully dynamic open redirection, use an intermediate disclaimer page to provide users with a clear warning that they are leaving the site.\r\n\n\n"
              },
              "name": "OpenRedirect",
              "properties": {
                "queryID": 11971208775240962660,
                "security-severity": "6.6667"
              },
              "fullDescription": {
                "text": "An attacker could use social engineering to get a victim to click a link to the application, so that the user will be immediately redirected to another site of the attacker's choice. An attacker can then craft a destination website to fool the victim; for example - they may craft a phishing website with an identical looking UI as the previous website's login page, and with a similar looking URL, convincing the user to submit their access credentials in the attacker's website. Another example would be a phishing website with an identical UI as that of a popular payment service, convincing the user to submit their payment information.\n\n"
              },
              "helpUri": "https://docs.checkmarx.com/",
              "shortDescription": {
                "text": "Python: Open Redirect"
              }
            },
            {
              "id": "Python_Medium_Threat.Missing_HSTS_Header",
              "help": {
                "text": "*   Before setting the HSTS header - consider the implications it may have:\n    *   Forcing HTTPS will prevent any future use of HTTP, which could hinder some testing\n    *   Disabling HSTS is not trivial, as once it is disabled on the site, it must also be disabled on the browser\n*   Set the HSTS header either explicitly within application code, or using web-server configurations.\n*   Ensure the \"max-age\" value for HSTS headers is set to 31536000 to ensure HSTS is strictly enforced for at least one year.\n*   Include the \"includeSubDomains\" to maximize HSTS coverage, and ensure HSTS is enforced on all sub-domains under the current domain\n    *   Note that this may prevent secure browser access to any sub-domains that utilize HTTP; however, use of HTTP is very severe and highly discouraged, even for websites that do not contain any sensitive information, as their contents can still be tampered via Man-in-the-Middle attacks to phish users under the HTTP domain.\n*   Once HSTS has been enforced, submit the web-application's\u00a0address to an HSTS preload list - this will ensure that, even if a client is accessing the web-application for the first time (implying HSTS has not yet been set by the web-application), a browser that respects the HSTS preload list would still treat the web-application as if it had already issued an HSTS header. Note that this requires the server to have a trusted SSL certificate, and issue an HSTS header with a maxAge of 1 year (31536000)\n*   Note that\u00a0this query is designed to return one result per application. This means that if more than one vulnerable response without an HSTS header is identified, only the first identified instance of this issue will be highlighted as a result. If a misconfigured instance of HSTS is identified (has a short lifespan, or is missing the \"includeSubDomains\" flag), that result will be flagged. Since HSTS is required to be enforced across the entire application to be considered a secure deployment of HSTS functionality, fixing this issue only where the query highlights this result is likely to produce subsequent results in other sections of the application; therefore, when adding this header via code, ensure it is uniformly deployed across the entire application. If this header is added via configuration, ensure that this configuration applies to the entire application.\n*   Note that misconfigured HSTS headers that do not contain the recommended max-age value of at least one year or the \"includeSubDomains\" flag will still return a result for a missing HSTS header.\n\n"
              },
              "name": "MissingHstsHeader",
              "properties": {
                "queryID": 7929843929890808532,
                "security-severity": "4.9275"
              },
              "fullDescription": {
                "text": "Failure to set an HSTS header and provide it with a reasonable \"max-age\" value of at least one year may leave users vulnerable to Man-in-the-Middle attacks.\n\n"
              },
              "helpUri": "https://docs.checkmarx.com/",
              "shortDescription": {
                "text": "Python: Missing HSTS Header"
              }
            },
            {
              "id": "Python_Medium_Threat.Django_Missing_Function_Level_Authorization",
              "help": {
                "text": "Use Spring-Security annotations according to the desired Spring-Security configuration in order to safely create methods with an Authorization layer."
              },
              "name": "DjangoMissingFunctionLevelAuthorization",
              "properties": {
                "queryID": 9932158522616364323,
                "security-severity": "5.3623"
              },
              "fullDescription": {
                "text": "The user may try to access objects that need an authorization level that the user shouldn't have, by guessing the object's id."
              },
              "helpUri": "https://docs.checkmarx.com/",
              "shortDescription": {
                "text": "Python: Django Missing Function Level Authorization"
              }
            },
            {
              "id": "Python_Medium_Threat.Command_Argument_Injection",
              "help": {
                "text": "- Refactor the code to avoid any direct shell command execution. Instead, use platform provided APIs or library calls.\n- If it is impossible to remove the command execution, execute only static commands that do not include dynamic, user-controlled data.\n- Validate all input, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified format, rather than rejecting bad patterns (blacklist). Parameters should be limited to an allowed character set, and non-validated input should be dropped. In addition to characters, check for:\n     - Data type\n     - Size\n     - Range\n     - Format\n     - Expected values\n- In order to minimize damage as a measure of defense in depth, configure the application to run using a restricted user account that has no unnecessary OS privileges.\n- If possible, isolate all OS commands to use a separate dedicated user account that has minimal privileges only for the specific commands and files used by the application, according to the Principle of Least Privilege.\n\n"
              },
              "name": "CommandArgumentInjection",
              "properties": {
                "queryID": 16321289430704188843,
                "security-severity": "4.7826"
              },
              "fullDescription": {
                "text": "The impact of an attacker-controlled argument passed to an external program depends on the functionality, capability, implementation and permissions granted to this program. Invoking a program that allows OS commands may allow command injection, an external compiler or interpreter may allow for code injection or a file path can be manipulated to allow path traversal. In other cases, the external program may itself be vulnerable to attack, such as a buffer overflow.\n\n"
              },
              "helpUri": "https://docs.checkmarx.com/",
              "shortDescription": {
                "text": "Python: Command Argument Injection"
              }
            },
            {
              "id": "JavaScript_Low_Visibility.Potential_Clickjacking_on_Legacy_Browsers",
              "help": {
                "text": "Generic Guidance:\r\n*   Define and implement a a Content Security Policy (CSP) on the server side, including a frame-ancestors directive. Enforce the CSP on all relevant webpages.\u00a0\r\n*   If certain webpages are required to be loaded into a frame, define a specific, whitelisted target URL.\u00a0\r\n*   Alternatively, return a\u00a0\"X-Frame-Options\" header on all HTTP responses. If it is necessary to allow a particular webpage to be loaded into a frame,\u00a0\u00a0define a specific, whitelisted target URL.\u00a0\r\n*   For legacy support, implement framebusting code using Javascript and CSS to ensure that, if a page is framed, it is never displayed, and attempt to navigate into the frame to prevent attack. Even if navigation fails, the page is not displayed and is therefore not interactive, mitigating potential clickjacking attacks.\r\n\r\nSpecific Recommendations:\r\n*   Implement a proper framebuster script on the client, that is not vulnerable to frame-buster-busting attacks.\r\n    *   Code should first disable the UI, such that even if frame-busting is successfully evaded, the UI cannot be clicked. This can be done by setting the CSS value of the \"display\" attribute to \"none\" on either the \"body\" or \"html\" tags. This is done because, if a frame attempts to redirect and become the parent, the malicious parent can still prevent redirection via various techniques.\r\n    *   Code should then determine whether no framing occurs by comparing self === top; if the result is true, can the UI be enabled. If it is false, attempt to navigate away from the framing page by setting the top.location attribute to self.location."
              },
              "name": "PotentialClickjackingOnLegacyBrowsers",
              "properties": {
                "queryID": 4267131875844504913,
                "security-severity": "3.913"
              },
              "fullDescription": {
                "text": "Clickjacking attacks allow an attacker to \"hijack\" a user's mouse clicks on a webpage, by invisibly framing the application, and superimposing it in front of a bogus site. When the user is convinced to click on the bogus website, e.g. on a link or a button, the user's mouse is actually clicking on the target webpage, despite being invisible.\u00a0\r\n\r\nThis could allow the attacker to craft an overlay that, when clicked, would lead the user to perform undesirable actions in the vulnerable application, e.g. enabling the user's webcam, deleting all the user's\u00a0records, changing the user's settings, or causing clickfraud."
              },
              "helpUri": "https://docs.checkmarx.com/",
              "shortDescription": {
                "text": "Javascript: Potential Clickjacking on Legacy Browsers"
              }
            },
            {
              "id": "Python_Low_Visibility.Missing_Content_Security_Policy",
              "help": {
                "text": "Explicitly set the Content-Security-Policy headers for all applicable policy types (frame, script, form, script, media, img etc.) according to business requirements and deployment layout of external file hosting services. Specifically, do not use\u00a0a wildcard, '\\*', to specify these policies, as this would allow content from any external resource.\r\n\r\nThe Content-Security-Policy can be explicitly defined within web-application code, as a header\u00a0managed by\u00a0web-server configurations, or within <meta> tags in the HTML `<head>` section."
              },
              "name": "MissingContentSecurityPolicy",
              "properties": {
                "queryID": 8455083761984522303,
                "security-severity": "2.3188"
              },
              "fullDescription": {
                "text": "The Content-Security-Policy header enforces that the source of content, such as the origin of a script, embedded (child) frame, embedding (parent) frame or image, are trusted and allowed by the current web-page; if, within the web-page, a content's source does not adhere to\u00a0a strict\u00a0Content Security Policy, it is promptly rejected by the browser. Failure to define a policy may leave the application's users exposed to Cross-Site Scripting (XSS) attacks, Clickjacking attacks, content forgery and more."
              },
              "helpUri": "https://docs.checkmarx.com/",
              "shortDescription": {
                "text": "Python: Missing Content Security Policy"
              }
            }
          ],
          "fullName": "Checkmarx SAST 9.7.3",
          "informationUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
          "productSuite": "CheckmarxOne",
          "semanticVersion": "9.7.3",
          "shortDescription": {
            "text": "Static code analysis scanner."
          }
        },
        "properties": {
          "scanMetadata": {
            "scanId": "127418ed-1a40-4473-b50b-6a8555e1d36c",
            "projectId": "44779275-8597-4882-ae95-c843d0445845",
            "loc": 14221,
            "fileCount": 77,
            "isIncremental": false,
            "isIncrementalCanceled": false,
            "queryPreset": "All"
          }
        }
      },
      "results": [
        {
          "message": {
            "markdown": "The method **user_pic** embeds untrusted data in generated output with **HttpResponse**, at line **53** of **/badguys/vulnerable/views.py**. This untrusted data is embedded into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the generated web-page.\n\nThe attacker would be able to alter the returned web page by saving malicious data in a data-store ahead of time. The attacker's modified data is then read from the database by the **user_pic** method with **read**, at line **42** of **/badguys/vulnerable/views.py**. This untrusted data then flows through the code straight to the output web page, without sanitization.\u00a0\r\n\r\nThis can enable a Stored Cross-Site Scripting (XSS) attack.\n\n [View in CheckmarxOne](https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=km7phuIZJVcOxgJXWv8%2B45fDR7o%3D)",
            "text": "The method user_pic embeds untrusted data in generated output with HttpResponse, at line 53 of /badguys/vulnerable/views.py. This untrusted data is embedded into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the generated web-page.\n\nThe attacker would be able to alter the returned web page by saving malicious data in a data-store ahead of time. The attacker's modified data is then read from the database by the user_pic method with read, at line 42 of /badguys/vulnerable/views.py. This untrusted data then flows through the code straight to the output web page, without sanitization.\u00a0\r\n\r\nThis can enable a Stored Cross-Site Scripting (XSS) attack.\n\n"
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "properties": {
                    "methodName": "user_pic",
                    "methodLine": 35,
                    "domType": "MethodInvokeExpr",
                    "nodeID": 863,
                    "fullName": "HttpResponse"
                  },
                  "endColumn": 24,
                  "sourceLanguage": "python",
                  "startColumn": 12,
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "badguys/vulnerable/views.py"
                }
              }
            }
          ],
          "properties": {
            "state": "TO_VERIFY",
            "status": "NEW",
            "severity": "CRITICAL",
            "queryID": 346558629760677672,
            "foundAt": "2025-07-02T18:27:00Z",
            "firstScanID": "6c24e7ed-e92b-444c-8c43-4ab34150a46f",
            "firstFoundAt": "2025-07-02T18:27:00Z",
            "cweID": 79,
            "cvssScore": 9.4203,
            "confidenceLevel": 0,
            "compliances": [
              "OWASP Top 10 2017",
              "Top Tier",
              "PCI DSS v4.0",
              "ASA Premium",
              "CWE top 25",
              "OWASP Top 10 2013",
              "NIST SP 800-53",
              "PCI DSS v3.2.1",
              "SANS top 25",
              "ASD STIG 6.1",
              "MOIS(KISA) Secure Coding 2021",
              "FISMA 2014",
              "OWASP Top 10 2021",
              "OWASP ASVS",
              "Base Preset"
            ]
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 790,
                              "fullName": "read"
                            },
                            "endColumn": 66,
                            "sourceLanguage": "python",
                            "startColumn": 62,
                            "startLine": 42
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "UnknownReference",
                              "nodeID": 793,
                              "fullName": "CxPYNS_96a6ad9b.user_pic.data"
                            },
                            "endColumn": 13,
                            "sourceLanguage": "python",
                            "startColumn": 9,
                            "startLine": 42
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "UnknownReference",
                              "nodeID": 867,
                              "fullName": "CxPYNS_96a6ad9b.user_pic.data"
                            },
                            "endColumn": 29,
                            "sourceLanguage": "python",
                            "startColumn": 25,
                            "startLine": 53
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 863,
                              "fullName": "HttpResponse"
                            },
                            "endColumn": 24,
                            "sourceLanguage": "python",
                            "startColumn": 12,
                            "startLine": 53
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=km7phuIZJVcOxgJXWv8%2B45fDR7o%3D",
          "partialFingerprints": {
            "similarityID": "671443671",
            "queryKey": "Python_Critical_Risk.Stored_XSS",
            "nodeFilePathsSha256": "1054704a903b52190732867789c7b0ed2b0e65f581f72f48576c496dabc4fea7"
          },
          "ruleId": "Python_Critical_Risk.Stored_XSS"
        },
        {
          "message": {
            "markdown": "The application's\u00a0**code_execution** method receives and\u00a0dynamically executes user-controlled code using\u00a0**exec**,\u00a0at line **76** of **/badguys/vulnerable/views.py**. This could enable an attacker to inject and run arbitrary code.\n\nThe attacker can inject the executed code via user input,\u00a0**POST**, which is retrieved by the application in the **code_execution** method, at line **68** of **/badguys/vulnerable/views.py**.\n\n [View in CheckmarxOne](https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=BFVmNn4YjisxSUK6NKkd9feIi3k%3D)",
            "text": "The application's\u00a0code_execution method receives and\u00a0dynamically executes user-controlled code using\u00a0exec,\u00a0at line 76 of /badguys/vulnerable/views.py. This could enable an attacker to inject and run arbitrary code.\n\nThe attacker can inject the executed code via user input,\u00a0POST, which is retrieved by the application in the code_execution method, at line 68 of /badguys/vulnerable/views.py.\n\n"
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "properties": {
                    "methodName": "code_execution",
                    "methodLine": 56,
                    "domType": "MethodInvokeExpr",
                    "nodeID": 1015,
                    "fullName": "exec"
                  },
                  "endColumn": 21,
                  "sourceLanguage": "python",
                  "startColumn": 17,
                  "startLine": 76
                },
                "artifactLocation": {
                  "uri": "badguys/vulnerable/views.py"
                }
              }
            }
          ],
          "properties": {
            "state": "TO_VERIFY",
            "status": "NEW",
            "severity": "CRITICAL",
            "queryID": 13646819717326216658,
            "foundAt": "2025-07-02T18:27:00Z",
            "firstScanID": "6c24e7ed-e92b-444c-8c43-4ab34150a46f",
            "firstFoundAt": "2025-07-02T18:27:00Z",
            "cweID": 94,
            "cvssScore": 9.1304,
            "confidenceLevel": 0,
            "compliances": [
              "MOIS(KISA) Secure Coding 2021",
              "OWASP Top 10 2013",
              "SANS top 25",
              "ASA Premium",
              "Top Tier",
              "PCI DSS v4.0",
              "FISMA 2014",
              "OWASP ASVS",
              "OWASP Top 10 2021",
              "NIST SP 800-53",
              "PCI DSS v3.2.1",
              "ASD STIG 6.1",
              "CWE top 25"
            ]
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "MemberAccess",
                              "nodeID": 963,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.request.POST"
                            },
                            "endColumn": 34,
                            "sourceLanguage": "python",
                            "startColumn": 30,
                            "startLine": 68
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 966,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.request.POST.get"
                            },
                            "endColumn": 38,
                            "sourceLanguage": "python",
                            "startColumn": 35,
                            "startLine": 68
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "UnknownReference",
                              "nodeID": 973,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.first_name"
                            },
                            "endColumn": 19,
                            "sourceLanguage": "python",
                            "startColumn": 9,
                            "startLine": 68
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "UnknownReference",
                              "nodeID": 1026,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.first_name"
                            },
                            "endColumn": 52,
                            "sourceLanguage": "python",
                            "startColumn": 42,
                            "startLine": 76
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 1022,
                              "fullName": "base64.decodestring"
                            },
                            "endColumn": 41,
                            "sourceLanguage": "python",
                            "startColumn": 29,
                            "startLine": 76
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 1015,
                              "fullName": "exec"
                            },
                            "endColumn": 21,
                            "sourceLanguage": "python",
                            "startColumn": 17,
                            "startLine": 76
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=BFVmNn4YjisxSUK6NKkd9feIi3k%3D",
          "partialFingerprints": {
            "similarityID": "2094426463",
            "queryKey": "Python_Critical_Risk.Code_Injection",
            "nodeFilePathsSha256": "00ae58dff6e407be32281f894d806fd9c751f29b9ac74def689d32f9d35103fe"
          },
          "ruleId": "Python_Critical_Risk.Code_Injection"
        },
        {
          "message": {
            "markdown": "The application's\u00a0**code_execution** method receives and\u00a0dynamically executes user-controlled code using\u00a0**exec**,\u00a0at line **72** of **/badguys/vulnerable/views.py**. This could enable an attacker to inject and run arbitrary code.\n\nThe attacker can inject the executed code via user input,\u00a0**POST**, which is retrieved by the application in the **code_execution** method, at line **68** of **/badguys/vulnerable/views.py**.\n\n [View in CheckmarxOne](https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=7PbK7y79hfavzX53tYAKtmP7HcU%3D)",
            "text": "The application's\u00a0code_execution method receives and\u00a0dynamically executes user-controlled code using\u00a0exec,\u00a0at line 72 of /badguys/vulnerable/views.py. This could enable an attacker to inject and run arbitrary code.\n\nThe attacker can inject the executed code via user input,\u00a0POST, which is retrieved by the application in the code_execution method, at line 68 of /badguys/vulnerable/views.py.\n\n"
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "properties": {
                    "methodName": "code_execution",
                    "methodLine": 56,
                    "domType": "MethodInvokeExpr",
                    "nodeID": 981,
                    "fullName": "exec"
                  },
                  "endColumn": 17,
                  "sourceLanguage": "python",
                  "startColumn": 13,
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "badguys/vulnerable/views.py"
                }
              }
            }
          ],
          "properties": {
            "state": "TO_VERIFY",
            "status": "NEW",
            "severity": "CRITICAL",
            "queryID": 13646819717326216658,
            "foundAt": "2025-07-02T18:27:00Z",
            "firstScanID": "6c24e7ed-e92b-444c-8c43-4ab34150a46f",
            "firstFoundAt": "2025-07-02T18:27:00Z",
            "cweID": 94,
            "cvssScore": 9.1304,
            "confidenceLevel": 0,
            "compliances": [
              "MOIS(KISA) Secure Coding 2021",
              "OWASP Top 10 2013",
              "SANS top 25",
              "ASA Premium",
              "Top Tier",
              "PCI DSS v4.0",
              "FISMA 2014",
              "OWASP ASVS",
              "OWASP Top 10 2021",
              "NIST SP 800-53",
              "PCI DSS v3.2.1",
              "ASD STIG 6.1",
              "CWE top 25"
            ]
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "MemberAccess",
                              "nodeID": 963,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.request.POST"
                            },
                            "endColumn": 34,
                            "sourceLanguage": "python",
                            "startColumn": 30,
                            "startLine": 68
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 966,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.request.POST.get"
                            },
                            "endColumn": 38,
                            "sourceLanguage": "python",
                            "startColumn": 35,
                            "startLine": 68
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "UnknownReference",
                              "nodeID": 973,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.first_name"
                            },
                            "endColumn": 19,
                            "sourceLanguage": "python",
                            "startColumn": 9,
                            "startLine": 68
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "UnknownReference",
                              "nodeID": 998,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.first_name"
                            },
                            "endColumn": 54,
                            "sourceLanguage": "python",
                            "startColumn": 44,
                            "startLine": 72
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 994,
                              "fullName": "bytes"
                            },
                            "endColumn": 43,
                            "sourceLanguage": "python",
                            "startColumn": 38,
                            "startLine": 72
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 988,
                              "fullName": "base64.decodestring"
                            },
                            "endColumn": 37,
                            "sourceLanguage": "python",
                            "startColumn": 25,
                            "startLine": 72
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 981,
                              "fullName": "exec"
                            },
                            "endColumn": 17,
                            "sourceLanguage": "python",
                            "startColumn": 13,
                            "startLine": 72
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=7PbK7y79hfavzX53tYAKtmP7HcU%3D",
          "partialFingerprints": {
            "similarityID": "1765596350",
            "queryKey": "Python_Critical_Risk.Code_Injection",
            "nodeFilePathsSha256": "dc147e72a7505364e9e0ced5af98e81046a36894e4c12cb8c1bc5b9d23fbc354"
          },
          "ruleId": "Python_Critical_Risk.Code_Injection"
        },
        {
          "message": {
            "markdown": "The method **user_pic** embeds untrusted data in generated output with **HttpResponse**, at line **53** of **/badguys/vulnerable/views.py**. This untrusted data is embedded into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the generated web-page.\n\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input **request**, which is read by the **user_pic** method at line **35** of **/badguys/vulnerable/views.py**. This input then flows through the code straight to the output web page, without sanitization.\u00a0\r\n\r\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n\n [View in CheckmarxOne](https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=WybEom%2FXBaMyyGEVCcpXa4N%2FD78%3D)",
            "text": "The method user_pic embeds untrusted data in generated output with HttpResponse, at line 53 of /badguys/vulnerable/views.py. This untrusted data is embedded into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the generated web-page.\n\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input request, which is read by the user_pic method at line 35 of /badguys/vulnerable/views.py. This input then flows through the code straight to the output web page, without sanitization.\u00a0\r\n\r\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n\n"
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "properties": {
                    "methodName": "user_pic",
                    "methodLine": 35,
                    "domType": "MethodInvokeExpr",
                    "nodeID": 863,
                    "fullName": "HttpResponse"
                  },
                  "endColumn": 24,
                  "sourceLanguage": "python",
                  "startColumn": 12,
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "badguys/vulnerable/views.py"
                }
              }
            }
          ],
          "properties": {
            "state": "TO_VERIFY",
            "status": "NEW",
            "severity": "HIGH",
            "queryID": 11301225196674651062,
            "foundAt": "2025-07-02T18:27:00Z",
            "firstScanID": "6c24e7ed-e92b-444c-8c43-4ab34150a46f",
            "firstFoundAt": "2025-07-02T18:27:00Z",
            "cweID": 79,
            "cvssScore": 7,
            "confidenceLevel": 0,
            "compliances": [
              "OWASP Top 10 2013",
              "FISMA 2014",
              "SANS top 25",
              "NIST SP 800-53",
              "OWASP ASVS",
              "OWASP Top 10 2021",
              "PCI DSS v3.2.1",
              "ASD STIG 6.1",
              "CWE top 25",
              "Top Tier",
              "ASA Premium",
              "MOIS(KISA) Secure Coding 2021",
              "OWASP Top 10 2017",
              "PCI DSS v4.0"
            ]
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "ParamDecl",
                              "nodeID": 880,
                              "fullName": "CxPYNS_96a6ad9b.user_pic.request"
                            },
                            "endColumn": 21,
                            "sourceLanguage": "python",
                            "startColumn": 14,
                            "startLine": 35
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "UnknownReference",
                              "nodeID": 753,
                              "fullName": "CxPYNS_96a6ad9b.user_pic.request"
                            },
                            "endColumn": 23,
                            "sourceLanguage": "python",
                            "startColumn": 16,
                            "startLine": 39
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "MemberAccess",
                              "nodeID": 754,
                              "fullName": "CxPYNS_96a6ad9b.user_pic.request.GET"
                            },
                            "endColumn": 27,
                            "sourceLanguage": "python",
                            "startColumn": 24,
                            "startLine": 39
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 757,
                              "fullName": "CxPYNS_96a6ad9b.user_pic.request.GET.get"
                            },
                            "endColumn": 31,
                            "sourceLanguage": "python",
                            "startColumn": 28,
                            "startLine": 39
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "UnknownReference",
                              "nodeID": 762,
                              "fullName": "CxPYNS_96a6ad9b.user_pic.filename"
                            },
                            "endColumn": 13,
                            "sourceLanguage": "python",
                            "startColumn": 5,
                            "startLine": 39
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "UnknownReference",
                              "nodeID": 878,
                              "fullName": "CxPYNS_96a6ad9b.user_pic.filename"
                            },
                            "endColumn": 73,
                            "sourceLanguage": "python",
                            "startColumn": 65,
                            "startLine": 53
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 874,
                              "fullName": "mimetypes.guess_type"
                            },
                            "endColumn": 64,
                            "sourceLanguage": "python",
                            "startColumn": 54,
                            "startLine": 53
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 863,
                              "fullName": "HttpResponse"
                            },
                            "endColumn": 24,
                            "sourceLanguage": "python",
                            "startColumn": 12,
                            "startLine": 53
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=WybEom%2FXBaMyyGEVCcpXa4N%2FD78%3D",
          "partialFingerprints": {
            "similarityID": "-1038673593",
            "queryKey": "Python_High_Risk.Reflected_XSS",
            "nodeFilePathsSha256": "6eb0e90aed97d4fabeee3b719d5b1b2cd181780c7c6268668d56bffe271c80d9"
          },
          "ruleId": "Python_High_Risk.Reflected_XSS"
        },
        {
          "message": {
            "markdown": "Method **user_pic** at line **39** of **/badguys/vulnerable/views.py** gets dynamic data from the **GET** element. This element\u2019s value then flows through the code and is eventually used in a file path for local disk access in **user_pic** at line **42** of **/badguys/vulnerable/views.py**. This may cause a Path Traversal vulnerability.\n\n [View in CheckmarxOne](https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=KVXdo7td2%2BUIK0%2BwWlZpiHChLxI%3D)",
            "text": "Method user_pic at line 39 of /badguys/vulnerable/views.py gets dynamic data from the GET element. This element\u2019s value then flows through the code and is eventually used in a file path for local disk access in user_pic at line 42 of /badguys/vulnerable/views.py. This may cause a Path Traversal vulnerability.\n\n"
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "properties": {
                    "methodName": "user_pic",
                    "methodLine": 35,
                    "domType": "MethodInvokeExpr",
                    "nodeID": 869,
                    "fullName": "open"
                  },
                  "endColumn": 20,
                  "sourceLanguage": "python",
                  "startColumn": 16,
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "badguys/vulnerable/views.py"
                }
              }
            }
          ],
          "properties": {
            "state": "TO_VERIFY",
            "status": "NEW",
            "severity": "HIGH",
            "queryID": 4418167693267818286,
            "foundAt": "2025-07-02T18:27:00Z",
            "firstScanID": "a2489392-6561-4db6-adab-35eaafc0e267",
            "firstFoundAt": "2025-07-02T18:27:00Z",
            "cweID": 22,
            "cvssScore": 7.5362,
            "confidenceLevel": 0,
            "compliances": [
              "OWASP ASVS",
              "MOIS(KISA) Secure Coding 2021",
              "Top Tier",
              "OWASP Top 10 2017",
              "CWE top 25",
              "OWASP Top 10 2021",
              "PCI DSS v4.0",
              "SANS top 25",
              "ASA Premium",
              "Base Preset",
              "PCI DSS v3.2.1"
            ]
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "MemberAccess",
                              "nodeID": 852,
                              "fullName": "CxPYNS_96a6ad9b.user_pic.request.GET"
                            },
                            "endColumn": 27,
                            "sourceLanguage": "python",
                            "startColumn": 24,
                            "startLine": 39
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 855,
                              "fullName": "CxPYNS_96a6ad9b.user_pic.request.GET.get"
                            },
                            "endColumn": 31,
                            "sourceLanguage": "python",
                            "startColumn": 28,
                            "startLine": 39
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "UnknownReference",
                              "nodeID": 860,
                              "fullName": "CxPYNS_96a6ad9b.user_pic.filename"
                            },
                            "endColumn": 13,
                            "sourceLanguage": "python",
                            "startColumn": 5,
                            "startLine": 39
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "UnknownReference",
                              "nodeID": 883,
                              "fullName": "CxPYNS_96a6ad9b.user_pic.filename"
                            },
                            "endColumn": 53,
                            "sourceLanguage": "python",
                            "startColumn": 45,
                            "startLine": 42
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 877,
                              "fullName": "os.path.join"
                            },
                            "endColumn": 33,
                            "sourceLanguage": "python",
                            "startColumn": 29,
                            "startLine": 42
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 869,
                              "fullName": "open"
                            },
                            "endColumn": 20,
                            "sourceLanguage": "python",
                            "startColumn": 16,
                            "startLine": 42
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=KVXdo7td2%2BUIK0%2BwWlZpiHChLxI%3D",
          "partialFingerprints": {
            "similarityID": "-1069850681",
            "queryKey": "Python_High_Risk.Path_Traversal",
            "nodeFilePathsSha256": "00ae58dff6e407be32281f894d806fd9c751f29b9ac74def689d32f9d35103fe"
          },
          "ruleId": "Python_High_Risk.Path_Traversal"
        },
        {
          "message": {
            "markdown": "The application source code includes **true**, in line **10** of **/badguys/settings.py**, which was left from development and debugging, and is not part of the intended application functionality. [View in CheckmarxOne](https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=la2hh1xFNtoOjucLUA1YZG%2BZZvo%3D)",
            "text": "The application source code includes true, in line 10 of /badguys/settings.py, which was left from development and debugging, and is not part of the intended application functionality."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "properties": {
                    "methodName": null,
                    "methodLine": 10,
                    "domType": "UnknownReference",
                    "nodeID": 3923,
                    "fullName": "CxPYNS_e5742d14.DEBUG"
                  },
                  "endColumn": 6,
                  "sourceLanguage": "python",
                  "startColumn": 1,
                  "startLine": 10
                },
                "artifactLocation": {
                  "uri": "badguys/settings.py"
                }
              }
            }
          ],
          "properties": {
            "state": "TO_VERIFY",
            "status": "NEW",
            "severity": "HIGH",
            "queryID": 15910406614565918143,
            "foundAt": "2025-07-02T18:27:00Z",
            "firstScanID": "a65a7cee-76a6-4389-976a-a07fec66c8e2",
            "firstFoundAt": "2025-07-02T18:27:00Z",
            "cweID": 489,
            "cvssScore": 7.6812,
            "confidenceLevel": 0,
            "compliances": [
              "NIST SP 800-53",
              "OWASP Top 10 2017",
              "PCI DSS v4.0",
              "FISMA 2014",
              "MOIS(KISA) Secure Coding 2021"
            ]
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": null,
                              "methodLine": 10,
                              "domType": "BooleanLiteral",
                              "nodeID": 3922,
                              "fullName": "true"
                            },
                            "endColumn": 13,
                            "sourceLanguage": "python",
                            "startColumn": 9,
                            "startLine": 10
                          },
                          "artifactLocation": {
                            "uri": "badguys/settings.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": null,
                              "methodLine": 10,
                              "domType": "UnknownReference",
                              "nodeID": 3923,
                              "fullName": "CxPYNS_e5742d14.DEBUG"
                            },
                            "endColumn": 6,
                            "sourceLanguage": "python",
                            "startColumn": 1,
                            "startLine": 10
                          },
                          "artifactLocation": {
                            "uri": "badguys/settings.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=la2hh1xFNtoOjucLUA1YZG%2BZZvo%3D",
          "partialFingerprints": {
            "similarityID": "-1120528780",
            "queryKey": "Python_High_Risk.Debug_Enabled",
            "nodeFilePathsSha256": "36ff490940cf5414e46272d81ec4eeffe36432344edacdaf2c96b69e8e64d10c"
          },
          "ruleId": "Python_High_Risk.Debug_Enabled"
        },
        {
          "message": {
            "markdown": "The application uses the hard-coded password **\"h++jszpm)i@p%ay_b=cp#()^od!qns14)h%@qm3)p=cuo+st^a\"** for authentication purposes, either using it to verify users' identities, or to access another remote system. This password at line **90** of **/badguys/settings.py** appears in the code, implying it is accessible to anyone with source code access, and cannot be changed without rebuilding\u00a0the application. [View in CheckmarxOne](https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=kCgtUIcgA15oGP68WTAqflXtcSc%3D)",
            "text": "The application uses the hard-coded password \"h++jszpm)i@p%ay_b=cp#()^od!qns14)h%@qm3)p=cuo+st^a\" for authentication purposes, either using it to verify users' identities, or to access another remote system. This password at line 90 of /badguys/settings.py appears in the code, implying it is accessible to anyone with source code access, and cannot be changed without rebuilding\u00a0the application."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "properties": {
                    "methodName": null,
                    "methodLine": 90,
                    "domType": "StringLiteral",
                    "nodeID": 3342,
                    "fullName": "\"h++jszpm)i@p%ay_b=cp#()^od!qns14)h%@qm3)p=cuo+st^a\""
                  },
                  "endColumn": 66,
                  "sourceLanguage": "python",
                  "startColumn": 14,
                  "startLine": 90
                },
                "artifactLocation": {
                  "uri": "badguys/settings.py"
                }
              }
            }
          ],
          "properties": {
            "state": "TO_VERIFY",
            "status": "NEW",
            "severity": "MEDIUM",
            "queryID": 10308959669028119927,
            "foundAt": "2025-07-02T18:27:00Z",
            "firstScanID": "6c24e7ed-e92b-444c-8c43-4ab34150a46f",
            "firstFoundAt": "2025-07-02T18:27:00Z",
            "cweID": 259,
            "cvssScore": 5.5072,
            "confidenceLevel": 0,
            "compliances": [
              "OWASP ASVS",
              "OWASP Top 10 API",
              "SANS top 25",
              "ASA Premium",
              "ASD STIG 6.1",
              "FISMA 2014",
              "OWASP Top 10 2021",
              "PCI DSS v4.0",
              "CWE top 25",
              "MOIS(KISA) Secure Coding 2021",
              "NIST SP 800-53"
            ]
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": null,
                              "methodLine": 90,
                              "domType": "StringLiteral",
                              "nodeID": 3342,
                              "fullName": "\"h++jszpm)i@p%ay_b=cp#()^od!qns14)h%@qm3)p=cuo+st^a\""
                            },
                            "endColumn": 66,
                            "sourceLanguage": "python",
                            "startColumn": 14,
                            "startLine": 90
                          },
                          "artifactLocation": {
                            "uri": "badguys/settings.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=kCgtUIcgA15oGP68WTAqflXtcSc%3D",
          "partialFingerprints": {
            "similarityID": "-2056718301",
            "queryKey": "Python_Medium_Threat.Use_Of_Hardcoded_Password",
            "nodeFilePathsSha256": "5cf79a6eb63854f43a84097b2e3f318d8390c35de85e2089c33a3968b705ae98"
          },
          "ruleId": "Python_Medium_Threat.Use_Of_Hardcoded_Password"
        },
        {
          "message": {
            "markdown": "The variable\u00a0**\"h++jszpm)i@p%ay_b=cp#()^od!qns14)h%@qm3)p=cuo+st^a\"** at line **90** of **/badguys/settings.py** is assigned a hardcoded, literal value. This static value is used as an encryption key.\n\n [View in CheckmarxOne](https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=HtOzeqYBPaNQaUXDe6gBHCx6y14%3D)",
            "text": "The variable\u00a0\"h++jszpm)i@p%ay_b=cp#()^od!qns14)h%@qm3)p=cuo+st^a\" at line 90 of /badguys/settings.py is assigned a hardcoded, literal value. This static value is used as an encryption key.\n\n"
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "properties": {
                    "methodName": null,
                    "methodLine": 90,
                    "domType": "StringLiteral",
                    "nodeID": 4041,
                    "fullName": "\"h++jszpm)i@p%ay_b=cp#()^od!qns14)h%@qm3)p=cuo+st^a\""
                  },
                  "endColumn": 66,
                  "sourceLanguage": "python",
                  "startColumn": 14,
                  "startLine": 90
                },
                "artifactLocation": {
                  "uri": "badguys/settings.py"
                }
              }
            }
          ],
          "properties": {
            "state": "TO_VERIFY",
            "status": "NEW",
            "severity": "MEDIUM",
            "queryID": 17125041041096276150,
            "foundAt": "2025-07-02T18:27:00Z",
            "firstScanID": "a65a7cee-76a6-4389-976a-a07fec66c8e2",
            "firstFoundAt": "2025-07-02T18:27:00Z",
            "cweID": 321,
            "cvssScore": 5.7971,
            "confidenceLevel": 0,
            "compliances": [
              "OWASP ASVS",
              "OWASP Top 10 2021",
              "PCI DSS v4.0",
              "SANS top 25",
              "CWE top 25",
              "MOIS(KISA) Secure Coding 2021"
            ]
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": null,
                              "methodLine": 90,
                              "domType": "StringLiteral",
                              "nodeID": 4041,
                              "fullName": "\"h++jszpm)i@p%ay_b=cp#()^od!qns14)h%@qm3)p=cuo+st^a\""
                            },
                            "endColumn": 66,
                            "sourceLanguage": "python",
                            "startColumn": 14,
                            "startLine": 90
                          },
                          "artifactLocation": {
                            "uri": "badguys/settings.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=HtOzeqYBPaNQaUXDe6gBHCx6y14%3D",
          "partialFingerprints": {
            "similarityID": "505872087",
            "queryKey": "Python_Medium_Threat.Use_of_Hardcoded_Cryptographic_Key",
            "nodeFilePathsSha256": "5cf79a6eb63854f43a84097b2e3f318d8390c35de85e2089c33a3968b705ae98"
          },
          "ruleId": "Python_Medium_Threat.Use_of_Hardcoded_Cryptographic_Key"
        },
        {
          "message": {
            "markdown": "A cookie was generated and sent to the client in file **/badguys/settings.py** in line\u00a0**1**, secure attribute is missing. A cookie without a secure flag may be transmitted over a plain-text connection, potentially exposing it to anyone observing this channel.\n\n [View in CheckmarxOne](https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=QcGKTcisO72v1lUhQopK0fcrJg0%3D)",
            "text": "A cookie was generated and sent to the client in file /badguys/settings.py in line\u00a01, secure attribute is missing. A cookie without a secure flag may be transmitted over a plain-text connection, potentially exposing it to anyone observing this channel.\n\n"
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "properties": {
                    "methodName": null,
                    "methodLine": 1,
                    "domType": "NamespaceDecl",
                    "nodeID": 3610,
                    "fullName": "CxPYNS_e5742d14"
                  },
                  "sourceLanguage": "python",
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "badguys/settings.py"
                }
              }
            }
          ],
          "properties": {
            "state": "TO_VERIFY",
            "status": "NEW",
            "severity": "MEDIUM",
            "queryID": 13728294608634614396,
            "foundAt": "2025-07-02T18:27:00Z",
            "firstScanID": "a65a7cee-76a6-4389-976a-a07fec66c8e2",
            "firstFoundAt": "2025-07-02T18:27:00Z",
            "cweID": 614,
            "cvssScore": 5,
            "confidenceLevel": 0,
            "compliances": [
              "ASD STIG 6.1",
              "OWASP ASVS",
              "PCI DSS v4.0"
            ]
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": null,
                              "methodLine": 1,
                              "domType": "NamespaceDecl",
                              "nodeID": 3610,
                              "fullName": "CxPYNS_e5742d14"
                            },
                            "sourceLanguage": "python",
                            "startColumn": 1,
                            "startLine": 1
                          },
                          "artifactLocation": {
                            "uri": "badguys/settings.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=QcGKTcisO72v1lUhQopK0fcrJg0%3D",
          "partialFingerprints": {
            "similarityID": "-829076369",
            "queryKey": "Python_Medium_Threat.Secure_Cookie_Flag_Not_Set_In_Config",
            "nodeFilePathsSha256": "5cf79a6eb63854f43a84097b2e3f318d8390c35de85e2089c33a3968b705ae98"
          },
          "ruleId": "Python_Medium_Threat.Secure_Cookie_Flag_Not_Set_In_Config"
        },
        {
          "message": {
            "markdown": "The potentially tainted value provided by\u00a0**GET** in\u00a0**/badguys/vulnerable/views.py** at line **177** is used as a destination URL by **redirect** in **/badguys/vulnerable/views.py** at line **178**, potentially allowing attackers to perform an open redirection.\n\n [View in CheckmarxOne](https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=sFfdXDYWmkLunlb9JF8KmdgKbj4%3D)",
            "text": "The potentially tainted value provided by\u00a0GET in\u00a0/badguys/vulnerable/views.py at line 177 is used as a destination URL by redirect in /badguys/vulnerable/views.py at line 178, potentially allowing attackers to perform an open redirection.\n\n"
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "properties": {
                    "methodName": "unvalidated_redirect",
                    "methodLine": 176,
                    "domType": "MethodInvokeExpr",
                    "nodeID": 1655,
                    "fullName": "redirect"
                  },
                  "endColumn": 20,
                  "sourceLanguage": "python",
                  "startColumn": 12,
                  "startLine": 178
                },
                "artifactLocation": {
                  "uri": "badguys/vulnerable/views.py"
                }
              }
            }
          ],
          "properties": {
            "state": "TO_VERIFY",
            "status": "NEW",
            "severity": "MEDIUM",
            "queryID": 11971208775240962660,
            "foundAt": "2025-07-02T18:27:00Z",
            "firstScanID": "6c24e7ed-e92b-444c-8c43-4ab34150a46f",
            "firstFoundAt": "2025-07-02T18:27:00Z",
            "cweID": 601,
            "cvssScore": 6.6667,
            "confidenceLevel": 0,
            "compliances": [
              "OWASP Top 10 API 2023",
              "ASA Premium",
              "NIST SP 800-53",
              "OWASP Top 10 2017",
              "ASD STIG 6.1",
              "OWASP ASVS",
              "FISMA 2014",
              "PCI DSS v3.2.1",
              "PCI DSS v4.0",
              "MOIS(KISA) Secure Coding 2021",
              "OWASP Top 10 2021"
            ]
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "unvalidated_redirect",
                              "methodLine": 176,
                              "domType": "MemberAccess",
                              "nodeID": 1643,
                              "fullName": "CxPYNS_96a6ad9b.unvalidated_redirect.request.GET"
                            },
                            "endColumn": 22,
                            "sourceLanguage": "python",
                            "startColumn": 19,
                            "startLine": 177
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "unvalidated_redirect",
                              "methodLine": 176,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 1646,
                              "fullName": "CxPYNS_96a6ad9b.unvalidated_redirect.request.GET.get"
                            },
                            "endColumn": 26,
                            "sourceLanguage": "python",
                            "startColumn": 23,
                            "startLine": 177
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "unvalidated_redirect",
                              "methodLine": 176,
                              "domType": "UnknownReference",
                              "nodeID": 1651,
                              "fullName": "CxPYNS_96a6ad9b.unvalidated_redirect.url"
                            },
                            "endColumn": 8,
                            "sourceLanguage": "python",
                            "startColumn": 5,
                            "startLine": 177
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "unvalidated_redirect",
                              "methodLine": 176,
                              "domType": "UnknownReference",
                              "nodeID": 1659,
                              "fullName": "CxPYNS_96a6ad9b.unvalidated_redirect.url"
                            },
                            "endColumn": 24,
                            "sourceLanguage": "python",
                            "startColumn": 21,
                            "startLine": 178
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "unvalidated_redirect",
                              "methodLine": 176,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 1655,
                              "fullName": "redirect"
                            },
                            "endColumn": 20,
                            "sourceLanguage": "python",
                            "startColumn": 12,
                            "startLine": 178
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=sFfdXDYWmkLunlb9JF8KmdgKbj4%3D",
          "partialFingerprints": {
            "similarityID": "1923217012",
            "queryKey": "Python_Medium_Threat.Open_Redirect",
            "nodeFilePathsSha256": "d9eea2344b445c7cb568bf446126a07aceb12f402d013b96c288e486ff1d3bc6"
          },
          "ruleId": "Python_Medium_Threat.Open_Redirect"
        },
        {
          "message": {
            "markdown": "The web-application does not define an HSTS header, leaving it vulnerable to attack.\n\n [View in CheckmarxOne](https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=XpbwMP1Pb0OUG1rPCvwe%2BnvRBXw%3D)",
            "text": "The web-application does not define an HSTS header, leaving it vulnerable to attack.\n\n"
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "properties": {
                    "methodName": null,
                    "methodLine": 1,
                    "domType": "NamespaceDecl",
                    "nodeID": 2911,
                    "fullName": "CxPYNS_e5742d14"
                  },
                  "sourceLanguage": "python",
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "badguys/settings.py"
                }
              }
            }
          ],
          "properties": {
            "state": "TO_VERIFY",
            "status": "NEW",
            "severity": "MEDIUM",
            "queryID": 7929843929890808532,
            "foundAt": "2025-07-02T18:27:00Z",
            "firstScanID": "6c24e7ed-e92b-444c-8c43-4ab34150a46f",
            "firstFoundAt": "2025-07-02T18:27:00Z",
            "cweID": 346,
            "cvssScore": 4.9275,
            "confidenceLevel": 0,
            "compliances": [
              "PCI DSS v4.0",
              "ASA Premium",
              "OWASP ASVS",
              "OWASP Top 10 2021",
              "OWASP Top 10 API 2023"
            ]
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": null,
                              "methodLine": 1,
                              "domType": "NamespaceDecl",
                              "nodeID": 2911,
                              "fullName": "CxPYNS_e5742d14"
                            },
                            "sourceLanguage": "python",
                            "startColumn": 1,
                            "startLine": 1
                          },
                          "artifactLocation": {
                            "uri": "badguys/settings.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=XpbwMP1Pb0OUG1rPCvwe%2BnvRBXw%3D",
          "partialFingerprints": {
            "similarityID": "1989311441",
            "queryKey": "Python_Medium_Threat.Missing_HSTS_Header",
            "nodeFilePathsSha256": "5cf79a6eb63854f43a84097b2e3f318d8390c35de85e2089c33a3968b705ae98"
          },
          "ruleId": "Python_Medium_Threat.Missing_HSTS_Header"
        },
        {
          "message": {
            "markdown": "Line **35** flags a method or annotation that could be a potential unauthorized access to object available in the corresponding controller.\n\nThis query is looking for possible flaws in Spring-Security configuration, so only projects that use Spring-Security are considered. [View in CheckmarxOne](https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=LdWwrUU59SrbbPVrEdRCJ2FtReI%3D)",
            "text": "Line 35 flags a method or annotation that could be a potential unauthorized access to object available in the corresponding controller.\n\nThis query is looking for possible flaws in Spring-Security configuration, so only projects that use Spring-Security are considered."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "properties": {
                    "methodName": "user_pic",
                    "methodLine": 35,
                    "domType": "MethodDecl",
                    "nodeID": 789,
                    "fullName": "CxPYNS_96a6ad9b.user_pic"
                  },
                  "endColumn": 13,
                  "sourceLanguage": "python",
                  "startColumn": 5,
                  "startLine": 35
                },
                "artifactLocation": {
                  "uri": "badguys/vulnerable/views.py"
                }
              }
            }
          ],
          "properties": {
            "state": "TO_VERIFY",
            "status": "NEW",
            "severity": "MEDIUM",
            "queryID": 9932158522616364323,
            "foundAt": "2025-07-02T18:27:00Z",
            "firstScanID": "a65a7cee-76a6-4389-976a-a07fec66c8e2",
            "firstFoundAt": "2025-07-02T18:27:00Z",
            "cweID": 862,
            "cvssScore": 5.3623,
            "confidenceLevel": 0,
            "compliances": [
              "OWASP Top 10 2021",
              "OWASP Top 10 API",
              "ASD STIG 6.1",
              "CWE top 25",
              "MOIS(KISA) Secure Coding 2021",
              "OWASP ASVS"
            ]
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "user_pic",
                              "methodLine": 35,
                              "domType": "MethodDecl",
                              "nodeID": 789,
                              "fullName": "CxPYNS_96a6ad9b.user_pic"
                            },
                            "endColumn": 13,
                            "sourceLanguage": "python",
                            "startColumn": 5,
                            "startLine": 35
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=LdWwrUU59SrbbPVrEdRCJ2FtReI%3D",
          "partialFingerprints": {
            "similarityID": "-61154366",
            "queryKey": "Python_Medium_Threat.Django_Missing_Function_Level_Authorization",
            "nodeFilePathsSha256": "f0b6e87a13552f59431ed8af2638cc4f3111b124517b42d27db2bb9fb10338c2"
          },
          "ruleId": "Python_Medium_Threat.Django_Missing_Function_Level_Authorization"
        },
        {
          "message": {
            "markdown": "An argument is passed to an external OS command by **exec** at **/badguys/vulnerable/views.py** in line **72**. This could allow an attacker to attack the external program by injecting malicious arguments into its execution.\n\nThe argument is provided by user input at **request** at **/badguys/vulnerable/views.py** in line **56**.\n\n [View in CheckmarxOne](https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=mRT5jt4pV3UZI19VErdyrvupi3Y%3D)",
            "text": "An argument is passed to an external OS command by exec at /badguys/vulnerable/views.py in line 72. This could allow an attacker to attack the external program by injecting malicious arguments into its execution.\n\nThe argument is provided by user input at request at /badguys/vulnerable/views.py in line 56.\n\n"
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "properties": {
                    "methodName": "code_execution",
                    "methodLine": 56,
                    "domType": "MethodInvokeExpr",
                    "nodeID": 1079,
                    "fullName": "exec"
                  },
                  "endColumn": 17,
                  "sourceLanguage": "python",
                  "startColumn": 13,
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "badguys/vulnerable/views.py"
                }
              }
            }
          ],
          "properties": {
            "state": "TO_VERIFY",
            "status": "NEW",
            "severity": "MEDIUM",
            "queryID": 16321289430704188843,
            "foundAt": "2025-07-02T18:27:00Z",
            "firstScanID": "a65a7cee-76a6-4389-976a-a07fec66c8e2",
            "firstFoundAt": "2025-07-02T18:27:00Z",
            "cweID": 88,
            "cvssScore": 4.7826,
            "confidenceLevel": 0,
            "compliances": [
              "CWE top 25",
              "MOIS(KISA) Secure Coding 2021",
              "OWASP ASVS",
              "OWASP Top 10 2021",
              "SANS top 25"
            ]
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "ParamDecl",
                              "nodeID": 1201,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.request"
                            },
                            "endColumn": 27,
                            "sourceLanguage": "python",
                            "startColumn": 20,
                            "startLine": 56
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "UnknownReference",
                              "nodeID": 1060,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.request"
                            },
                            "endColumn": 29,
                            "sourceLanguage": "python",
                            "startColumn": 22,
                            "startLine": 68
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "MemberAccess",
                              "nodeID": 1061,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.request.POST"
                            },
                            "endColumn": 34,
                            "sourceLanguage": "python",
                            "startColumn": 30,
                            "startLine": 68
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 1064,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.request.POST.get"
                            },
                            "endColumn": 38,
                            "sourceLanguage": "python",
                            "startColumn": 35,
                            "startLine": 68
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "UnknownReference",
                              "nodeID": 1071,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.first_name"
                            },
                            "endColumn": 19,
                            "sourceLanguage": "python",
                            "startColumn": 9,
                            "startLine": 68
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "UnknownReference",
                              "nodeID": 1096,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.first_name"
                            },
                            "endColumn": 54,
                            "sourceLanguage": "python",
                            "startColumn": 44,
                            "startLine": 72
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 1092,
                              "fullName": "bytes"
                            },
                            "endColumn": 43,
                            "sourceLanguage": "python",
                            "startColumn": 38,
                            "startLine": 72
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 1086,
                              "fullName": "base64.decodestring"
                            },
                            "endColumn": 37,
                            "sourceLanguage": "python",
                            "startColumn": 25,
                            "startLine": 72
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 1079,
                              "fullName": "exec"
                            },
                            "endColumn": 17,
                            "sourceLanguage": "python",
                            "startColumn": 13,
                            "startLine": 72
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=mRT5jt4pV3UZI19VErdyrvupi3Y%3D",
          "partialFingerprints": {
            "similarityID": "-1821492779",
            "queryKey": "Python_Medium_Threat.Command_Argument_Injection",
            "nodeFilePathsSha256": "4f28b215b5383ba6f3b5123e8dc7a385a955e43a5267c56dc44a91affef3ab30"
          },
          "ruleId": "Python_Medium_Threat.Command_Argument_Injection"
        },
        {
          "message": {
            "markdown": "An argument is passed to an external OS command by **exec** at **/badguys/vulnerable/views.py** in line **76**. This could allow an attacker to attack the external program by injecting malicious arguments into its execution.\n\nThe argument is provided by user input at **request** at **/badguys/vulnerable/views.py** in line **56**.\n\n [View in CheckmarxOne](https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=4dgEEItTryswNJqVosBNepfLmRA%3D)",
            "text": "An argument is passed to an external OS command by exec at /badguys/vulnerable/views.py in line 76. This could allow an attacker to attack the external program by injecting malicious arguments into its execution.\n\nThe argument is provided by user input at request at /badguys/vulnerable/views.py in line 56.\n\n"
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "properties": {
                    "methodName": "code_execution",
                    "methodLine": 56,
                    "domType": "MethodInvokeExpr",
                    "nodeID": 1113,
                    "fullName": "exec"
                  },
                  "endColumn": 21,
                  "sourceLanguage": "python",
                  "startColumn": 17,
                  "startLine": 76
                },
                "artifactLocation": {
                  "uri": "badguys/vulnerable/views.py"
                }
              }
            }
          ],
          "properties": {
            "state": "TO_VERIFY",
            "status": "NEW",
            "severity": "MEDIUM",
            "queryID": 16321289430704188843,
            "foundAt": "2025-07-02T18:27:00Z",
            "firstScanID": "a65a7cee-76a6-4389-976a-a07fec66c8e2",
            "firstFoundAt": "2025-07-02T18:27:00Z",
            "cweID": 88,
            "cvssScore": 4.7826,
            "confidenceLevel": 0,
            "compliances": [
              "CWE top 25",
              "MOIS(KISA) Secure Coding 2021",
              "OWASP ASVS",
              "OWASP Top 10 2021",
              "SANS top 25"
            ]
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "ParamDecl",
                              "nodeID": 1201,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.request"
                            },
                            "endColumn": 27,
                            "sourceLanguage": "python",
                            "startColumn": 20,
                            "startLine": 56
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "UnknownReference",
                              "nodeID": 1060,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.request"
                            },
                            "endColumn": 29,
                            "sourceLanguage": "python",
                            "startColumn": 22,
                            "startLine": 68
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "MemberAccess",
                              "nodeID": 1061,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.request.POST"
                            },
                            "endColumn": 34,
                            "sourceLanguage": "python",
                            "startColumn": 30,
                            "startLine": 68
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 1064,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.request.POST.get"
                            },
                            "endColumn": 38,
                            "sourceLanguage": "python",
                            "startColumn": 35,
                            "startLine": 68
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "UnknownReference",
                              "nodeID": 1071,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.first_name"
                            },
                            "endColumn": 19,
                            "sourceLanguage": "python",
                            "startColumn": 9,
                            "startLine": 68
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "UnknownReference",
                              "nodeID": 1124,
                              "fullName": "CxPYNS_96a6ad9b.code_execution.first_name"
                            },
                            "endColumn": 52,
                            "sourceLanguage": "python",
                            "startColumn": 42,
                            "startLine": 76
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 1120,
                              "fullName": "base64.decodestring"
                            },
                            "endColumn": 41,
                            "sourceLanguage": "python",
                            "startColumn": 29,
                            "startLine": 76
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": "code_execution",
                              "methodLine": 56,
                              "domType": "MethodInvokeExpr",
                              "nodeID": 1113,
                              "fullName": "exec"
                            },
                            "endColumn": 21,
                            "sourceLanguage": "python",
                            "startColumn": 17,
                            "startLine": 76
                          },
                          "artifactLocation": {
                            "uri": "badguys/vulnerable/views.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=4dgEEItTryswNJqVosBNepfLmRA%3D",
          "partialFingerprints": {
            "similarityID": "-202882954",
            "queryKey": "Python_Medium_Threat.Command_Argument_Injection",
            "nodeFilePathsSha256": "6eb0e90aed97d4fabeee3b719d5b1b2cd181780c7c6268668d56bffe271c80d9"
          },
          "ruleId": "Python_Medium_Threat.Command_Argument_Injection"
        },
        {
          "message": {
            "markdown": "The application does not protect the\u00a0web page **/badguys/templates/about.html** from clickjacking attacks in legacy browsers, by using framebusting scripts. [View in CheckmarxOne](https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=TeQcYkZyTekLrU6IqRMekcFbANs%3D)",
            "text": "The application does not protect the\u00a0web page /badguys/templates/about.html from clickjacking attacks in legacy browsers, by using framebusting scripts."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "properties": {
                    "methodName": null,
                    "methodLine": 4,
                    "domType": "Comment",
                    "nodeID": 6026,
                    "fullName": "<"
                  },
                  "endColumn": 2,
                  "sourceLanguage": "javascript",
                  "startColumn": 1,
                  "startLine": 4
                },
                "artifactLocation": {
                  "uri": "badguys/templates/about.html"
                }
              }
            }
          ],
          "properties": {
            "state": "TO_VERIFY",
            "status": "NEW",
            "severity": "LOW",
            "queryID": 4267131875844504913,
            "foundAt": "2025-07-02T18:27:00Z",
            "firstScanID": "a65a7cee-76a6-4389-976a-a07fec66c8e2",
            "firstFoundAt": "2025-07-02T18:27:00Z",
            "cweID": 79,
            "cvssScore": 3.913,
            "confidenceLevel": 0,
            "compliances": [
              "SANS top 25",
              "ASD STIG 6.1",
              "CWE top 25",
              "MOIS(KISA) Secure Coding 2021",
              "OWASP ASVS",
              "OWASP Top 10 2021",
              "PCI DSS v4.0"
            ]
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": null,
                              "methodLine": 4,
                              "domType": "Comment",
                              "nodeID": 6026,
                              "fullName": "<"
                            },
                            "endColumn": 2,
                            "sourceLanguage": "javascript",
                            "startColumn": 1,
                            "startLine": 4
                          },
                          "artifactLocation": {
                            "uri": "badguys/templates/about.html"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=TeQcYkZyTekLrU6IqRMekcFbANs%3D",
          "partialFingerprints": {
            "similarityID": "614638164",
            "queryKey": "JavaScript_Low_Visibility.Potential_Clickjacking_on_Legacy_Browsers",
            "nodeFilePathsSha256": "214f264da7b26a8f248ed74a3d3ef310a9ec508d597a6e624703c10ba2f606ed"
          },
          "ruleId": "JavaScript_Low_Visibility.Potential_Clickjacking_on_Legacy_Browsers"
        },
        {
          "message": {
            "markdown": "A Content Security Policy is not explicitly defined within the web-application. [View in CheckmarxOne](https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=l2pquZzs%2FvcC1yYl8T0nAp8rAOw%3D)",
            "text": "A Content Security Policy is not explicitly defined within the web-application."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "properties": {
                    "methodName": null,
                    "methodLine": 1,
                    "domType": "NamespaceDecl",
                    "nodeID": 3610,
                    "fullName": "CxPYNS_e5742d14"
                  },
                  "sourceLanguage": "python",
                  "startColumn": 1,
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "badguys/settings.py"
                }
              }
            }
          ],
          "properties": {
            "state": "TO_VERIFY",
            "status": "NEW",
            "severity": "LOW",
            "queryID": 8455083761984522303,
            "foundAt": "2025-07-02T18:27:00Z",
            "firstScanID": "a65a7cee-76a6-4389-976a-a07fec66c8e2",
            "firstFoundAt": "2025-07-02T18:27:00Z",
            "cweID": 346,
            "cvssScore": 2.3188,
            "confidenceLevel": 0,
            "compliances": [
              "PCI DSS v4.0",
              "OWASP ASVS",
              "OWASP Top 10 2021"
            ]
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": null,
                              "methodLine": 1,
                              "domType": "NamespaceDecl",
                              "nodeID": 3610,
                              "fullName": "CxPYNS_e5742d14"
                            },
                            "sourceLanguage": "python",
                            "startColumn": 1,
                            "startLine": 1
                          },
                          "artifactLocation": {
                            "uri": "badguys/settings.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=l2pquZzs%2FvcC1yYl8T0nAp8rAOw%3D",
          "partialFingerprints": {
            "similarityID": "781218675",
            "queryKey": "Python_Low_Visibility.Missing_Content_Security_Policy",
            "nodeFilePathsSha256": "5cf79a6eb63854f43a84097b2e3f318d8390c35de85e2089c33a3968b705ae98"
          },
          "ruleId": "Python_Low_Visibility.Missing_Content_Security_Policy"
        },
        {
          "message": {
            "markdown": "A Content Security Policy is not explicitly defined within the web-application. [View in CheckmarxOne](https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=pah5xFS0pUiD8MWmH6v%2FydQWaf8%3D)",
            "text": "A Content Security Policy is not explicitly defined within the web-application."
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "region": {
                  "properties": {
                    "methodName": null,
                    "methodLine": 99,
                    "domType": "Declarator",
                    "nodeID": 3764,
                    "fullName": "CxPYNS_e5742d14.MIDDLEWARE_CLASSES"
                  },
                  "endColumn": 19,
                  "sourceLanguage": "python",
                  "startColumn": 1,
                  "startLine": 99
                },
                "artifactLocation": {
                  "uri": "badguys/settings.py"
                }
              }
            }
          ],
          "properties": {
            "state": "TO_VERIFY",
            "status": "NEW",
            "severity": "LOW",
            "queryID": 8455083761984522303,
            "foundAt": "2025-07-02T18:27:00Z",
            "firstScanID": "a65a7cee-76a6-4389-976a-a07fec66c8e2",
            "firstFoundAt": "2025-07-02T18:27:00Z",
            "cweID": 346,
            "cvssScore": 2.3188,
            "confidenceLevel": 0,
            "compliances": [
              "PCI DSS v4.0",
              "OWASP ASVS",
              "OWASP Top 10 2021"
            ]
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "region": {
                            "properties": {
                              "methodName": null,
                              "methodLine": 99,
                              "domType": "Declarator",
                              "nodeID": 3764,
                              "fullName": "CxPYNS_e5742d14.MIDDLEWARE_CLASSES"
                            },
                            "endColumn": 19,
                            "sourceLanguage": "python",
                            "startColumn": 1,
                            "startLine": 99
                          },
                          "artifactLocation": {
                            "uri": "badguys/settings.py"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "hostedViewerUri": "https://ast.checkmarx.net/sast-results/44779275-8597-4882-ae95-c843d0445845/127418ed-1a40-4473-b50b-6a8555e1d36c?resultId=pah5xFS0pUiD8MWmH6v%2FydQWaf8%3D",
          "partialFingerprints": {
            "similarityID": "761421811",
            "queryKey": "Python_Low_Visibility.Missing_Content_Security_Policy",
            "nodeFilePathsSha256": "5cf79a6eb63854f43a84097b2e3f318d8390c35de85e2089c33a3968b705ae98"
          },
          "ruleId": "Python_Low_Visibility.Missing_Content_Security_Policy"
        }
      ],
      "automationDetails": {
        "description": {
          "text": "Static analysis scan with CheckmarxOne SAST"
        },
        "guid": "127418ed-1a40-4473-b50b-6a8555e1d36c",
        "id": "projectid/44779275-8597-4882-ae95-c843d0445845/scanid/127418ed-1a40-4473-b50b-6a8555e1d36c/",
        "correlationGuid": "44779275-8597-4882-ae95-c843d0445845"
      },
      "columnKind": "unicodeCodePoints",
      "versionControlProvenance": [
        {
          "branch": "master",
          "properties": {
            "sourceType": "github",
            "sourceOrigin": "webapp"
          },
          "repositoryUri": "https://github.com/cx-nathan-leach/lets-be-bad-guys.git",
          "asOfTimeUtc": "2025-07-02T18:26:16.562424Z"
        }
      ]
    }
  ],
  "version": "2.1.0",
  "properties": {
    "platform": "CheckmarxOne",
    "reportCompiler": "cxone_sarif/0.0.0",
    "scanId": "127418ed-1a40-4473-b50b-6a8555e1d36c",
    "scanDetails": {
      "id": "127418ed-1a40-4473-b50b-6a8555e1d36c",
      "status": "Completed",
      "statusDetails": [
        {
          "name": "general",
          "status": "Completed",
          "details": "",
          "startDate": "2025-07-02T18:26:16.562424Z",
          "endDate": "2025-07-02T18:28:27.542382Z"
        },
        {
          "name": "apisec",
          "status": "Completed",
          "details": "",
          "startDate": "2025-07-02T18:27:03.658875Z",
          "endDate": "2025-07-02T18:27:04.365865Z"
        },
        {
          "name": "sast",
          "status": "Completed",
          "details": "",
          "loc": 14221,
          "startDate": "2025-07-02T18:26:18.732402Z",
          "endDate": "2025-07-02T18:27:03.657028Z"
        },
        {
          "name": "sca",
          "status": "Completed",
          "details": "",
          "startDate": "2025-07-02T18:26:18.730751Z",
          "endDate": "2025-07-02T18:28:27.345198Z"
        },
        {
          "name": "containers",
          "status": "Completed",
          "details": "",
          "startDate": "2025-07-02T18:26:18.729136Z",
          "endDate": "2025-07-02T18:26:39.22519Z"
        },
        {
          "name": "kics",
          "status": "Completed",
          "details": "",
          "startDate": "2025-07-02T18:26:18.734772Z",
          "endDate": "2025-07-02T18:26:21.373656Z"
        }
      ],
      "branch": "master",
      "createdAt": "2025-07-02T18:26:16.562424Z",
      "updatedAt": "2025-07-02T18:28:27.542382Z",
      "projectId": "44779275-8597-4882-ae95-c843d0445845",
      "projectName": "lets-be-bad-guys",
      "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36",
      "initiator": "nathan.leach@checkmarx.com",
      "tags": {},
      "metadata": {
        "id": "127418ed-1a40-4473-b50b-6a8555e1d36c",
        "type": "git",
        "Handler": {
          "GitHandler": {
            "branch": "master",
            "repo_url": "https://github.com/cx-nathan-leach/lets-be-bad-guys.git",
            "credentials": {
              "value": "*****",
              "username": "*****"
            },
            "skipSubModules": false
          }
        },
        "configs": [
          {
            "type": "sast",
            "value": {
              "incremental": "false"
            }
          },
          {
            "type": "sca",
            "value": {
              "enableContainersScan": "false"
            }
          },
          {
            "type": "containers"
          },
          {
            "type": "kics"
          },
          {
            "type": "apisec"
          }
        ],
        "project": {
          "id": "44779275-8597-4882-ae95-c843d0445845"
        },
        "created_at": {
          "nanos": 436735768,
          "seconds": 1751480776
        }
      },
      "engines": [
        "sast",
        "sca",
        "containers",
        "kics",
        "apisec"
      ],
      "sourceType": "github",
      "sourceOrigin": "webapp"
    },
    "projectDetails": {
      "id": "44779275-8597-4882-ae95-c843d0445845",
      "name": "lets-be-bad-guys",
      "tenantId": "6a365cad-e0a5-4826-9c9d-ab1a1bb21630",
      "createdAt": "2025-07-02T18:24:33.0527Z",
      "updatedAt": "2025-07-02T18:24:33.0527Z",
      "groups": [],
      "tags": {},
      "repoUrl": "",
      "mainBranch": "",
      "criticality": 3,
      "privatePackage": false,
      "imported_proj_name": "",
      "applicationIds": []
    },
    "versions": {
      "CxOne": "3.40.0",
      "SAST": "9.7.3",
      "KICS": "2.1.10"
    }
  },
  "$schema": "https://docs.oasis-open.org/sarif/sarif/v2.1.0/cs01/schemas/sarif-external-property-file-schema-2.1.0.json"
}